(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
  [804],
  {
    56335: function (w, S, C) {
      'use strict';
      function sheetForTag(w) {
        if (w.sheet) return w.sheet;
        for (var S = 0; S < document.styleSheets.length; S++)
          if (document.styleSheets[S].ownerNode === w) return document.styleSheets[S];
      }
      function createStyleElement(w) {
        var S = document.createElement('style');
        return (
          S.setAttribute('data-emotion', w.key),
          void 0 !== w.nonce && S.setAttribute('nonce', w.nonce),
          S.appendChild(document.createTextNode('')),
          S.setAttribute('data-s', ''),
          S
        );
      }
      C.d(S, {
        Z: function () {
          return createCache;
        }
      });
      var I = (function () {
          function StyleSheet(w) {
            var S = this;
            (this._insertTag = function (w) {
              var C;
              (C =
                0 === S.tags.length
                  ? S.insertionPoint
                    ? S.insertionPoint.nextSibling
                    : S.prepend
                    ? S.container.firstChild
                    : S.before
                  : S.tags[S.tags.length - 1].nextSibling),
                S.container.insertBefore(w, C),
                S.tags.push(w);
            }),
              (this.isSpeedy = void 0 === w.speedy || w.speedy),
              (this.tags = []),
              (this.ctr = 0),
              (this.nonce = w.nonce),
              (this.key = w.key),
              (this.container = w.container),
              (this.prepend = w.prepend),
              (this.insertionPoint = w.insertionPoint),
              (this.before = null);
          }
          var w = StyleSheet.prototype;
          return (
            (w.hydrate = function (w) {
              w.forEach(this._insertTag);
            }),
            (w.insert = function (w) {
              this.ctr % (this.isSpeedy ? 65e3 : 1) == 0 && this._insertTag(createStyleElement(this));
              var S = this.tags[this.tags.length - 1];
              if (this.isSpeedy) {
                var C = sheetForTag(S);
                try {
                  C.insertRule(w, C.cssRules.length);
                } catch (w) {}
              } else S.appendChild(document.createTextNode(w));
              this.ctr++;
            }),
            (w.flush = function () {
              this.tags.forEach(function (w) {
                return w.parentNode && w.parentNode.removeChild(w);
              }),
                (this.tags = []),
                (this.ctr = 0);
            }),
            StyleSheet
          );
        })(),
        $ = Math.abs,
        er = String.fromCharCode,
        en = Object.assign;
      function hash(w, S) {
        return 45 ^ Utility_charat(w, 0)
          ? (((((((S << 2) ^ Utility_charat(w, 0)) << 2) ^ Utility_charat(w, 1)) << 2) ^ Utility_charat(w, 2)) << 2) ^
              Utility_charat(w, 3)
          : 0;
      }
      function Utility_match(w, S) {
        return (w = S.exec(w)) ? w[0] : w;
      }
      function Utility_replace(w, S, C) {
        return w.replace(S, C);
      }
      function indexof(w, S) {
        return w.indexOf(S);
      }
      function Utility_charat(w, S) {
        return 0 | w.charCodeAt(S);
      }
      function Utility_substr(w, S, C) {
        return w.slice(S, C);
      }
      function Utility_strlen(w) {
        return w.length;
      }
      function Utility_append(w, S) {
        return S.push(w), w;
      }
      function Utility_combine(w, S) {
        return w.map(S).join('');
      }
      var ei = 1,
        eo = 1,
        es = 0,
        el = 0,
        ec = 0,
        eu = '';
      function node(w, S, C, I, $, er, en) {
        return {
          value: w,
          root: S,
          parent: C,
          type: I,
          props: $,
          children: er,
          line: ei,
          column: eo,
          length: en,
          return: ''
        };
      }
      function Tokenizer_copy(w, S) {
        return en(node('', null, null, '', null, null, 0), w, { length: -w.length }, S);
      }
      function Tokenizer_char() {
        return ec;
      }
      function prev() {
        return (ec = el > 0 ? Utility_charat(eu, --el) : 0), eo--, 10 === ec && ((eo = 1), ei--), ec;
      }
      function next() {
        return (ec = el < es ? Utility_charat(eu, el++) : 0), eo++, 10 === ec && ((eo = 1), ei++), ec;
      }
      function peek() {
        return Utility_charat(eu, el);
      }
      function token(w) {
        switch (w) {
          case 0:
          case 9:
          case 10:
          case 13:
          case 32:
            return 5;
          case 33:
          case 43:
          case 44:
          case 47:
          case 62:
          case 64:
          case 126:
          case 59:
          case 123:
          case 125:
            return 4;
          case 58:
            return 3;
          case 34:
          case 39:
          case 40:
          case 91:
            return 2;
          case 41:
          case 93:
            return 1;
        }
        return 0;
      }
      function alloc(w) {
        return (ei = eo = 1), (es = Utility_strlen((eu = w))), (el = 0), [];
      }
      function delimit(w) {
        var S, C;
        return ((S = el - 1),
        (C = delimiter(91 === w ? w + 2 : 40 === w ? w + 1 : w)),
        Utility_substr(eu, S, C)).trim();
      }
      function whitespace(w) {
        for (; (ec = peek()); )
          if (ec < 33) next();
          else break;
        return token(w) > 2 || token(ec) > 3 ? '' : ' ';
      }
      function escaping(w, S) {
        for (
          var C;
          --S && next() && !(ec < 48) && !(ec > 102) && (!(ec > 57) || !(ec < 65)) && (!(ec > 70) || !(ec < 97));

        );
        return (C = el + (S < 6 && 32 == peek() && 32 == next())), Utility_substr(eu, w, C);
      }
      function delimiter(w) {
        for (; next(); )
          switch (ec) {
            case w:
              return el;
            case 34:
            case 39:
              34 !== w && 39 !== w && delimiter(ec);
              break;
            case 40:
              41 === w && delimiter(w);
              break;
            case 92:
              next();
          }
        return el;
      }
      function commenter(w, S) {
        for (; next(); )
          if (w + ec === 57) break;
          else if (w + ec === 84 && 47 === peek()) break;
        return '/*' + Utility_substr(eu, S, el - 1) + '*' + er(47 === w ? w : next());
      }
      function identifier(w) {
        for (; !token(peek()); ) next();
        return Utility_substr(eu, w, el);
      }
      var ed = '-ms-',
        eh = '-moz-',
        ef = '-webkit-',
        ep = 'comm',
        em = 'rule',
        eg = 'decl',
        ey = '@keyframes';
      function Serializer_serialize(w, S) {
        for (var C = '', I = w.length, $ = 0; $ < I; $++) C += S(w[$], $, w, S) || '';
        return C;
      }
      function stringify(w, S, C, I) {
        switch (w.type) {
          case '@layer':
            if (w.children.length) break;
          case '@import':
          case eg:
            return (w.return = w.return || w.value);
          case ep:
            return '';
          case ey:
            return (w.return = w.value + '{' + Serializer_serialize(w.children, I) + '}');
          case em:
            w.value = w.props.join(',');
        }
        return Utility_strlen((C = Serializer_serialize(w.children, I))) ? (w.return = w.value + '{' + C + '}') : '';
      }
      function middleware(w) {
        var S = w.length;
        return function (C, I, $, er) {
          for (var en = '', ei = 0; ei < S; ei++) en += w[ei](C, I, $, er) || '';
          return en;
        };
      }
      function rulesheet(w) {
        return function (S) {
          !S.root && (S = S.return) && w(S);
        };
      }
      function compile(w) {
        var S;
        return (S = parse('', null, null, null, [''], (w = alloc(w)), 0, [0], w)), (eu = ''), S;
      }
      function parse(w, S, C, I, $, en, ei, eo, es) {
        for (
          var ec = 0,
            eu = 0,
            ed = ei,
            eh = 0,
            ef = 0,
            ep = 0,
            em = 1,
            eg = 1,
            ey = 1,
            ev = 0,
            eb = '',
            e_ = $,
            ex = en,
            ew = I,
            ek = eb;
          eg;

        )
          switch (((ep = ev), (ev = next()))) {
            case 40:
              if (108 != ep && 58 == Utility_charat(ek, ed - 1)) {
                -1 != indexof((ek += Utility_replace(delimit(ev), '&', '&\f')), '&\f') && (ey = -1);
                break;
              }
            case 34:
            case 39:
            case 91:
              ek += delimit(ev);
              break;
            case 9:
            case 10:
            case 13:
            case 32:
              ek += whitespace(ep);
              break;
            case 92:
              ek += escaping(el - 1, 7);
              continue;
            case 47:
              switch (peek()) {
                case 42:
                case 47:
                  Utility_append(comment(commenter(next(), el), S, C), es);
                  break;
                default:
                  ek += '/';
              }
              break;
            case 123 * em:
              eo[ec++] = Utility_strlen(ek) * ey;
            case 125 * em:
            case 59:
            case 0:
              switch (ev) {
                case 0:
                case 125:
                  eg = 0;
                case 59 + eu:
                  -1 == ey && (ek = Utility_replace(ek, /\f/g, '')),
                    ef > 0 &&
                      Utility_strlen(ek) - ed &&
                      Utility_append(
                        ef > 32
                          ? declaration(ek + ';', I, C, ed - 1)
                          : declaration(Utility_replace(ek, ' ', '') + ';', I, C, ed - 2),
                        es
                      );
                  break;
                case 59:
                  ek += ';';
                default:
                  if (
                    (Utility_append((ew = ruleset(ek, S, C, ec, eu, $, eo, eb, (e_ = []), (ex = []), ed)), en),
                    123 === ev)
                  ) {
                    if (0 === eu) parse(ek, S, ew, ew, e_, en, ed, eo, ex);
                    else
                      switch (99 === eh && 110 === Utility_charat(ek, 3) ? 100 : eh) {
                        case 100:
                        case 108:
                        case 109:
                        case 115:
                          parse(
                            w,
                            ew,
                            ew,
                            I && Utility_append(ruleset(w, ew, ew, 0, 0, $, eo, eb, $, (e_ = []), ed), ex),
                            $,
                            ex,
                            ed,
                            eo,
                            I ? e_ : ex
                          );
                          break;
                        default:
                          parse(ek, ew, ew, ew, [''], ex, 0, eo, ex);
                      }
                  }
              }
              (ec = eu = ef = 0), (em = ey = 1), (eb = ek = ''), (ed = ei);
              break;
            case 58:
              (ed = 1 + Utility_strlen(ek)), (ef = ep);
            default:
              if (em < 1) {
                if (123 == ev) --em;
                else if (125 == ev && 0 == em++ && 125 == prev()) continue;
              }
              switch (((ek += er(ev)), ev * em)) {
                case 38:
                  ey = eu > 0 ? 1 : ((ek += '\f'), -1);
                  break;
                case 44:
                  (eo[ec++] = (Utility_strlen(ek) - 1) * ey), (ey = 1);
                  break;
                case 64:
                  45 === peek() && (ek += delimit(next())),
                    (eh = peek()),
                    (eu = ed = Utility_strlen((eb = ek += identifier(el)))),
                    ev++;
                  break;
                case 45:
                  45 === ep && 2 == Utility_strlen(ek) && (em = 0);
              }
          }
        return en;
      }
      function ruleset(w, S, C, I, er, en, ei, eo, es, el, ec) {
        for (var eu = er - 1, ed = 0 === er ? en : [''], eh = ed.length, ef = 0, ep = 0, eg = 0; ef < I; ++ef)
          for (var ey = 0, ev = Utility_substr(w, eu + 1, (eu = $((ep = ei[ef])))), eb = w; ey < eh; ++ey)
            (eb = (ep > 0 ? ed[ey] + ' ' + ev : Utility_replace(ev, /&\f/g, ed[ey])).trim()) && (es[eg++] = eb);
        return node(w, S, C, 0 === er ? em : eo, es, el, ec);
      }
      function comment(w, S, C) {
        return node(w, S, C, ep, er(Tokenizer_char()), Utility_substr(w, 2, -2), 0);
      }
      function declaration(w, S, C, I) {
        return node(w, S, C, eg, Utility_substr(w, 0, I), Utility_substr(w, I + 1, -1), I);
      }
      var identifierWithPointTracking = function (w, S, C) {
          for (var I = 0, $ = 0; (I = $), ($ = peek()), 38 === I && 12 === $ && (S[C] = 1), !token($); ) next();
          return Utility_substr(eu, w, el);
        },
        toRules = function (w, S) {
          var C = -1,
            I = 44;
          do
            switch (token(I)) {
              case 0:
                38 === I && 12 === peek() && (S[C] = 1), (w[C] += identifierWithPointTracking(el - 1, S, C));
                break;
              case 2:
                w[C] += delimit(I);
                break;
              case 4:
                if (44 === I) {
                  (w[++C] = 58 === peek() ? '&\f' : ''), (S[C] = w[C].length);
                  break;
                }
              default:
                w[C] += er(I);
            }
          while ((I = next()));
          return w;
        },
        getRules = function (w, S) {
          var C;
          return (C = toRules(alloc(w), S)), (eu = ''), C;
        },
        ev = new WeakMap(),
        compat = function (w) {
          if ('rule' === w.type && w.parent && !(w.length < 1)) {
            for (var S = w.value, C = w.parent, I = w.column === C.column && w.line === C.line; 'rule' !== C.type; )
              if (!(C = C.parent)) return;
            if ((1 !== w.props.length || 58 === S.charCodeAt(0) || ev.get(C)) && !I) {
              ev.set(w, !0);
              for (var $ = [], er = getRules(S, $), en = C.props, ei = 0, eo = 0; ei < er.length; ei++)
                for (var es = 0; es < en.length; es++, eo++)
                  w.props[eo] = $[ei] ? er[ei].replace(/&\f/g, en[es]) : en[es] + ' ' + er[ei];
            }
          }
        },
        removeLabel = function (w) {
          if ('decl' === w.type) {
            var S = w.value;
            108 === S.charCodeAt(0) && 98 === S.charCodeAt(2) && ((w.return = ''), (w.value = ''));
          }
        };
      function emotion_cache_browser_esm_prefix(w, S) {
        switch (hash(w, S)) {
          case 5103:
            return ef + 'print-' + w + w;
          case 5737:
          case 4201:
          case 3177:
          case 3433:
          case 1641:
          case 4457:
          case 2921:
          case 5572:
          case 6356:
          case 5844:
          case 3191:
          case 6645:
          case 3005:
          case 6391:
          case 5879:
          case 5623:
          case 6135:
          case 4599:
          case 4855:
          case 4215:
          case 6389:
          case 5109:
          case 5365:
          case 5621:
          case 3829:
            return ef + w + w;
          case 5349:
          case 4246:
          case 4810:
          case 6968:
          case 2756:
            return ef + w + eh + w + ed + w + w;
          case 6828:
          case 4268:
            return ef + w + ed + w + w;
          case 6165:
            return ef + w + ed + 'flex-' + w + w;
          case 5187:
            return ef + w + Utility_replace(w, /(\w+).+(:[^]+)/, ef + 'box-$1$2' + ed + 'flex-$1$2') + w;
          case 5443:
            return ef + w + ed + 'flex-item-' + Utility_replace(w, /flex-|-self/, '') + w;
          case 4675:
            return ef + w + ed + 'flex-line-pack' + Utility_replace(w, /align-content|flex-|-self/, '') + w;
          case 5548:
            return ef + w + ed + Utility_replace(w, 'shrink', 'negative') + w;
          case 5292:
            return ef + w + ed + Utility_replace(w, 'basis', 'preferred-size') + w;
          case 6060:
            return (
              ef + 'box-' + Utility_replace(w, '-grow', '') + ef + w + ed + Utility_replace(w, 'grow', 'positive') + w
            );
          case 4554:
            return ef + Utility_replace(w, /([^-])(transform)/g, '$1' + ef + '$2') + w;
          case 6187:
            return (
              Utility_replace(
                Utility_replace(Utility_replace(w, /(zoom-|grab)/, ef + '$1'), /(image-set)/, ef + '$1'),
                w,
                ''
              ) + w
            );
          case 5495:
          case 3959:
            return Utility_replace(w, /(image-set\([^]*)/, ef + '$1$`$1');
          case 4968:
            return (
              Utility_replace(
                Utility_replace(w, /(.+:)(flex-)?(.*)/, ef + 'box-pack:$3' + ed + 'flex-pack:$3'),
                /s.+-b[^;]+/,
                'justify'
              ) +
              ef +
              w +
              w
            );
          case 4095:
          case 3583:
          case 4068:
          case 2532:
            return Utility_replace(w, /(.+)-inline(.+)/, ef + '$1$2') + w;
          case 8116:
          case 7059:
          case 5753:
          case 5535:
          case 5445:
          case 5701:
          case 4933:
          case 4677:
          case 5533:
          case 5789:
          case 5021:
          case 4765:
            if (Utility_strlen(w) - 1 - S > 6)
              switch (Utility_charat(w, S + 1)) {
                case 109:
                  if (45 !== Utility_charat(w, S + 4)) break;
                case 102:
                  return (
                    Utility_replace(
                      w,
                      /(.+:)(.+)-([^]+)/,
                      '$1' + ef + '$2-$3$1' + eh + (108 == Utility_charat(w, S + 3) ? '$3' : '$2-$3')
                    ) + w
                  );
                case 115:
                  return ~indexof(w, 'stretch')
                    ? emotion_cache_browser_esm_prefix(Utility_replace(w, 'stretch', 'fill-available'), S) + w
                    : w;
              }
            break;
          case 4949:
            if (115 !== Utility_charat(w, S + 1)) break;
          case 6444:
            switch (Utility_charat(w, Utility_strlen(w) - 3 - (~indexof(w, '!important') && 10))) {
              case 107:
                return Utility_replace(w, ':', ':' + ef) + w;
              case 101:
                return (
                  Utility_replace(
                    w,
                    /(.+:)([^;!]+)(;|!.+)?/,
                    '$1' +
                      ef +
                      (45 === Utility_charat(w, 14) ? 'inline-' : '') +
                      'box$3$1' +
                      ef +
                      '$2$3$1' +
                      ed +
                      '$2box$3'
                  ) + w
                );
            }
            break;
          case 5936:
            switch (Utility_charat(w, S + 11)) {
              case 114:
                return ef + w + ed + Utility_replace(w, /[svh]\w+-[tblr]{2}/, 'tb') + w;
              case 108:
                return ef + w + ed + Utility_replace(w, /[svh]\w+-[tblr]{2}/, 'tb-rl') + w;
              case 45:
                return ef + w + ed + Utility_replace(w, /[svh]\w+-[tblr]{2}/, 'lr') + w;
            }
            return ef + w + ed + w + w;
        }
        return w;
      }
      var eb = [
          function (w, S, C, I) {
            if (w.length > -1 && !w.return)
              switch (w.type) {
                case eg:
                  w.return = emotion_cache_browser_esm_prefix(w.value, w.length);
                  break;
                case ey:
                  return Serializer_serialize(
                    [Tokenizer_copy(w, { value: Utility_replace(w.value, '@', '@' + ef) })],
                    I
                  );
                case em:
                  if (w.length)
                    return Utility_combine(w.props, function (S) {
                      switch (Utility_match(S, /(::plac\w+|:read-\w+)/)) {
                        case ':read-only':
                        case ':read-write':
                          return Serializer_serialize(
                            [Tokenizer_copy(w, { props: [Utility_replace(S, /:(read-\w+)/, ':' + eh + '$1')] })],
                            I
                          );
                        case '::placeholder':
                          return Serializer_serialize(
                            [
                              Tokenizer_copy(w, { props: [Utility_replace(S, /:(plac\w+)/, ':' + ef + 'input-$1')] }),
                              Tokenizer_copy(w, { props: [Utility_replace(S, /:(plac\w+)/, ':' + eh + '$1')] }),
                              Tokenizer_copy(w, { props: [Utility_replace(S, /:(plac\w+)/, ed + 'input-$1')] })
                            ],
                            I
                          );
                      }
                      return '';
                    });
              }
          }
        ],
        createCache = function (w) {
          var S,
            C,
            $ = w.key;
          if ('css' === $) {
            var er = document.querySelectorAll('style[data-emotion]:not([data-s])');
            Array.prototype.forEach.call(er, function (w) {
              -1 !== w.getAttribute('data-emotion').indexOf(' ') &&
                (document.head.appendChild(w), w.setAttribute('data-s', ''));
            });
          }
          var en = w.stylisPlugins || eb,
            ei = {},
            eo = [];
          (S = w.container || document.head),
            Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="' + $ + ' "]'), function (w) {
              for (var S = w.getAttribute('data-emotion').split(' '), C = 1; C < S.length; C++) ei[S[C]] = !0;
              eo.push(w);
            });
          var es = middleware(
              [compat, removeLabel].concat(en, [
                stringify,
                rulesheet(function (w) {
                  C.insert(w);
                })
              ])
            ),
            el = {
              key: $,
              sheet: new I({
                key: $,
                container: S,
                nonce: w.nonce,
                speedy: w.speedy,
                prepend: w.prepend,
                insertionPoint: w.insertionPoint
              }),
              nonce: w.nonce,
              inserted: ei,
              registered: {},
              insert: function (w, S, I, $) {
                (C = I),
                  Serializer_serialize(compile(w ? w + '{' + S.styles + '}' : S.styles), es),
                  $ && (el.inserted[S.name] = !0);
              }
            };
          return el.sheet.hydrate(eo), el;
        };
    },
    67008: function (w, S, C) {
      'use strict';
      C.d(S, {
        Z: function () {
          return er;
        }
      });
      var I = C(44935),
        $ =
          /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
        er = (0, I.Z)(function (w) {
          return $.test(w) || (111 === w.charCodeAt(0) && 110 === w.charCodeAt(1) && 91 > w.charCodeAt(2));
        });
    },
    44935: function (w, S, C) {
      'use strict';
      function memoize(w) {
        var S = Object.create(null);
        return function (C) {
          return void 0 === S[C] && (S[C] = w(C)), S[C];
        };
      }
      C.d(S, {
        Z: function () {
          return memoize;
        }
      });
    },
    65673: function (w, S, C) {
      'use strict';
      C.d(S, {
        T: function () {
          return eo;
        },
        a: function () {
          return ThemeProvider;
        },
        i: function () {
          return en;
        },
        w: function () {
          return withEmotionCache;
        }
      });
      var I = C(2265),
        $ = C(56335),
        er = C(13428),
        weakMemoize = function (w) {
          var S = new WeakMap();
          return function (C) {
            if (S.has(C)) return S.get(C);
            var I = w(C);
            return S.set(C, I), I;
          };
        };
      C(4067), C(7599);
      var en = !0,
        ei = I.createContext('undefined' != typeof HTMLElement ? (0, $.Z)({ key: 'css' }) : null);
      ei.Provider;
      var withEmotionCache = function (w) {
        return (0, I.forwardRef)(function (S, C) {
          return w(S, (0, I.useContext)(ei), C);
        });
      };
      en ||
        (withEmotionCache = function (w) {
          return function (S) {
            var C = (0, I.useContext)(ei);
            return null === C
              ? ((C = (0, $.Z)({ key: 'css' })), I.createElement(ei.Provider, { value: C }, w(S, C)))
              : w(S, C);
          };
        });
      var eo = I.createContext({}),
        es = weakMemoize(function (w) {
          return weakMemoize(function (S) {
            return 'function' == typeof S ? S(w) : (0, er.Z)({}, w, S);
          });
        }),
        ThemeProvider = function (w) {
          var S = I.useContext(eo);
          return w.theme !== S && (S = es(S)(w.theme)), I.createElement(eo.Provider, { value: S }, w.children);
        };
    },
    99538: function (w, S, C) {
      'use strict';
      C.d(S, {
        F4: function () {
          return keyframes;
        },
        xB: function () {
          return eo;
        }
      });
      var I = C(65673),
        $ = C(2265),
        er = C(94645),
        en = C(7599),
        ei = C(4067);
      C(56335), C(55487);
      var eo = (0, I.w)(function (w, S) {
        var C = w.styles,
          eo = (0, ei.O)([C], void 0, $.useContext(I.T));
        if (!I.i) {
          for (var es, el = eo.name, ec = eo.styles, eu = eo.next; void 0 !== eu; )
            (el += ' ' + eu.name), (ec += eu.styles), (eu = eu.next);
          var ed = !0 === S.compat,
            eh = S.insert('', { name: el, styles: ec }, S.sheet, ed);
          return ed
            ? null
            : $.createElement(
                'style',
                (((es = {})['data-emotion'] = S.key + '-global ' + el),
                (es.dangerouslySetInnerHTML = { __html: eh }),
                (es.nonce = S.sheet.nonce),
                es)
              );
        }
        var ef = $.useRef();
        return (
          (0, en.j)(
            function () {
              var w = S.key + '-global',
                C = new S.sheet.constructor({
                  key: w,
                  nonce: S.sheet.nonce,
                  container: S.sheet.container,
                  speedy: S.sheet.isSpeedy
                }),
                I = !1,
                $ = document.querySelector('style[data-emotion="' + w + ' ' + eo.name + '"]');
              return (
                S.sheet.tags.length && (C.before = S.sheet.tags[0]),
                null !== $ && ((I = !0), $.setAttribute('data-emotion', w), C.hydrate([$])),
                (ef.current = [C, I]),
                function () {
                  C.flush();
                }
              );
            },
            [S]
          ),
          (0, en.j)(
            function () {
              var w = ef.current,
                C = w[0];
              if (w[1]) {
                w[1] = !1;
                return;
              }
              if ((void 0 !== eo.next && (0, er.My)(S, eo.next, !0), C.tags.length)) {
                var I = C.tags[C.tags.length - 1].nextElementSibling;
                (C.before = I), C.flush();
              }
              S.insert('', eo, C, !1);
            },
            [S, eo.name]
          ),
          null
        );
      });
      function css() {
        for (var w = arguments.length, S = Array(w), C = 0; C < w; C++) S[C] = arguments[C];
        return (0, ei.O)(S);
      }
      var keyframes = function () {
        var w = css.apply(void 0, arguments),
          S = 'animation-' + w.name;
        return {
          name: S,
          styles: '@keyframes ' + S + '{' + w.styles + '}',
          anim: 1,
          toString: function () {
            return '_EMO_' + this.name + '_' + this.styles + '_EMO_';
          }
        };
      };
    },
    4067: function (w, S, C) {
      'use strict';
      function murmur2(w) {
        for (var S, C = 0, I = 0, $ = w.length; $ >= 4; ++I, $ -= 4)
          (S =
            (65535 &
              (S =
                (255 & w.charCodeAt(I)) |
                ((255 & w.charCodeAt(++I)) << 8) |
                ((255 & w.charCodeAt(++I)) << 16) |
                ((255 & w.charCodeAt(++I)) << 24))) *
              1540483477 +
            (((S >>> 16) * 59797) << 16)),
            (S ^= S >>> 24),
            (C =
              ((65535 & S) * 1540483477 + (((S >>> 16) * 59797) << 16)) ^
              ((65535 & C) * 1540483477 + (((C >>> 16) * 59797) << 16)));
        switch ($) {
          case 3:
            C ^= (255 & w.charCodeAt(I + 2)) << 16;
          case 2:
            C ^= (255 & w.charCodeAt(I + 1)) << 8;
          case 1:
            (C ^= 255 & w.charCodeAt(I)), (C = (65535 & C) * 1540483477 + (((C >>> 16) * 59797) << 16));
        }
        return (
          (C ^= C >>> 13),
          (((C = (65535 & C) * 1540483477 + (((C >>> 16) * 59797) << 16)) ^ (C >>> 15)) >>> 0).toString(36)
        );
      }
      C.d(S, {
        O: function () {
          return serializeStyles;
        }
      });
      var I,
        $ = C(7015),
        er = C(44935),
        en = /[A-Z]|^ms/g,
        ei = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
        isCustomProperty = function (w) {
          return 45 === w.charCodeAt(1);
        },
        isProcessableValue = function (w) {
          return null != w && 'boolean' != typeof w;
        },
        eo = (0, er.Z)(function (w) {
          return isCustomProperty(w) ? w : w.replace(en, '-$&').toLowerCase();
        }),
        processStyleValue = function (w, S) {
          switch (w) {
            case 'animation':
            case 'animationName':
              if ('string' == typeof S)
                return S.replace(ei, function (w, S, C) {
                  return (I = { name: S, styles: C, next: I }), S;
                });
          }
          return 1 === $.Z[w] || isCustomProperty(w) || 'number' != typeof S || 0 === S ? S : S + 'px';
        };
      function handleInterpolation(w, S, C) {
        if (null == C) return '';
        if (void 0 !== C.__emotion_styles) return C;
        switch (typeof C) {
          case 'boolean':
            return '';
          case 'object':
            if (1 === C.anim) return (I = { name: C.name, styles: C.styles, next: I }), C.name;
            if (void 0 !== C.styles) {
              var $ = C.next;
              if (void 0 !== $) for (; void 0 !== $; ) (I = { name: $.name, styles: $.styles, next: I }), ($ = $.next);
              return C.styles + ';';
            }
            return createStringFromObject(w, S, C);
          case 'function':
            if (void 0 !== w) {
              var er = I,
                en = C(w);
              return (I = er), handleInterpolation(w, S, en);
            }
        }
        if (null == S) return C;
        var ei = S[C];
        return void 0 !== ei ? ei : C;
      }
      function createStringFromObject(w, S, C) {
        var I = '';
        if (Array.isArray(C)) for (var $ = 0; $ < C.length; $++) I += handleInterpolation(w, S, C[$]) + ';';
        else
          for (var er in C) {
            var en = C[er];
            if ('object' != typeof en)
              null != S && void 0 !== S[en]
                ? (I += er + '{' + S[en] + '}')
                : isProcessableValue(en) && (I += eo(er) + ':' + processStyleValue(er, en) + ';');
            else if (Array.isArray(en) && 'string' == typeof en[0] && (null == S || void 0 === S[en[0]]))
              for (var ei = 0; ei < en.length; ei++)
                isProcessableValue(en[ei]) && (I += eo(er) + ':' + processStyleValue(er, en[ei]) + ';');
            else {
              var es = handleInterpolation(w, S, en);
              switch (er) {
                case 'animation':
                case 'animationName':
                  I += eo(er) + ':' + es + ';';
                  break;
                default:
                  I += er + '{' + es + '}';
              }
            }
          }
        return I;
      }
      var es = /label:\s*([^\s;\n{]+)\s*(;|$)/g,
        serializeStyles = function (w, S, C) {
          if (1 === w.length && 'object' == typeof w[0] && null !== w[0] && void 0 !== w[0].styles) return w[0];
          var $,
            er = !0,
            en = '';
          I = void 0;
          var ei = w[0];
          null == ei || void 0 === ei.raw ? ((er = !1), (en += handleInterpolation(C, S, ei))) : (en += ei[0]);
          for (var eo = 1; eo < w.length; eo++) (en += handleInterpolation(C, S, w[eo])), er && (en += ei[eo]);
          es.lastIndex = 0;
          for (var el = ''; null !== ($ = es.exec(en)); ) el += '-' + $[1];
          return { name: murmur2(en) + el, styles: en, next: I };
        };
    },
    7015: function (w, S, C) {
      'use strict';
      C.d(S, {
        Z: function () {
          return I;
        }
      });
      var I = {
        animationIterationCount: 1,
        aspectRatio: 1,
        borderImageOutset: 1,
        borderImageSlice: 1,
        borderImageWidth: 1,
        boxFlex: 1,
        boxFlexGroup: 1,
        boxOrdinalGroup: 1,
        columnCount: 1,
        columns: 1,
        flex: 1,
        flexGrow: 1,
        flexPositive: 1,
        flexShrink: 1,
        flexNegative: 1,
        flexOrder: 1,
        gridRow: 1,
        gridRowEnd: 1,
        gridRowSpan: 1,
        gridRowStart: 1,
        gridColumn: 1,
        gridColumnEnd: 1,
        gridColumnSpan: 1,
        gridColumnStart: 1,
        msGridRow: 1,
        msGridRowSpan: 1,
        msGridColumn: 1,
        msGridColumnSpan: 1,
        fontWeight: 1,
        lineHeight: 1,
        opacity: 1,
        order: 1,
        orphans: 1,
        tabSize: 1,
        widows: 1,
        zIndex: 1,
        zoom: 1,
        WebkitLineClamp: 1,
        fillOpacity: 1,
        floodOpacity: 1,
        stopOpacity: 1,
        strokeDasharray: 1,
        strokeDashoffset: 1,
        strokeMiterlimit: 1,
        strokeOpacity: 1,
        strokeWidth: 1
      };
    },
    7599: function (w, S, C) {
      'use strict';
      C.d(S, {
        L: function () {
          return en;
        },
        j: function () {
          return ei;
        }
      });
      var I,
        $ = C(2265),
        er = !!(I || (I = C.t($, 2))).useInsertionEffect && (I || (I = C.t($, 2))).useInsertionEffect,
        en =
          er ||
          function (w) {
            return w();
          },
        ei = er || $.useLayoutEffect;
    },
    94645: function (w, S, C) {
      'use strict';
      function getRegisteredStyles(w, S, C) {
        var I = '';
        return (
          C.split(' ').forEach(function (C) {
            void 0 !== w[C] ? S.push(w[C] + ';') : (I += C + ' ');
          }),
          I
        );
      }
      C.d(S, {
        My: function () {
          return insertStyles;
        },
        fp: function () {
          return getRegisteredStyles;
        },
        hC: function () {
          return registerStyles;
        }
      });
      var registerStyles = function (w, S, C) {
          var I = w.key + '-' + S.name;
          !1 === C && void 0 === w.registered[I] && (w.registered[I] = S.styles);
        },
        insertStyles = function (w, S, C) {
          registerStyles(w, S, C);
          var I = w.key + '-' + S.name;
          if (void 0 === w.inserted[S.name]) {
            var $ = S;
            do w.insert(S === $ ? '.' + I : '', $, w.sheet, !0), ($ = $.next);
            while (void 0 !== $);
          }
        };
    },
    34699: function (w, S) {
      'use strict';
      (S.byteLength = byteLength), (S.toByteArray = toByteArray), (S.fromByteArray = fromByteArray);
      for (
        var C = [],
          I = [],
          $ = 'undefined' != typeof Uint8Array ? Uint8Array : Array,
          er = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
          en = 0,
          ei = er.length;
        en < ei;
        ++en
      )
        (C[en] = er[en]), (I[er.charCodeAt(en)] = en);
      function getLens(w) {
        var S = w.length;
        if (S % 4 > 0) throw Error('Invalid string. Length must be a multiple of 4');
        var C = w.indexOf('=');
        -1 === C && (C = S);
        var I = C === S ? 0 : 4 - (C % 4);
        return [C, I];
      }
      function byteLength(w) {
        var S = getLens(w),
          C = S[0],
          I = S[1];
        return ((C + I) * 3) / 4 - I;
      }
      function _byteLength(w, S, C) {
        return ((S + C) * 3) / 4 - C;
      }
      function toByteArray(w) {
        var S,
          C,
          er = getLens(w),
          en = er[0],
          ei = er[1],
          eo = new $(_byteLength(w, en, ei)),
          es = 0,
          el = ei > 0 ? en - 4 : en;
        for (C = 0; C < el; C += 4)
          (S =
            (I[w.charCodeAt(C)] << 18) |
            (I[w.charCodeAt(C + 1)] << 12) |
            (I[w.charCodeAt(C + 2)] << 6) |
            I[w.charCodeAt(C + 3)]),
            (eo[es++] = (S >> 16) & 255),
            (eo[es++] = (S >> 8) & 255),
            (eo[es++] = 255 & S);
        return (
          2 === ei && ((S = (I[w.charCodeAt(C)] << 2) | (I[w.charCodeAt(C + 1)] >> 4)), (eo[es++] = 255 & S)),
          1 === ei &&
            ((S = (I[w.charCodeAt(C)] << 10) | (I[w.charCodeAt(C + 1)] << 4) | (I[w.charCodeAt(C + 2)] >> 2)),
            (eo[es++] = (S >> 8) & 255),
            (eo[es++] = 255 & S)),
          eo
        );
      }
      function tripletToBase64(w) {
        return C[(w >> 18) & 63] + C[(w >> 12) & 63] + C[(w >> 6) & 63] + C[63 & w];
      }
      function encodeChunk(w, S, C) {
        for (var I = [], $ = S; $ < C; $ += 3)
          I.push(tripletToBase64(((w[$] << 16) & 16711680) + ((w[$ + 1] << 8) & 65280) + (255 & w[$ + 2])));
        return I.join('');
      }
      function fromByteArray(w) {
        for (var S, I = w.length, $ = I % 3, er = [], en = 0, ei = I - $; en < ei; en += 16383)
          er.push(encodeChunk(w, en, en + 16383 > ei ? ei : en + 16383));
        return (
          1 === $
            ? er.push(C[(S = w[I - 1]) >> 2] + C[(S << 4) & 63] + '==')
            : 2 === $ && er.push(C[(S = (w[I - 2] << 8) + w[I - 1]) >> 10] + C[(S >> 4) & 63] + C[(S << 2) & 63] + '='),
          er.join('')
        );
      }
      (I['-'.charCodeAt(0)] = 62), (I['_'.charCodeAt(0)] = 63);
    },
    67133: function (w, S, C) {
      'use strict';
      /*!
       * The buffer module from node.js, for the browser.
       *
       * @author   Feross Aboukhadijeh <https://feross.org>
       * @license  MIT
       */ var I = C(34699),
        $ = C(19087),
        er =
          'function' == typeof Symbol && 'function' == typeof Symbol.for
            ? Symbol.for('nodejs.util.inspect.custom')
            : null;
      function typedArraySupport() {
        try {
          var w = new Uint8Array(1),
            S = {
              foo: function () {
                return 42;
              }
            };
          return Object.setPrototypeOf(S, Uint8Array.prototype), Object.setPrototypeOf(w, S), 42 === w.foo();
        } catch (w) {
          return !1;
        }
      }
      function createBuffer(w) {
        if (w > 2147483647) throw RangeError('The value "' + w + '" is invalid for option "size"');
        var S = new Uint8Array(w);
        return Object.setPrototypeOf(S, Buffer.prototype), S;
      }
      function Buffer(w, S, C) {
        if ('number' == typeof w) {
          if ('string' == typeof S)
            throw TypeError('The "string" argument must be of type string. Received type number');
          return allocUnsafe(w);
        }
        return from(w, S, C);
      }
      function from(w, S, C) {
        if ('string' == typeof w) return fromString(w, S);
        if (ArrayBuffer.isView(w)) return fromArrayView(w);
        if (null == w)
          throw TypeError(
            'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
              typeof w
          );
        if (
          isInstance(w, ArrayBuffer) ||
          (w && isInstance(w.buffer, ArrayBuffer)) ||
          ('undefined' != typeof SharedArrayBuffer &&
            (isInstance(w, SharedArrayBuffer) || (w && isInstance(w.buffer, SharedArrayBuffer))))
        )
          return fromArrayBuffer(w, S, C);
        if ('number' == typeof w)
          throw TypeError('The "value" argument must not be of type number. Received type number');
        var I = w.valueOf && w.valueOf();
        if (null != I && I !== w) return Buffer.from(I, S, C);
        var $ = fromObject(w);
        if ($) return $;
        if ('undefined' != typeof Symbol && null != Symbol.toPrimitive && 'function' == typeof w[Symbol.toPrimitive])
          return Buffer.from(w[Symbol.toPrimitive]('string'), S, C);
        throw TypeError(
          'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
            typeof w
        );
      }
      function assertSize(w) {
        if ('number' != typeof w) throw TypeError('"size" argument must be of type number');
        if (w < 0) throw RangeError('The value "' + w + '" is invalid for option "size"');
      }
      function alloc(w, S, C) {
        return (assertSize(w), w <= 0)
          ? createBuffer(w)
          : void 0 !== S
          ? 'string' == typeof C
            ? createBuffer(w).fill(S, C)
            : createBuffer(w).fill(S)
          : createBuffer(w);
      }
      function allocUnsafe(w) {
        return assertSize(w), createBuffer(w < 0 ? 0 : 0 | checked(w));
      }
      function fromString(w, S) {
        if ((('string' != typeof S || '' === S) && (S = 'utf8'), !Buffer.isEncoding(S)))
          throw TypeError('Unknown encoding: ' + S);
        var C = 0 | byteLength(w, S),
          I = createBuffer(C),
          $ = I.write(w, S);
        return $ !== C && (I = I.slice(0, $)), I;
      }
      function fromArrayLike(w) {
        for (var S = w.length < 0 ? 0 : 0 | checked(w.length), C = createBuffer(S), I = 0; I < S; I += 1)
          C[I] = 255 & w[I];
        return C;
      }
      function fromArrayView(w) {
        if (isInstance(w, Uint8Array)) {
          var S = new Uint8Array(w);
          return fromArrayBuffer(S.buffer, S.byteOffset, S.byteLength);
        }
        return fromArrayLike(w);
      }
      function fromArrayBuffer(w, S, C) {
        var I;
        if (S < 0 || w.byteLength < S) throw RangeError('"offset" is outside of buffer bounds');
        if (w.byteLength < S + (C || 0)) throw RangeError('"length" is outside of buffer bounds');
        return (
          Object.setPrototypeOf(
            (I =
              void 0 === S && void 0 === C
                ? new Uint8Array(w)
                : void 0 === C
                ? new Uint8Array(w, S)
                : new Uint8Array(w, S, C)),
            Buffer.prototype
          ),
          I
        );
      }
      function fromObject(w) {
        if (Buffer.isBuffer(w)) {
          var S,
            C = 0 | checked(w.length),
            I = createBuffer(C);
          return 0 === I.length || w.copy(I, 0, 0, C), I;
        }
        return void 0 !== w.length
          ? 'number' != typeof w.length || (S = w.length) != S
            ? createBuffer(0)
            : fromArrayLike(w)
          : 'Buffer' === w.type && Array.isArray(w.data)
          ? fromArrayLike(w.data)
          : void 0;
      }
      function checked(w) {
        if (w >= 2147483647) throw RangeError('Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes');
        return 0 | w;
      }
      function byteLength(w, S) {
        if (Buffer.isBuffer(w)) return w.length;
        if (ArrayBuffer.isView(w) || isInstance(w, ArrayBuffer)) return w.byteLength;
        if ('string' != typeof w)
          throw TypeError(
            'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof w
          );
        var C = w.length,
          I = arguments.length > 2 && !0 === arguments[2];
        if (!I && 0 === C) return 0;
        for (var $ = !1; ; )
          switch (S) {
            case 'ascii':
            case 'latin1':
            case 'binary':
              return C;
            case 'utf8':
            case 'utf-8':
              return utf8ToBytes(w).length;
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return 2 * C;
            case 'hex':
              return C >>> 1;
            case 'base64':
              return base64ToBytes(w).length;
            default:
              if ($) return I ? -1 : utf8ToBytes(w).length;
              (S = ('' + S).toLowerCase()), ($ = !0);
          }
      }
      function slowToString(w, S, C) {
        var I = !1;
        if (
          ((void 0 === S || S < 0) && (S = 0),
          S > this.length ||
            ((void 0 === C || C > this.length) && (C = this.length), C <= 0 || (C >>>= 0) <= (S >>>= 0)))
        )
          return '';
        for (w || (w = 'utf8'); ; )
          switch (w) {
            case 'hex':
              return hexSlice(this, S, C);
            case 'utf8':
            case 'utf-8':
              return utf8Slice(this, S, C);
            case 'ascii':
              return asciiSlice(this, S, C);
            case 'latin1':
            case 'binary':
              return latin1Slice(this, S, C);
            case 'base64':
              return base64Slice(this, S, C);
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return utf16leSlice(this, S, C);
            default:
              if (I) throw TypeError('Unknown encoding: ' + w);
              (w = (w + '').toLowerCase()), (I = !0);
          }
      }
      function swap(w, S, C) {
        var I = w[S];
        (w[S] = w[C]), (w[C] = I);
      }
      function bidirectionalIndexOf(w, S, C, I, $) {
        var er;
        if (0 === w.length) return -1;
        if (
          ('string' == typeof C
            ? ((I = C), (C = 0))
            : C > 2147483647
            ? (C = 2147483647)
            : C < -2147483648 && (C = -2147483648),
          (er = C = +C) != er && (C = $ ? 0 : w.length - 1),
          C < 0 && (C = w.length + C),
          C >= w.length)
        ) {
          if ($) return -1;
          C = w.length - 1;
        } else if (C < 0) {
          if (!$) return -1;
          C = 0;
        }
        if (('string' == typeof S && (S = Buffer.from(S, I)), Buffer.isBuffer(S)))
          return 0 === S.length ? -1 : arrayIndexOf(w, S, C, I, $);
        if ('number' == typeof S)
          return ((S &= 255), 'function' == typeof Uint8Array.prototype.indexOf)
            ? $
              ? Uint8Array.prototype.indexOf.call(w, S, C)
              : Uint8Array.prototype.lastIndexOf.call(w, S, C)
            : arrayIndexOf(w, [S], C, I, $);
        throw TypeError('val must be string, number or Buffer');
      }
      function arrayIndexOf(w, S, C, I, $) {
        var er,
          en = 1,
          ei = w.length,
          eo = S.length;
        if (
          void 0 !== I &&
          ('ucs2' === (I = String(I).toLowerCase()) || 'ucs-2' === I || 'utf16le' === I || 'utf-16le' === I)
        ) {
          if (w.length < 2 || S.length < 2) return -1;
          (en = 2), (ei /= 2), (eo /= 2), (C /= 2);
        }
        function read(w, S) {
          return 1 === en ? w[S] : w.readUInt16BE(S * en);
        }
        if ($) {
          var es = -1;
          for (er = C; er < ei; er++)
            if (read(w, er) === read(S, -1 === es ? 0 : er - es)) {
              if ((-1 === es && (es = er), er - es + 1 === eo)) return es * en;
            } else -1 !== es && (er -= er - es), (es = -1);
        } else
          for (C + eo > ei && (C = ei - eo), er = C; er >= 0; er--) {
            for (var el = !0, ec = 0; ec < eo; ec++)
              if (read(w, er + ec) !== read(S, ec)) {
                el = !1;
                break;
              }
            if (el) return er;
          }
        return -1;
      }
      function hexWrite(w, S, C, I) {
        C = Number(C) || 0;
        var $ = w.length - C;
        I ? (I = Number(I)) > $ && (I = $) : (I = $);
        var er = S.length;
        I > er / 2 && (I = er / 2);
        for (var en = 0; en < I; ++en) {
          var ei = parseInt(S.substr(2 * en, 2), 16);
          if (ei != ei) break;
          w[C + en] = ei;
        }
        return en;
      }
      function utf8Write(w, S, C, I) {
        return blitBuffer(utf8ToBytes(S, w.length - C), w, C, I);
      }
      function asciiWrite(w, S, C, I) {
        return blitBuffer(asciiToBytes(S), w, C, I);
      }
      function base64Write(w, S, C, I) {
        return blitBuffer(base64ToBytes(S), w, C, I);
      }
      function ucs2Write(w, S, C, I) {
        return blitBuffer(utf16leToBytes(S, w.length - C), w, C, I);
      }
      function base64Slice(w, S, C) {
        return 0 === S && C === w.length ? I.fromByteArray(w) : I.fromByteArray(w.slice(S, C));
      }
      function utf8Slice(w, S, C) {
        C = Math.min(w.length, C);
        for (var I = [], $ = S; $ < C; ) {
          var er,
            en,
            ei,
            eo,
            es = w[$],
            el = null,
            ec = es > 239 ? 4 : es > 223 ? 3 : es > 191 ? 2 : 1;
          if ($ + ec <= C)
            switch (ec) {
              case 1:
                es < 128 && (el = es);
                break;
              case 2:
                (192 & (er = w[$ + 1])) == 128 && (eo = ((31 & es) << 6) | (63 & er)) > 127 && (el = eo);
                break;
              case 3:
                (er = w[$ + 1]),
                  (en = w[$ + 2]),
                  (192 & er) == 128 &&
                    (192 & en) == 128 &&
                    (eo = ((15 & es) << 12) | ((63 & er) << 6) | (63 & en)) > 2047 &&
                    (eo < 55296 || eo > 57343) &&
                    (el = eo);
                break;
              case 4:
                (er = w[$ + 1]),
                  (en = w[$ + 2]),
                  (ei = w[$ + 3]),
                  (192 & er) == 128 &&
                    (192 & en) == 128 &&
                    (192 & ei) == 128 &&
                    (eo = ((15 & es) << 18) | ((63 & er) << 12) | ((63 & en) << 6) | (63 & ei)) > 65535 &&
                    eo < 1114112 &&
                    (el = eo);
            }
          null === el
            ? ((el = 65533), (ec = 1))
            : el > 65535 && ((el -= 65536), I.push(((el >>> 10) & 1023) | 55296), (el = 56320 | (1023 & el))),
            I.push(el),
            ($ += ec);
        }
        return decodeCodePointsArray(I);
      }
      function decodeCodePointsArray(w) {
        var S = w.length;
        if (S <= 4096) return String.fromCharCode.apply(String, w);
        for (var C = '', I = 0; I < S; ) C += String.fromCharCode.apply(String, w.slice(I, (I += 4096)));
        return C;
      }
      function asciiSlice(w, S, C) {
        var I = '';
        C = Math.min(w.length, C);
        for (var $ = S; $ < C; ++$) I += String.fromCharCode(127 & w[$]);
        return I;
      }
      function latin1Slice(w, S, C) {
        var I = '';
        C = Math.min(w.length, C);
        for (var $ = S; $ < C; ++$) I += String.fromCharCode(w[$]);
        return I;
      }
      function hexSlice(w, S, C) {
        var I = w.length;
        (!S || S < 0) && (S = 0), (!C || C < 0 || C > I) && (C = I);
        for (var $ = '', er = S; er < C; ++er) $ += ei[w[er]];
        return $;
      }
      function utf16leSlice(w, S, C) {
        for (var I = w.slice(S, C), $ = '', er = 0; er < I.length - 1; er += 2)
          $ += String.fromCharCode(I[er] + 256 * I[er + 1]);
        return $;
      }
      function checkOffset(w, S, C) {
        if (w % 1 != 0 || w < 0) throw RangeError('offset is not uint');
        if (w + S > C) throw RangeError('Trying to access beyond buffer length');
      }
      function checkInt(w, S, C, I, $, er) {
        if (!Buffer.isBuffer(w)) throw TypeError('"buffer" argument must be a Buffer instance');
        if (S > $ || S < er) throw RangeError('"value" argument is out of bounds');
        if (C + I > w.length) throw RangeError('Index out of range');
      }
      function checkIEEE754(w, S, C, I, $, er) {
        if (C + I > w.length || C < 0) throw RangeError('Index out of range');
      }
      function writeFloat(w, S, C, I, er) {
        return (
          (S = +S),
          (C >>>= 0),
          er || checkIEEE754(w, S, C, 4, 34028234663852886e22, -34028234663852886e22),
          $.write(w, S, C, I, 23, 4),
          C + 4
        );
      }
      function writeDouble(w, S, C, I, er) {
        return (
          (S = +S),
          (C >>>= 0),
          er || checkIEEE754(w, S, C, 8, 17976931348623157e292, -17976931348623157e292),
          $.write(w, S, C, I, 52, 8),
          C + 8
        );
      }
      (S.lW = Buffer),
        (S.h2 = 50),
        (Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()),
        Buffer.TYPED_ARRAY_SUPPORT ||
          'undefined' == typeof console ||
          'function' != typeof console.error ||
          console.error(
            'This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
          ),
        Object.defineProperty(Buffer.prototype, 'parent', {
          enumerable: !0,
          get: function () {
            if (Buffer.isBuffer(this)) return this.buffer;
          }
        }),
        Object.defineProperty(Buffer.prototype, 'offset', {
          enumerable: !0,
          get: function () {
            if (Buffer.isBuffer(this)) return this.byteOffset;
          }
        }),
        (Buffer.poolSize = 8192),
        (Buffer.from = function (w, S, C) {
          return from(w, S, C);
        }),
        Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype),
        Object.setPrototypeOf(Buffer, Uint8Array),
        (Buffer.alloc = function (w, S, C) {
          return alloc(w, S, C);
        }),
        (Buffer.allocUnsafe = function (w) {
          return allocUnsafe(w);
        }),
        (Buffer.allocUnsafeSlow = function (w) {
          return allocUnsafe(w);
        }),
        (Buffer.isBuffer = function (w) {
          return null != w && !0 === w._isBuffer && w !== Buffer.prototype;
        }),
        (Buffer.compare = function (w, S) {
          if (
            (isInstance(w, Uint8Array) && (w = Buffer.from(w, w.offset, w.byteLength)),
            isInstance(S, Uint8Array) && (S = Buffer.from(S, S.offset, S.byteLength)),
            !Buffer.isBuffer(w) || !Buffer.isBuffer(S))
          )
            throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (w === S) return 0;
          for (var C = w.length, I = S.length, $ = 0, er = Math.min(C, I); $ < er; ++$)
            if (w[$] !== S[$]) {
              (C = w[$]), (I = S[$]);
              break;
            }
          return C < I ? -1 : I < C ? 1 : 0;
        }),
        (Buffer.isEncoding = function (w) {
          switch (String(w).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return !0;
            default:
              return !1;
          }
        }),
        (Buffer.concat = function (w, S) {
          if (!Array.isArray(w)) throw TypeError('"list" argument must be an Array of Buffers');
          if (0 === w.length) return Buffer.alloc(0);
          if (void 0 === S) for (C = 0, S = 0; C < w.length; ++C) S += w[C].length;
          var C,
            I = Buffer.allocUnsafe(S),
            $ = 0;
          for (C = 0; C < w.length; ++C) {
            var er = w[C];
            if (isInstance(er, Uint8Array))
              $ + er.length > I.length ? Buffer.from(er).copy(I, $) : Uint8Array.prototype.set.call(I, er, $);
            else if (Buffer.isBuffer(er)) er.copy(I, $);
            else throw TypeError('"list" argument must be an Array of Buffers');
            $ += er.length;
          }
          return I;
        }),
        (Buffer.byteLength = byteLength),
        (Buffer.prototype._isBuffer = !0),
        (Buffer.prototype.swap16 = function () {
          var w = this.length;
          if (w % 2 != 0) throw RangeError('Buffer size must be a multiple of 16-bits');
          for (var S = 0; S < w; S += 2) swap(this, S, S + 1);
          return this;
        }),
        (Buffer.prototype.swap32 = function () {
          var w = this.length;
          if (w % 4 != 0) throw RangeError('Buffer size must be a multiple of 32-bits');
          for (var S = 0; S < w; S += 4) swap(this, S, S + 3), swap(this, S + 1, S + 2);
          return this;
        }),
        (Buffer.prototype.swap64 = function () {
          var w = this.length;
          if (w % 8 != 0) throw RangeError('Buffer size must be a multiple of 64-bits');
          for (var S = 0; S < w; S += 8)
            swap(this, S, S + 7), swap(this, S + 1, S + 6), swap(this, S + 2, S + 5), swap(this, S + 3, S + 4);
          return this;
        }),
        (Buffer.prototype.toString = function () {
          var w = this.length;
          return 0 === w ? '' : 0 == arguments.length ? utf8Slice(this, 0, w) : slowToString.apply(this, arguments);
        }),
        (Buffer.prototype.toLocaleString = Buffer.prototype.toString),
        (Buffer.prototype.equals = function (w) {
          if (!Buffer.isBuffer(w)) throw TypeError('Argument must be a Buffer');
          return this === w || 0 === Buffer.compare(this, w);
        }),
        (Buffer.prototype.inspect = function () {
          var w = '',
            C = S.h2;
          return (
            (w = this.toString('hex', 0, C)
              .replace(/(.{2})/g, '$1 ')
              .trim()),
            this.length > C && (w += ' ... '),
            '<Buffer ' + w + '>'
          );
        }),
        er && (Buffer.prototype[er] = Buffer.prototype.inspect),
        (Buffer.prototype.compare = function (w, S, C, I, $) {
          if ((isInstance(w, Uint8Array) && (w = Buffer.from(w, w.offset, w.byteLength)), !Buffer.isBuffer(w)))
            throw TypeError(
              'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof w
            );
          if (
            (void 0 === S && (S = 0),
            void 0 === C && (C = w ? w.length : 0),
            void 0 === I && (I = 0),
            void 0 === $ && ($ = this.length),
            S < 0 || C > w.length || I < 0 || $ > this.length)
          )
            throw RangeError('out of range index');
          if (I >= $ && S >= C) return 0;
          if (I >= $) return -1;
          if (S >= C) return 1;
          if (((S >>>= 0), (C >>>= 0), (I >>>= 0), ($ >>>= 0), this === w)) return 0;
          for (
            var er = $ - I, en = C - S, ei = Math.min(er, en), eo = this.slice(I, $), es = w.slice(S, C), el = 0;
            el < ei;
            ++el
          )
            if (eo[el] !== es[el]) {
              (er = eo[el]), (en = es[el]);
              break;
            }
          return er < en ? -1 : en < er ? 1 : 0;
        }),
        (Buffer.prototype.includes = function (w, S, C) {
          return -1 !== this.indexOf(w, S, C);
        }),
        (Buffer.prototype.indexOf = function (w, S, C) {
          return bidirectionalIndexOf(this, w, S, C, !0);
        }),
        (Buffer.prototype.lastIndexOf = function (w, S, C) {
          return bidirectionalIndexOf(this, w, S, C, !1);
        }),
        (Buffer.prototype.write = function (w, S, C, I) {
          if (void 0 === S) (I = 'utf8'), (C = this.length), (S = 0);
          else if (void 0 === C && 'string' == typeof S) (I = S), (C = this.length), (S = 0);
          else if (isFinite(S))
            (S >>>= 0), isFinite(C) ? ((C >>>= 0), void 0 === I && (I = 'utf8')) : ((I = C), (C = void 0));
          else throw Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
          var $ = this.length - S;
          if (((void 0 === C || C > $) && (C = $), (w.length > 0 && (C < 0 || S < 0)) || S > this.length))
            throw RangeError('Attempt to write outside buffer bounds');
          I || (I = 'utf8');
          for (var er = !1; ; )
            switch (I) {
              case 'hex':
                return hexWrite(this, w, S, C);
              case 'utf8':
              case 'utf-8':
                return utf8Write(this, w, S, C);
              case 'ascii':
              case 'latin1':
              case 'binary':
                return asciiWrite(this, w, S, C);
              case 'base64':
                return base64Write(this, w, S, C);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return ucs2Write(this, w, S, C);
              default:
                if (er) throw TypeError('Unknown encoding: ' + I);
                (I = ('' + I).toLowerCase()), (er = !0);
            }
        }),
        (Buffer.prototype.toJSON = function () {
          return { type: 'Buffer', data: Array.prototype.slice.call(this._arr || this, 0) };
        }),
        (Buffer.prototype.slice = function (w, S) {
          var C = this.length;
          (w = ~~w),
            (S = void 0 === S ? C : ~~S),
            w < 0 ? (w += C) < 0 && (w = 0) : w > C && (w = C),
            S < 0 ? (S += C) < 0 && (S = 0) : S > C && (S = C),
            S < w && (S = w);
          var I = this.subarray(w, S);
          return Object.setPrototypeOf(I, Buffer.prototype), I;
        }),
        (Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE =
          function (w, S, C) {
            (w >>>= 0), (S >>>= 0), C || checkOffset(w, S, this.length);
            for (var I = this[w], $ = 1, er = 0; ++er < S && ($ *= 256); ) I += this[w + er] * $;
            return I;
          }),
        (Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE =
          function (w, S, C) {
            (w >>>= 0), (S >>>= 0), C || checkOffset(w, S, this.length);
            for (var I = this[w + --S], $ = 1; S > 0 && ($ *= 256); ) I += this[w + --S] * $;
            return I;
          }),
        (Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 =
          function (w, S) {
            return (w >>>= 0), S || checkOffset(w, 1, this.length), this[w];
          }),
        (Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE =
          function (w, S) {
            return (w >>>= 0), S || checkOffset(w, 2, this.length), this[w] | (this[w + 1] << 8);
          }),
        (Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE =
          function (w, S) {
            return (w >>>= 0), S || checkOffset(w, 2, this.length), (this[w] << 8) | this[w + 1];
          }),
        (Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE =
          function (w, S) {
            return (
              (w >>>= 0),
              S || checkOffset(w, 4, this.length),
              (this[w] | (this[w + 1] << 8) | (this[w + 2] << 16)) + 16777216 * this[w + 3]
            );
          }),
        (Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE =
          function (w, S) {
            return (
              (w >>>= 0),
              S || checkOffset(w, 4, this.length),
              16777216 * this[w] + ((this[w + 1] << 16) | (this[w + 2] << 8) | this[w + 3])
            );
          }),
        (Buffer.prototype.readIntLE = function (w, S, C) {
          (w >>>= 0), (S >>>= 0), C || checkOffset(w, S, this.length);
          for (var I = this[w], $ = 1, er = 0; ++er < S && ($ *= 256); ) I += this[w + er] * $;
          return I >= ($ *= 128) && (I -= Math.pow(2, 8 * S)), I;
        }),
        (Buffer.prototype.readIntBE = function (w, S, C) {
          (w >>>= 0), (S >>>= 0), C || checkOffset(w, S, this.length);
          for (var I = S, $ = 1, er = this[w + --I]; I > 0 && ($ *= 256); ) er += this[w + --I] * $;
          return er >= ($ *= 128) && (er -= Math.pow(2, 8 * S)), er;
        }),
        (Buffer.prototype.readInt8 = function (w, S) {
          return ((w >>>= 0), S || checkOffset(w, 1, this.length), 128 & this[w])
            ? -((255 - this[w] + 1) * 1)
            : this[w];
        }),
        (Buffer.prototype.readInt16LE = function (w, S) {
          (w >>>= 0), S || checkOffset(w, 2, this.length);
          var C = this[w] | (this[w + 1] << 8);
          return 32768 & C ? 4294901760 | C : C;
        }),
        (Buffer.prototype.readInt16BE = function (w, S) {
          (w >>>= 0), S || checkOffset(w, 2, this.length);
          var C = this[w + 1] | (this[w] << 8);
          return 32768 & C ? 4294901760 | C : C;
        }),
        (Buffer.prototype.readInt32LE = function (w, S) {
          return (
            (w >>>= 0),
            S || checkOffset(w, 4, this.length),
            this[w] | (this[w + 1] << 8) | (this[w + 2] << 16) | (this[w + 3] << 24)
          );
        }),
        (Buffer.prototype.readInt32BE = function (w, S) {
          return (
            (w >>>= 0),
            S || checkOffset(w, 4, this.length),
            (this[w] << 24) | (this[w + 1] << 16) | (this[w + 2] << 8) | this[w + 3]
          );
        }),
        (Buffer.prototype.readFloatLE = function (w, S) {
          return (w >>>= 0), S || checkOffset(w, 4, this.length), $.read(this, w, !0, 23, 4);
        }),
        (Buffer.prototype.readFloatBE = function (w, S) {
          return (w >>>= 0), S || checkOffset(w, 4, this.length), $.read(this, w, !1, 23, 4);
        }),
        (Buffer.prototype.readDoubleLE = function (w, S) {
          return (w >>>= 0), S || checkOffset(w, 8, this.length), $.read(this, w, !0, 52, 8);
        }),
        (Buffer.prototype.readDoubleBE = function (w, S) {
          return (w >>>= 0), S || checkOffset(w, 8, this.length), $.read(this, w, !1, 52, 8);
        }),
        (Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE =
          function (w, S, C, I) {
            if (((w = +w), (S >>>= 0), (C >>>= 0), !I)) {
              var $ = Math.pow(2, 8 * C) - 1;
              checkInt(this, w, S, C, $, 0);
            }
            var er = 1,
              en = 0;
            for (this[S] = 255 & w; ++en < C && (er *= 256); ) this[S + en] = (w / er) & 255;
            return S + C;
          }),
        (Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE =
          function (w, S, C, I) {
            if (((w = +w), (S >>>= 0), (C >>>= 0), !I)) {
              var $ = Math.pow(2, 8 * C) - 1;
              checkInt(this, w, S, C, $, 0);
            }
            var er = C - 1,
              en = 1;
            for (this[S + er] = 255 & w; --er >= 0 && (en *= 256); ) this[S + er] = (w / en) & 255;
            return S + C;
          }),
        (Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 =
          function (w, S, C) {
            return (w = +w), (S >>>= 0), C || checkInt(this, w, S, 1, 255, 0), (this[S] = 255 & w), S + 1;
          }),
        (Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE =
          function (w, S, C) {
            return (
              (w = +w),
              (S >>>= 0),
              C || checkInt(this, w, S, 2, 65535, 0),
              (this[S] = 255 & w),
              (this[S + 1] = w >>> 8),
              S + 2
            );
          }),
        (Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE =
          function (w, S, C) {
            return (
              (w = +w),
              (S >>>= 0),
              C || checkInt(this, w, S, 2, 65535, 0),
              (this[S] = w >>> 8),
              (this[S + 1] = 255 & w),
              S + 2
            );
          }),
        (Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE =
          function (w, S, C) {
            return (
              (w = +w),
              (S >>>= 0),
              C || checkInt(this, w, S, 4, 4294967295, 0),
              (this[S + 3] = w >>> 24),
              (this[S + 2] = w >>> 16),
              (this[S + 1] = w >>> 8),
              (this[S] = 255 & w),
              S + 4
            );
          }),
        (Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE =
          function (w, S, C) {
            return (
              (w = +w),
              (S >>>= 0),
              C || checkInt(this, w, S, 4, 4294967295, 0),
              (this[S] = w >>> 24),
              (this[S + 1] = w >>> 16),
              (this[S + 2] = w >>> 8),
              (this[S + 3] = 255 & w),
              S + 4
            );
          }),
        (Buffer.prototype.writeIntLE = function (w, S, C, I) {
          if (((w = +w), (S >>>= 0), !I)) {
            var $ = Math.pow(2, 8 * C - 1);
            checkInt(this, w, S, C, $ - 1, -$);
          }
          var er = 0,
            en = 1,
            ei = 0;
          for (this[S] = 255 & w; ++er < C && (en *= 256); )
            w < 0 && 0 === ei && 0 !== this[S + er - 1] && (ei = 1), (this[S + er] = (((w / en) >> 0) - ei) & 255);
          return S + C;
        }),
        (Buffer.prototype.writeIntBE = function (w, S, C, I) {
          if (((w = +w), (S >>>= 0), !I)) {
            var $ = Math.pow(2, 8 * C - 1);
            checkInt(this, w, S, C, $ - 1, -$);
          }
          var er = C - 1,
            en = 1,
            ei = 0;
          for (this[S + er] = 255 & w; --er >= 0 && (en *= 256); )
            w < 0 && 0 === ei && 0 !== this[S + er + 1] && (ei = 1), (this[S + er] = (((w / en) >> 0) - ei) & 255);
          return S + C;
        }),
        (Buffer.prototype.writeInt8 = function (w, S, C) {
          return (
            (w = +w),
            (S >>>= 0),
            C || checkInt(this, w, S, 1, 127, -128),
            w < 0 && (w = 255 + w + 1),
            (this[S] = 255 & w),
            S + 1
          );
        }),
        (Buffer.prototype.writeInt16LE = function (w, S, C) {
          return (
            (w = +w),
            (S >>>= 0),
            C || checkInt(this, w, S, 2, 32767, -32768),
            (this[S] = 255 & w),
            (this[S + 1] = w >>> 8),
            S + 2
          );
        }),
        (Buffer.prototype.writeInt16BE = function (w, S, C) {
          return (
            (w = +w),
            (S >>>= 0),
            C || checkInt(this, w, S, 2, 32767, -32768),
            (this[S] = w >>> 8),
            (this[S + 1] = 255 & w),
            S + 2
          );
        }),
        (Buffer.prototype.writeInt32LE = function (w, S, C) {
          return (
            (w = +w),
            (S >>>= 0),
            C || checkInt(this, w, S, 4, 2147483647, -2147483648),
            (this[S] = 255 & w),
            (this[S + 1] = w >>> 8),
            (this[S + 2] = w >>> 16),
            (this[S + 3] = w >>> 24),
            S + 4
          );
        }),
        (Buffer.prototype.writeInt32BE = function (w, S, C) {
          return (
            (w = +w),
            (S >>>= 0),
            C || checkInt(this, w, S, 4, 2147483647, -2147483648),
            w < 0 && (w = 4294967295 + w + 1),
            (this[S] = w >>> 24),
            (this[S + 1] = w >>> 16),
            (this[S + 2] = w >>> 8),
            (this[S + 3] = 255 & w),
            S + 4
          );
        }),
        (Buffer.prototype.writeFloatLE = function (w, S, C) {
          return writeFloat(this, w, S, !0, C);
        }),
        (Buffer.prototype.writeFloatBE = function (w, S, C) {
          return writeFloat(this, w, S, !1, C);
        }),
        (Buffer.prototype.writeDoubleLE = function (w, S, C) {
          return writeDouble(this, w, S, !0, C);
        }),
        (Buffer.prototype.writeDoubleBE = function (w, S, C) {
          return writeDouble(this, w, S, !1, C);
        }),
        (Buffer.prototype.copy = function (w, S, C, I) {
          if (!Buffer.isBuffer(w)) throw TypeError('argument should be a Buffer');
          if (
            (C || (C = 0),
            I || 0 === I || (I = this.length),
            S >= w.length && (S = w.length),
            S || (S = 0),
            I > 0 && I < C && (I = C),
            I === C || 0 === w.length || 0 === this.length)
          )
            return 0;
          if (S < 0) throw RangeError('targetStart out of bounds');
          if (C < 0 || C >= this.length) throw RangeError('Index out of range');
          if (I < 0) throw RangeError('sourceEnd out of bounds');
          I > this.length && (I = this.length), w.length - S < I - C && (I = w.length - S + C);
          var $ = I - C;
          return (
            this === w && 'function' == typeof Uint8Array.prototype.copyWithin
              ? this.copyWithin(S, C, I)
              : Uint8Array.prototype.set.call(w, this.subarray(C, I), S),
            $
          );
        }),
        (Buffer.prototype.fill = function (w, S, C, I) {
          if ('string' == typeof w) {
            if (
              ('string' == typeof S
                ? ((I = S), (S = 0), (C = this.length))
                : 'string' == typeof C && ((I = C), (C = this.length)),
              void 0 !== I && 'string' != typeof I)
            )
              throw TypeError('encoding must be a string');
            if ('string' == typeof I && !Buffer.isEncoding(I)) throw TypeError('Unknown encoding: ' + I);
            if (1 === w.length) {
              var $,
                er = w.charCodeAt(0);
              (('utf8' === I && er < 128) || 'latin1' === I) && (w = er);
            }
          } else 'number' == typeof w ? (w &= 255) : 'boolean' == typeof w && (w = Number(w));
          if (S < 0 || this.length < S || this.length < C) throw RangeError('Out of range index');
          if (C <= S) return this;
          if (((S >>>= 0), (C = void 0 === C ? this.length : C >>> 0), w || (w = 0), 'number' == typeof w))
            for ($ = S; $ < C; ++$) this[$] = w;
          else {
            var en = Buffer.isBuffer(w) ? w : Buffer.from(w, I),
              ei = en.length;
            if (0 === ei) throw TypeError('The value "' + w + '" is invalid for argument "value"');
            for ($ = 0; $ < C - S; ++$) this[$ + S] = en[$ % ei];
          }
          return this;
        });
      var en = /[^+/0-9A-Za-z-_]/g;
      function base64clean(w) {
        if ((w = (w = w.split('=')[0]).trim().replace(en, '')).length < 2) return '';
        for (; w.length % 4 != 0; ) w += '=';
        return w;
      }
      function utf8ToBytes(w, S) {
        S = S || 1 / 0;
        for (var C, I = w.length, $ = null, er = [], en = 0; en < I; ++en) {
          if ((C = w.charCodeAt(en)) > 55295 && C < 57344) {
            if (!$) {
              if (C > 56319 || en + 1 === I) {
                (S -= 3) > -1 && er.push(239, 191, 189);
                continue;
              }
              $ = C;
              continue;
            }
            if (C < 56320) {
              (S -= 3) > -1 && er.push(239, 191, 189), ($ = C);
              continue;
            }
            C = ((($ - 55296) << 10) | (C - 56320)) + 65536;
          } else $ && (S -= 3) > -1 && er.push(239, 191, 189);
          if ((($ = null), C < 128)) {
            if ((S -= 1) < 0) break;
            er.push(C);
          } else if (C < 2048) {
            if ((S -= 2) < 0) break;
            er.push((C >> 6) | 192, (63 & C) | 128);
          } else if (C < 65536) {
            if ((S -= 3) < 0) break;
            er.push((C >> 12) | 224, ((C >> 6) & 63) | 128, (63 & C) | 128);
          } else if (C < 1114112) {
            if ((S -= 4) < 0) break;
            er.push((C >> 18) | 240, ((C >> 12) & 63) | 128, ((C >> 6) & 63) | 128, (63 & C) | 128);
          } else throw Error('Invalid code point');
        }
        return er;
      }
      function asciiToBytes(w) {
        for (var S = [], C = 0; C < w.length; ++C) S.push(255 & w.charCodeAt(C));
        return S;
      }
      function utf16leToBytes(w, S) {
        for (var C, I, $ = [], er = 0; er < w.length && !((S -= 2) < 0); ++er)
          (I = (C = w.charCodeAt(er)) >> 8), $.push(C % 256), $.push(I);
        return $;
      }
      function base64ToBytes(w) {
        return I.toByteArray(base64clean(w));
      }
      function blitBuffer(w, S, C, I) {
        for (var $ = 0; $ < I && !($ + C >= S.length) && !($ >= w.length); ++$) S[$ + C] = w[$];
        return $;
      }
      function isInstance(w, S) {
        return (
          w instanceof S ||
          (null != w && null != w.constructor && null != w.constructor.name && w.constructor.name === S.name)
        );
      }
      var ei = (function () {
        for (var w = '0123456789abcdef', S = Array(256), C = 0; C < 16; ++C)
          for (var I = 16 * C, $ = 0; $ < 16; ++$) S[I + $] = w[C] + w[$];
        return S;
      })();
    },
    55487: function (w, S, C) {
      'use strict';
      var I = C(9176),
        $ = {
          childContextTypes: !0,
          contextType: !0,
          contextTypes: !0,
          defaultProps: !0,
          displayName: !0,
          getDefaultProps: !0,
          getDerivedStateFromError: !0,
          getDerivedStateFromProps: !0,
          mixins: !0,
          propTypes: !0,
          type: !0
        },
        er = { name: !0, length: !0, prototype: !0, caller: !0, callee: !0, arguments: !0, arity: !0 },
        en = { $$typeof: !0, compare: !0, defaultProps: !0, displayName: !0, propTypes: !0, type: !0 },
        ei = {};
      function getStatics(w) {
        return I.isMemo(w) ? en : ei[w.$$typeof] || $;
      }
      (ei[I.ForwardRef] = { $$typeof: !0, render: !0, defaultProps: !0, displayName: !0, propTypes: !0 }),
        (ei[I.Memo] = en);
      var eo = Object.defineProperty,
        es = Object.getOwnPropertyNames,
        el = Object.getOwnPropertySymbols,
        ec = Object.getOwnPropertyDescriptor,
        eu = Object.getPrototypeOf,
        ed = Object.prototype;
      function hoistNonReactStatics(w, S, C) {
        if ('string' != typeof S) {
          if (ed) {
            var I = eu(S);
            I && I !== ed && hoistNonReactStatics(w, I, C);
          }
          var $ = es(S);
          el && ($ = $.concat(el(S)));
          for (var en = getStatics(w), ei = getStatics(S), eh = 0; eh < $.length; ++eh) {
            var ef = $[eh];
            if (!er[ef] && !(C && C[ef]) && !(ei && ei[ef]) && !(en && en[ef])) {
              var ep = ec(S, ef);
              try {
                eo(w, ef, ep);
              } catch (w) {}
            }
          }
        }
        return w;
      }
      w.exports = hoistNonReactStatics;
    },
    19087: function (w, S) {
      /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ (S.read = function (
        w,
        S,
        C,
        I,
        $
      ) {
        var er,
          en,
          ei = 8 * $ - I - 1,
          eo = (1 << ei) - 1,
          es = eo >> 1,
          el = -7,
          ec = C ? $ - 1 : 0,
          eu = C ? -1 : 1,
          ed = w[S + ec];
        for (
          ec += eu, er = ed & ((1 << -el) - 1), ed >>= -el, el += ei;
          el > 0;
          er = 256 * er + w[S + ec], ec += eu, el -= 8
        );
        for (en = er & ((1 << -el) - 1), er >>= -el, el += I; el > 0; en = 256 * en + w[S + ec], ec += eu, el -= 8);
        if (0 === er) er = 1 - es;
        else {
          if (er === eo) return en ? NaN : (ed ? -1 : 1) * (1 / 0);
          (en += Math.pow(2, I)), (er -= es);
        }
        return (ed ? -1 : 1) * en * Math.pow(2, er - I);
      }),
        (S.write = function (w, S, C, I, $, er) {
          var en,
            ei,
            eo,
            es = 8 * er - $ - 1,
            el = (1 << es) - 1,
            ec = el >> 1,
            eu = 23 === $ ? 5960464477539062e-23 : 0,
            ed = I ? 0 : er - 1,
            eh = I ? 1 : -1,
            ef = S < 0 || (0 === S && 1 / S < 0) ? 1 : 0;
          for (
            isNaN((S = Math.abs(S))) || S === 1 / 0
              ? ((ei = isNaN(S) ? 1 : 0), (en = el))
              : ((en = Math.floor(Math.log(S) / Math.LN2)),
                S * (eo = Math.pow(2, -en)) < 1 && (en--, (eo *= 2)),
                en + ec >= 1 ? (S += eu / eo) : (S += eu * Math.pow(2, 1 - ec)),
                S * eo >= 2 && (en++, (eo /= 2)),
                en + ec >= el
                  ? ((ei = 0), (en = el))
                  : en + ec >= 1
                  ? ((ei = (S * eo - 1) * Math.pow(2, $)), (en += ec))
                  : ((ei = S * Math.pow(2, ec - 1) * Math.pow(2, $)), (en = 0)));
            $ >= 8;
            w[C + ed] = 255 & ei, ed += eh, ei /= 256, $ -= 8
          );
          for (en = (en << $) | ei, es += $; es > 0; w[C + ed] = 255 & en, ed += eh, en /= 256, es -= 8);
          w[C + ed - eh] |= 128 * ef;
        });
    },
    62074: function (w, S, C) {
      var I = C(67133).lW,
        $ = C(62601);
      /*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/ w.exports = (function s(w, S, C) {
        function u($, er) {
          if (!S[$]) {
            if (!w[$]) {
              if (I) return I($, !0);
              var en = Error("Cannot find module '" + $ + "'");
              throw ((en.code = 'MODULE_NOT_FOUND'), en);
            }
            var ei = (S[$] = { exports: {} });
            w[$][0].call(
              ei.exports,
              function (S) {
                return u(w[$][1][S] || S);
              },
              ei,
              ei.exports,
              s,
              w,
              S,
              C
            );
          }
          return S[$].exports;
        }
        for (var I = void 0, $ = 0; $ < C.length; $++) u(C[$]);
        return u;
      })(
        {
          1: [
            function (w, S, C) {
              'use strict';
              var I = w('./utils'),
                $ = w('./support'),
                er = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
              (C.encode = function (w) {
                for (
                  var S,
                    C,
                    $,
                    en,
                    ei,
                    eo,
                    es,
                    el = [],
                    ec = 0,
                    eu = w.length,
                    ed = eu,
                    eh = 'string' !== I.getTypeOf(w);
                  ec < w.length;

                )
                  (ed = eu - ec),
                    ($ = eh
                      ? ((S = w[ec++]), (C = ec < eu ? w[ec++] : 0), ec < eu ? w[ec++] : 0)
                      : ((S = w.charCodeAt(ec++)),
                        (C = ec < eu ? w.charCodeAt(ec++) : 0),
                        ec < eu ? w.charCodeAt(ec++) : 0)),
                    (en = S >> 2),
                    (ei = ((3 & S) << 4) | (C >> 4)),
                    (eo = 1 < ed ? ((15 & C) << 2) | ($ >> 6) : 64),
                    (es = 2 < ed ? 63 & $ : 64),
                    el.push(er.charAt(en) + er.charAt(ei) + er.charAt(eo) + er.charAt(es));
                return el.join('');
              }),
                (C.decode = function (w) {
                  var S,
                    C,
                    I,
                    en,
                    ei,
                    eo,
                    es = 0,
                    el = 0,
                    ec = 'data:';
                  if (w.substr(0, ec.length) === ec) throw Error('Invalid base64 input, it looks like a data url.');
                  var eu,
                    ed = (3 * (w = w.replace(/[^A-Za-z0-9+/=]/g, '')).length) / 4;
                  if (
                    (w.charAt(w.length - 1) === er.charAt(64) && ed--,
                    w.charAt(w.length - 2) === er.charAt(64) && ed--,
                    ed % 1 != 0)
                  )
                    throw Error('Invalid base64 input, bad content length.');
                  for (eu = $.uint8array ? new Uint8Array(0 | ed) : Array(0 | ed); es < w.length; )
                    (S = (er.indexOf(w.charAt(es++)) << 2) | ((en = er.indexOf(w.charAt(es++))) >> 4)),
                      (C = ((15 & en) << 4) | ((ei = er.indexOf(w.charAt(es++))) >> 2)),
                      (I = ((3 & ei) << 6) | (eo = er.indexOf(w.charAt(es++)))),
                      (eu[el++] = S),
                      64 !== ei && (eu[el++] = C),
                      64 !== eo && (eu[el++] = I);
                  return eu;
                });
            },
            { './support': 30, './utils': 32 }
          ],
          2: [
            function (w, S, C) {
              'use strict';
              var I = w('./external'),
                $ = w('./stream/DataWorker'),
                er = w('./stream/Crc32Probe'),
                en = w('./stream/DataLengthProbe');
              function o(w, S, C, I, $) {
                (this.compressedSize = w),
                  (this.uncompressedSize = S),
                  (this.crc32 = C),
                  (this.compression = I),
                  (this.compressedContent = $);
              }
              (o.prototype = {
                getContentWorker: function () {
                  var w = new $(I.Promise.resolve(this.compressedContent))
                      .pipe(this.compression.uncompressWorker())
                      .pipe(new en('data_length')),
                    S = this;
                  return (
                    w.on('end', function () {
                      if (this.streamInfo.data_length !== S.uncompressedSize)
                        throw Error('Bug : uncompressed data size mismatch');
                    }),
                    w
                  );
                },
                getCompressedWorker: function () {
                  return new $(I.Promise.resolve(this.compressedContent))
                    .withStreamInfo('compressedSize', this.compressedSize)
                    .withStreamInfo('uncompressedSize', this.uncompressedSize)
                    .withStreamInfo('crc32', this.crc32)
                    .withStreamInfo('compression', this.compression);
                }
              }),
                (o.createWorkerFrom = function (w, S, C) {
                  return w
                    .pipe(new er())
                    .pipe(new en('uncompressedSize'))
                    .pipe(S.compressWorker(C))
                    .pipe(new en('compressedSize'))
                    .withStreamInfo('compression', S);
                }),
                (S.exports = o);
            },
            { './external': 6, './stream/Crc32Probe': 25, './stream/DataLengthProbe': 26, './stream/DataWorker': 27 }
          ],
          3: [
            function (w, S, C) {
              'use strict';
              var I = w('./stream/GenericWorker');
              (C.STORE = {
                magic: '\x00\x00',
                compressWorker: function () {
                  return new I('STORE compression');
                },
                uncompressWorker: function () {
                  return new I('STORE decompression');
                }
              }),
                (C.DEFLATE = w('./flate'));
            },
            { './flate': 7, './stream/GenericWorker': 28 }
          ],
          4: [
            function (w, S, C) {
              'use strict';
              var I = w('./utils'),
                $ = (function () {
                  for (var w, S = [], C = 0; C < 256; C++) {
                    w = C;
                    for (var I = 0; I < 8; I++) w = 1 & w ? 3988292384 ^ (w >>> 1) : w >>> 1;
                    S[C] = w;
                  }
                  return S;
                })();
              S.exports = function (w, S) {
                return void 0 !== w && w.length
                  ? 'string' !== I.getTypeOf(w)
                    ? (function (w, S, C, I) {
                        var er = I + C;
                        w ^= -1;
                        for (var en = I; en < er; en++) w = (w >>> 8) ^ $[255 & (w ^ S[en])];
                        return -1 ^ w;
                      })(0 | S, w, w.length, 0)
                    : (function (w, S, C, I) {
                        var er = I + C;
                        w ^= -1;
                        for (var en = I; en < er; en++) w = (w >>> 8) ^ $[255 & (w ^ S.charCodeAt(en))];
                        return -1 ^ w;
                      })(0 | S, w, w.length, 0)
                  : 0;
              };
            },
            { './utils': 32 }
          ],
          5: [
            function (w, S, C) {
              'use strict';
              (C.base64 = !1),
                (C.binary = !1),
                (C.dir = !1),
                (C.createFolders = !0),
                (C.date = null),
                (C.compression = null),
                (C.compressionOptions = null),
                (C.comment = null),
                (C.unixPermissions = null),
                (C.dosPermissions = null);
            },
            {}
          ],
          6: [
            function (w, S, C) {
              'use strict';
              var I = null;
              (I = 'undefined' != typeof Promise ? Promise : w('lie')), (S.exports = { Promise: I });
            },
            { lie: 37 }
          ],
          7: [
            function (w, S, C) {
              'use strict';
              var I =
                  'undefined' != typeof Uint8Array &&
                  'undefined' != typeof Uint16Array &&
                  'undefined' != typeof Uint32Array,
                $ = w('pako'),
                er = w('./utils'),
                en = w('./stream/GenericWorker'),
                ei = I ? 'uint8array' : 'array';
              function h(w, S) {
                en.call(this, 'FlateWorker/' + w),
                  (this._pako = null),
                  (this._pakoAction = w),
                  (this._pakoOptions = S),
                  (this.meta = {});
              }
              (C.magic = '\b\x00'),
                er.inherits(h, en),
                (h.prototype.processChunk = function (w) {
                  (this.meta = w.meta),
                    null === this._pako && this._createPako(),
                    this._pako.push(er.transformTo(ei, w.data), !1);
                }),
                (h.prototype.flush = function () {
                  en.prototype.flush.call(this), null === this._pako && this._createPako(), this._pako.push([], !0);
                }),
                (h.prototype.cleanUp = function () {
                  en.prototype.cleanUp.call(this), (this._pako = null);
                }),
                (h.prototype._createPako = function () {
                  this._pako = new $[this._pakoAction]({ raw: !0, level: this._pakoOptions.level || -1 });
                  var w = this;
                  this._pako.onData = function (S) {
                    w.push({ data: S, meta: w.meta });
                  };
                }),
                (C.compressWorker = function (w) {
                  return new h('Deflate', w);
                }),
                (C.uncompressWorker = function () {
                  return new h('Inflate', {});
                });
            },
            { './stream/GenericWorker': 28, './utils': 32, pako: 38 }
          ],
          8: [
            function (w, S, C) {
              'use strict';
              function A(w, S) {
                var C,
                  I = '';
                for (C = 0; C < S; C++) (I += String.fromCharCode(255 & w)), (w >>>= 8);
                return I;
              }
              function n(w, S, C, $, eo, es) {
                var el,
                  ec,
                  eu,
                  ed,
                  eh = w.file,
                  ef = w.compression,
                  ep = es !== er.utf8encode,
                  em = I.transformTo('string', es(eh.name)),
                  eg = I.transformTo('string', er.utf8encode(eh.name)),
                  ey = eh.comment,
                  ev = I.transformTo('string', es(ey)),
                  eb = I.transformTo('string', er.utf8encode(ey)),
                  e_ = eg.length !== eh.name.length,
                  ex = eb.length !== ey.length,
                  ew = '',
                  ek = '',
                  eS = '',
                  eC = eh.dir,
                  eP = eh.date,
                  eA = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
                (S && !C) ||
                  ((eA.crc32 = w.crc32),
                  (eA.compressedSize = w.compressedSize),
                  (eA.uncompressedSize = w.uncompressedSize));
                var eT = 0;
                S && (eT |= 8), !ep && (e_ || ex) && (eT |= 2048);
                var eE = 0,
                  ez = 0;
                eC && (eE |= 16),
                  'UNIX' === eo
                    ? ((ez = 798),
                      (eE |= ((ec = el = eh.unixPermissions), el || (ec = eC ? 16893 : 33204), (65535 & ec) << 16)))
                    : ((ez = 20), (eE |= 63 & (eh.dosPermissions || 0))),
                  (eu = (((eP.getUTCHours() << 6) | eP.getUTCMinutes()) << 5) | (eP.getUTCSeconds() / 2)),
                  (ed = ((((eP.getUTCFullYear() - 1980) << 4) | (eP.getUTCMonth() + 1)) << 5) | eP.getUTCDate()),
                  e_ && ((ek = A(1, 1) + A(en(em), 4) + eg), (ew += 'up' + A(ek.length, 2) + ek)),
                  ex && ((eS = A(1, 1) + A(en(ev), 4) + eb), (ew += 'uc' + A(eS.length, 2) + eS));
                var eI = '';
                return (
                  (eI +=
                    '\n\x00' +
                    A(eT, 2) +
                    ef.magic +
                    A(eu, 2) +
                    A(ed, 2) +
                    A(eA.crc32, 4) +
                    A(eA.compressedSize, 4) +
                    A(eA.uncompressedSize, 4) +
                    A(em.length, 2) +
                    A(ew.length, 2)),
                  {
                    fileRecord: ei.LOCAL_FILE_HEADER + eI + em + ew,
                    dirRecord:
                      ei.CENTRAL_FILE_HEADER +
                      A(ez, 2) +
                      eI +
                      A(ev.length, 2) +
                      '\x00\x00\x00\x00' +
                      A(eE, 4) +
                      A($, 4) +
                      em +
                      ew +
                      ev
                  }
                );
              }
              var I = w('../utils'),
                $ = w('../stream/GenericWorker'),
                er = w('../utf8'),
                en = w('../crc32'),
                ei = w('../signature');
              function s(w, S, C, I) {
                $.call(this, 'ZipFileWorker'),
                  (this.bytesWritten = 0),
                  (this.zipComment = S),
                  (this.zipPlatform = C),
                  (this.encodeFileName = I),
                  (this.streamFiles = w),
                  (this.accumulate = !1),
                  (this.contentBuffer = []),
                  (this.dirRecords = []),
                  (this.currentSourceOffset = 0),
                  (this.entriesCount = 0),
                  (this.currentFile = null),
                  (this._sources = []);
              }
              I.inherits(s, $),
                (s.prototype.push = function (w) {
                  var S = w.meta.percent || 0,
                    C = this.entriesCount,
                    I = this._sources.length;
                  this.accumulate
                    ? this.contentBuffer.push(w)
                    : ((this.bytesWritten += w.data.length),
                      $.prototype.push.call(this, {
                        data: w.data,
                        meta: { currentFile: this.currentFile, percent: C ? (S + 100 * (C - I - 1)) / C : 100 }
                      }));
                }),
                (s.prototype.openedSource = function (w) {
                  (this.currentSourceOffset = this.bytesWritten), (this.currentFile = w.file.name);
                  var S = this.streamFiles && !w.file.dir;
                  if (S) {
                    var C = n(w, S, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
                    this.push({ data: C.fileRecord, meta: { percent: 0 } });
                  } else this.accumulate = !0;
                }),
                (s.prototype.closedSource = function (w) {
                  this.accumulate = !1;
                  var S = this.streamFiles && !w.file.dir,
                    C = n(w, S, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
                  if ((this.dirRecords.push(C.dirRecord), S))
                    this.push({
                      data: ei.DATA_DESCRIPTOR + A(w.crc32, 4) + A(w.compressedSize, 4) + A(w.uncompressedSize, 4),
                      meta: { percent: 100 }
                    });
                  else
                    for (this.push({ data: C.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
                      this.push(this.contentBuffer.shift());
                  this.currentFile = null;
                }),
                (s.prototype.flush = function () {
                  for (var w, S, C, $, er = this.bytesWritten, en = 0; en < this.dirRecords.length; en++)
                    this.push({ data: this.dirRecords[en], meta: { percent: 100 } });
                  var eo = this.bytesWritten - er,
                    es =
                      ((w = this.dirRecords.length),
                      (S = this.zipComment),
                      (C = this.encodeFileName),
                      ($ = I.transformTo('string', C(S))),
                      ei.CENTRAL_DIRECTORY_END +
                        '\x00\x00\x00\x00' +
                        A(w, 2) +
                        A(w, 2) +
                        A(eo, 4) +
                        A(er, 4) +
                        A($.length, 2) +
                        $);
                  this.push({ data: es, meta: { percent: 100 } });
                }),
                (s.prototype.prepareNextSource = function () {
                  (this.previous = this._sources.shift()),
                    this.openedSource(this.previous.streamInfo),
                    this.isPaused ? this.previous.pause() : this.previous.resume();
                }),
                (s.prototype.registerPrevious = function (w) {
                  this._sources.push(w);
                  var S = this;
                  return (
                    w.on('data', function (w) {
                      S.processChunk(w);
                    }),
                    w.on('end', function () {
                      S.closedSource(S.previous.streamInfo), S._sources.length ? S.prepareNextSource() : S.end();
                    }),
                    w.on('error', function (w) {
                      S.error(w);
                    }),
                    this
                  );
                }),
                (s.prototype.resume = function () {
                  return (
                    !!$.prototype.resume.call(this) &&
                    (!this.previous && this._sources.length
                      ? (this.prepareNextSource(), !0)
                      : this.previous || this._sources.length || this.generatedError
                      ? void 0
                      : (this.end(), !0))
                  );
                }),
                (s.prototype.error = function (w) {
                  var S = this._sources;
                  if (!$.prototype.error.call(this, w)) return !1;
                  for (var C = 0; C < S.length; C++)
                    try {
                      S[C].error(w);
                    } catch (w) {}
                  return !0;
                }),
                (s.prototype.lock = function () {
                  $.prototype.lock.call(this);
                  for (var w = this._sources, S = 0; S < w.length; S++) w[S].lock();
                }),
                (S.exports = s);
            },
            { '../crc32': 4, '../signature': 23, '../stream/GenericWorker': 28, '../utf8': 31, '../utils': 32 }
          ],
          9: [
            function (w, S, C) {
              'use strict';
              var I = w('../compressions'),
                $ = w('./ZipFileWorker');
              C.generateWorker = function (w, S, C) {
                var er = new $(S.streamFiles, C, S.platform, S.encodeFileName),
                  en = 0;
                try {
                  w.forEach(function (w, C) {
                    en++;
                    var $ = (function (w, S) {
                        var C = w || S,
                          $ = I[C];
                        if (!$) throw Error(C + ' is not a valid compression method !');
                        return $;
                      })(C.options.compression, S.compression),
                      ei = C.options.compressionOptions || S.compressionOptions || {},
                      eo = C.dir,
                      es = C.date;
                    C._compressWorker($, ei)
                      .withStreamInfo('file', {
                        name: w,
                        dir: eo,
                        date: es,
                        comment: C.comment || '',
                        unixPermissions: C.unixPermissions,
                        dosPermissions: C.dosPermissions
                      })
                      .pipe(er);
                  }),
                    (er.entriesCount = en);
                } catch (w) {
                  er.error(w);
                }
                return er;
              };
            },
            { '../compressions': 3, './ZipFileWorker': 8 }
          ],
          10: [
            function (w, S, C) {
              'use strict';
              function n() {
                if (!(this instanceof n)) return new n();
                if (arguments.length)
                  throw Error(
                    'The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.'
                  );
                (this.files = Object.create(null)),
                  (this.comment = null),
                  (this.root = ''),
                  (this.clone = function () {
                    var w = new n();
                    for (var S in this) 'function' != typeof this[S] && (w[S] = this[S]);
                    return w;
                  });
              }
              ((n.prototype = w('./object')).loadAsync = w('./load')),
                (n.support = w('./support')),
                (n.defaults = w('./defaults')),
                (n.version = '3.10.1'),
                (n.loadAsync = function (w, S) {
                  return new n().loadAsync(w, S);
                }),
                (n.external = w('./external')),
                (S.exports = n);
            },
            { './defaults': 5, './external': 6, './load': 11, './object': 15, './support': 30 }
          ],
          11: [
            function (w, S, C) {
              'use strict';
              var I = w('./utils'),
                $ = w('./external'),
                er = w('./utf8'),
                en = w('./zipEntries'),
                ei = w('./stream/Crc32Probe'),
                eo = w('./nodejsUtils');
              function f(w) {
                return new $.Promise(function (S, C) {
                  var I = w.decompressed.getContentWorker().pipe(new ei());
                  I.on('error', function (w) {
                    C(w);
                  })
                    .on('end', function () {
                      I.streamInfo.crc32 !== w.decompressed.crc32 ? C(Error('Corrupted zip : CRC32 mismatch')) : S();
                    })
                    .resume();
                });
              }
              S.exports = function (w, S) {
                var C = this;
                return (
                  (S = I.extend(S || {}, {
                    base64: !1,
                    checkCRC32: !1,
                    optimizedBinaryString: !1,
                    createFolders: !1,
                    decodeFileName: er.utf8decode
                  })),
                  eo.isNode && eo.isStream(w)
                    ? $.Promise.reject(Error("JSZip can't accept a stream when loading a zip file."))
                    : I.prepareContent('the loaded zip file', w, !0, S.optimizedBinaryString, S.base64)
                        .then(function (w) {
                          var C = new en(S);
                          return C.load(w), C;
                        })
                        .then(function (w) {
                          var C = [$.Promise.resolve(w)],
                            I = w.files;
                          if (S.checkCRC32) for (var er = 0; er < I.length; er++) C.push(f(I[er]));
                          return $.Promise.all(C);
                        })
                        .then(function (w) {
                          for (var $ = w.shift(), er = $.files, en = 0; en < er.length; en++) {
                            var ei = er[en],
                              eo = ei.fileNameStr,
                              es = I.resolve(ei.fileNameStr);
                            C.file(es, ei.decompressed, {
                              binary: !0,
                              optimizedBinaryString: !0,
                              date: ei.date,
                              dir: ei.dir,
                              comment: ei.fileCommentStr.length ? ei.fileCommentStr : null,
                              unixPermissions: ei.unixPermissions,
                              dosPermissions: ei.dosPermissions,
                              createFolders: S.createFolders
                            }),
                              ei.dir || (C.file(es).unsafeOriginalName = eo);
                          }
                          return $.zipComment.length && (C.comment = $.zipComment), C;
                        })
                );
              };
            },
            {
              './external': 6,
              './nodejsUtils': 14,
              './stream/Crc32Probe': 25,
              './utf8': 31,
              './utils': 32,
              './zipEntries': 33
            }
          ],
          12: [
            function (w, S, C) {
              'use strict';
              var I = w('../utils'),
                $ = w('../stream/GenericWorker');
              function s(w, S) {
                $.call(this, 'Nodejs stream input adapter for ' + w), (this._upstreamEnded = !1), this._bindStream(S);
              }
              I.inherits(s, $),
                (s.prototype._bindStream = function (w) {
                  var S = this;
                  (this._stream = w).pause(),
                    w
                      .on('data', function (w) {
                        S.push({ data: w, meta: { percent: 0 } });
                      })
                      .on('error', function (w) {
                        S.isPaused ? (this.generatedError = w) : S.error(w);
                      })
                      .on('end', function () {
                        S.isPaused ? (S._upstreamEnded = !0) : S.end();
                      });
                }),
                (s.prototype.pause = function () {
                  return !!$.prototype.pause.call(this) && (this._stream.pause(), !0);
                }),
                (s.prototype.resume = function () {
                  return (
                    !!$.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0)
                  );
                }),
                (S.exports = s);
            },
            { '../stream/GenericWorker': 28, '../utils': 32 }
          ],
          13: [
            function (w, S, C) {
              'use strict';
              var I = w('readable-stream').Readable;
              function n(w, S, C) {
                I.call(this, S), (this._helper = w);
                var $ = this;
                w.on('data', function (w, S) {
                  $.push(w) || $._helper.pause(), C && C(S);
                })
                  .on('error', function (w) {
                    $.emit('error', w);
                  })
                  .on('end', function () {
                    $.push(null);
                  });
              }
              w('../utils').inherits(n, I),
                (n.prototype._read = function () {
                  this._helper.resume();
                }),
                (S.exports = n);
            },
            { '../utils': 32, 'readable-stream': 16 }
          ],
          14: [
            function (w, S, C) {
              'use strict';
              S.exports = {
                isNode: void 0 !== I,
                newBufferFrom: function (w, S) {
                  if (I.from && I.from !== Uint8Array.from) return I.from(w, S);
                  if ('number' == typeof w) throw Error('The "data" argument must not be a number');
                  return new I(w, S);
                },
                allocBuffer: function (w) {
                  if (I.alloc) return I.alloc(w);
                  var S = new I(w);
                  return S.fill(0), S;
                },
                isBuffer: function (w) {
                  return I.isBuffer(w);
                },
                isStream: function (w) {
                  return (
                    w && 'function' == typeof w.on && 'function' == typeof w.pause && 'function' == typeof w.resume
                  );
                }
              };
            },
            {}
          ],
          15: [
            function (w, S, C) {
              'use strict';
              function s(w, S, C) {
                var I,
                  en = $.getTypeOf(S),
                  el = $.extend(C || {}, ei);
                (el.date = el.date || new Date()),
                  null !== el.compression && (el.compression = el.compression.toUpperCase()),
                  'string' == typeof el.unixPermissions && (el.unixPermissions = parseInt(el.unixPermissions, 8)),
                  el.unixPermissions && 16384 & el.unixPermissions && (el.dir = !0),
                  el.dosPermissions && 16 & el.dosPermissions && (el.dir = !0),
                  el.dir && (w = g(w)),
                  el.createFolders && (I = _(w)) && b.call(this, I, !0);
                var ed = 'string' === en && !1 === el.binary && !1 === el.base64;
                (C && void 0 !== C.binary) || (el.binary = !ed),
                  ((S instanceof eo && 0 === S.uncompressedSize) || el.dir || !S || 0 === S.length) &&
                    ((el.base64 = !1), (el.binary = !0), (S = ''), (el.compression = 'STORE'), (en = 'string'));
                var eh = null;
                eh =
                  S instanceof eo || S instanceof er
                    ? S
                    : ec.isNode && ec.isStream(S)
                    ? new eu(w, S)
                    : $.prepareContent(w, S, el.binary, el.optimizedBinaryString, el.base64);
                var ef = new es(w, eh, el);
                this.files[w] = ef;
              }
              var I = w('./utf8'),
                $ = w('./utils'),
                er = w('./stream/GenericWorker'),
                en = w('./stream/StreamHelper'),
                ei = w('./defaults'),
                eo = w('./compressedObject'),
                es = w('./zipObject'),
                el = w('./generate'),
                ec = w('./nodejsUtils'),
                eu = w('./nodejs/NodejsStreamInputAdapter'),
                _ = function (w) {
                  '/' === w.slice(-1) && (w = w.substring(0, w.length - 1));
                  var S = w.lastIndexOf('/');
                  return 0 < S ? w.substring(0, S) : '';
                },
                g = function (w) {
                  return '/' !== w.slice(-1) && (w += '/'), w;
                },
                b = function (w, S) {
                  return (
                    (S = void 0 !== S ? S : ei.createFolders),
                    (w = g(w)),
                    this.files[w] || s.call(this, w, null, { dir: !0, createFolders: S }),
                    this.files[w]
                  );
                };
              function h(w) {
                return '[object RegExp]' === Object.prototype.toString.call(w);
              }
              S.exports = {
                load: function () {
                  throw Error('This method has been removed in JSZip 3.0, please check the upgrade guide.');
                },
                forEach: function (w) {
                  var S, C, I;
                  for (S in this.files)
                    (I = this.files[S]),
                      (C = S.slice(this.root.length, S.length)) &&
                        S.slice(0, this.root.length) === this.root &&
                        w(C, I);
                },
                filter: function (w) {
                  var S = [];
                  return (
                    this.forEach(function (C, I) {
                      w(C, I) && S.push(I);
                    }),
                    S
                  );
                },
                file: function (w, S, C) {
                  if (1 != arguments.length) return (w = this.root + w), s.call(this, w, S, C), this;
                  if (h(w)) {
                    var I = w;
                    return this.filter(function (w, S) {
                      return !S.dir && I.test(w);
                    });
                  }
                  var $ = this.files[this.root + w];
                  return $ && !$.dir ? $ : null;
                },
                folder: function (w) {
                  if (!w) return this;
                  if (h(w))
                    return this.filter(function (S, C) {
                      return C.dir && w.test(S);
                    });
                  var S = this.root + w,
                    C = b.call(this, S),
                    I = this.clone();
                  return (I.root = C.name), I;
                },
                remove: function (w) {
                  w = this.root + w;
                  var S = this.files[w];
                  if ((S || ('/' !== w.slice(-1) && (w += '/'), (S = this.files[w])), S && !S.dir))
                    delete this.files[w];
                  else
                    for (
                      var C = this.filter(function (S, C) {
                          return C.name.slice(0, w.length) === w;
                        }),
                        I = 0;
                      I < C.length;
                      I++
                    )
                      delete this.files[C[I].name];
                  return this;
                },
                generate: function () {
                  throw Error('This method has been removed in JSZip 3.0, please check the upgrade guide.');
                },
                generateInternalStream: function (w) {
                  var S,
                    C = {};
                  try {
                    if (
                      (((C = $.extend(w || {}, {
                        streamFiles: !1,
                        compression: 'STORE',
                        compressionOptions: null,
                        type: '',
                        platform: 'DOS',
                        comment: null,
                        mimeType: 'application/zip',
                        encodeFileName: I.utf8encode
                      })).type = C.type.toLowerCase()),
                      (C.compression = C.compression.toUpperCase()),
                      'binarystring' === C.type && (C.type = 'string'),
                      !C.type)
                    )
                      throw Error('No output type specified.');
                    $.checkSupport(C.type),
                      ('darwin' !== C.platform &&
                        'freebsd' !== C.platform &&
                        'linux' !== C.platform &&
                        'sunos' !== C.platform) ||
                        (C.platform = 'UNIX'),
                      'win32' === C.platform && (C.platform = 'DOS');
                    var ei = C.comment || this.comment || '';
                    S = el.generateWorker(this, C, ei);
                  } catch (w) {
                    (S = new er('error')).error(w);
                  }
                  return new en(S, C.type || 'string', C.mimeType);
                },
                generateAsync: function (w, S) {
                  return this.generateInternalStream(w).accumulate(S);
                },
                generateNodeStream: function (w, S) {
                  return (
                    (w = w || {}).type || (w.type = 'nodebuffer'), this.generateInternalStream(w).toNodejsStream(S)
                  );
                }
              };
            },
            {
              './compressedObject': 2,
              './defaults': 5,
              './generate': 9,
              './nodejs/NodejsStreamInputAdapter': 12,
              './nodejsUtils': 14,
              './stream/GenericWorker': 28,
              './stream/StreamHelper': 29,
              './utf8': 31,
              './utils': 32,
              './zipObject': 35
            }
          ],
          16: [
            function (w, S, C) {
              'use strict';
              S.exports = w('stream');
            },
            { stream: void 0 }
          ],
          17: [
            function (w, S, C) {
              'use strict';
              var I = w('./DataReader');
              function i(w) {
                I.call(this, w);
                for (var S = 0; S < this.data.length; S++) w[S] = 255 & w[S];
              }
              w('../utils').inherits(i, I),
                (i.prototype.byteAt = function (w) {
                  return this.data[this.zero + w];
                }),
                (i.prototype.lastIndexOfSignature = function (w) {
                  for (
                    var S = w.charCodeAt(0),
                      C = w.charCodeAt(1),
                      I = w.charCodeAt(2),
                      $ = w.charCodeAt(3),
                      er = this.length - 4;
                    0 <= er;
                    --er
                  )
                    if (
                      this.data[er] === S &&
                      this.data[er + 1] === C &&
                      this.data[er + 2] === I &&
                      this.data[er + 3] === $
                    )
                      return er - this.zero;
                  return -1;
                }),
                (i.prototype.readAndCheckSignature = function (w) {
                  var S = w.charCodeAt(0),
                    C = w.charCodeAt(1),
                    I = w.charCodeAt(2),
                    $ = w.charCodeAt(3),
                    er = this.readData(4);
                  return S === er[0] && C === er[1] && I === er[2] && $ === er[3];
                }),
                (i.prototype.readData = function (w) {
                  if ((this.checkOffset(w), 0 === w)) return [];
                  var S = this.data.slice(this.zero + this.index, this.zero + this.index + w);
                  return (this.index += w), S;
                }),
                (S.exports = i);
            },
            { '../utils': 32, './DataReader': 18 }
          ],
          18: [
            function (w, S, C) {
              'use strict';
              var I = w('../utils');
              function i(w) {
                (this.data = w), (this.length = w.length), (this.index = 0), (this.zero = 0);
              }
              (i.prototype = {
                checkOffset: function (w) {
                  this.checkIndex(this.index + w);
                },
                checkIndex: function (w) {
                  if (this.length < this.zero + w || w < 0)
                    throw Error(
                      'End of data reached (data length = ' +
                        this.length +
                        ', asked index = ' +
                        w +
                        '). Corrupted zip ?'
                    );
                },
                setIndex: function (w) {
                  this.checkIndex(w), (this.index = w);
                },
                skip: function (w) {
                  this.setIndex(this.index + w);
                },
                byteAt: function () {},
                readInt: function (w) {
                  var S,
                    C = 0;
                  for (this.checkOffset(w), S = this.index + w - 1; S >= this.index; S--) C = (C << 8) + this.byteAt(S);
                  return (this.index += w), C;
                },
                readString: function (w) {
                  return I.transformTo('string', this.readData(w));
                },
                readData: function () {},
                lastIndexOfSignature: function () {},
                readAndCheckSignature: function () {},
                readDate: function () {
                  var w = this.readInt(4);
                  return new Date(
                    Date.UTC(
                      1980 + ((w >> 25) & 127),
                      ((w >> 21) & 15) - 1,
                      (w >> 16) & 31,
                      (w >> 11) & 31,
                      (w >> 5) & 63,
                      (31 & w) << 1
                    )
                  );
                }
              }),
                (S.exports = i);
            },
            { '../utils': 32 }
          ],
          19: [
            function (w, S, C) {
              'use strict';
              var I = w('./Uint8ArrayReader');
              function i(w) {
                I.call(this, w);
              }
              w('../utils').inherits(i, I),
                (i.prototype.readData = function (w) {
                  this.checkOffset(w);
                  var S = this.data.slice(this.zero + this.index, this.zero + this.index + w);
                  return (this.index += w), S;
                }),
                (S.exports = i);
            },
            { '../utils': 32, './Uint8ArrayReader': 21 }
          ],
          20: [
            function (w, S, C) {
              'use strict';
              var I = w('./DataReader');
              function i(w) {
                I.call(this, w);
              }
              w('../utils').inherits(i, I),
                (i.prototype.byteAt = function (w) {
                  return this.data.charCodeAt(this.zero + w);
                }),
                (i.prototype.lastIndexOfSignature = function (w) {
                  return this.data.lastIndexOf(w) - this.zero;
                }),
                (i.prototype.readAndCheckSignature = function (w) {
                  return w === this.readData(4);
                }),
                (i.prototype.readData = function (w) {
                  this.checkOffset(w);
                  var S = this.data.slice(this.zero + this.index, this.zero + this.index + w);
                  return (this.index += w), S;
                }),
                (S.exports = i);
            },
            { '../utils': 32, './DataReader': 18 }
          ],
          21: [
            function (w, S, C) {
              'use strict';
              var I = w('./ArrayReader');
              function i(w) {
                I.call(this, w);
              }
              w('../utils').inherits(i, I),
                (i.prototype.readData = function (w) {
                  if ((this.checkOffset(w), 0 === w)) return new Uint8Array(0);
                  var S = this.data.subarray(this.zero + this.index, this.zero + this.index + w);
                  return (this.index += w), S;
                }),
                (S.exports = i);
            },
            { '../utils': 32, './ArrayReader': 17 }
          ],
          22: [
            function (w, S, C) {
              'use strict';
              var I = w('../utils'),
                $ = w('../support'),
                er = w('./ArrayReader'),
                en = w('./StringReader'),
                ei = w('./NodeBufferReader'),
                eo = w('./Uint8ArrayReader');
              S.exports = function (w) {
                var S = I.getTypeOf(w);
                return (
                  I.checkSupport(S),
                  'string' !== S || $.uint8array
                    ? 'nodebuffer' === S
                      ? new ei(w)
                      : $.uint8array
                      ? new eo(I.transformTo('uint8array', w))
                      : new er(I.transformTo('array', w))
                    : new en(w)
                );
              };
            },
            {
              '../support': 30,
              '../utils': 32,
              './ArrayReader': 17,
              './NodeBufferReader': 19,
              './StringReader': 20,
              './Uint8ArrayReader': 21
            }
          ],
          23: [
            function (w, S, C) {
              'use strict';
              (C.LOCAL_FILE_HEADER = 'PK\x03\x04'),
                (C.CENTRAL_FILE_HEADER = 'PK\x01\x02'),
                (C.CENTRAL_DIRECTORY_END = 'PK\x05\x06'),
                (C.ZIP64_CENTRAL_DIRECTORY_LOCATOR = 'PK\x06\x07'),
                (C.ZIP64_CENTRAL_DIRECTORY_END = 'PK\x06\x06'),
                (C.DATA_DESCRIPTOR = 'PK\x07\b');
            },
            {}
          ],
          24: [
            function (w, S, C) {
              'use strict';
              var I = w('./GenericWorker'),
                $ = w('../utils');
              function s(w) {
                I.call(this, 'ConvertWorker to ' + w), (this.destType = w);
              }
              $.inherits(s, I),
                (s.prototype.processChunk = function (w) {
                  this.push({ data: $.transformTo(this.destType, w.data), meta: w.meta });
                }),
                (S.exports = s);
            },
            { '../utils': 32, './GenericWorker': 28 }
          ],
          25: [
            function (w, S, C) {
              'use strict';
              var I = w('./GenericWorker'),
                $ = w('../crc32');
              function s() {
                I.call(this, 'Crc32Probe'), this.withStreamInfo('crc32', 0);
              }
              w('../utils').inherits(s, I),
                (s.prototype.processChunk = function (w) {
                  (this.streamInfo.crc32 = $(w.data, this.streamInfo.crc32 || 0)), this.push(w);
                }),
                (S.exports = s);
            },
            { '../crc32': 4, '../utils': 32, './GenericWorker': 28 }
          ],
          26: [
            function (w, S, C) {
              'use strict';
              var I = w('../utils'),
                $ = w('./GenericWorker');
              function s(w) {
                $.call(this, 'DataLengthProbe for ' + w), (this.propName = w), this.withStreamInfo(w, 0);
              }
              I.inherits(s, $),
                (s.prototype.processChunk = function (w) {
                  if (w) {
                    var S = this.streamInfo[this.propName] || 0;
                    this.streamInfo[this.propName] = S + w.data.length;
                  }
                  $.prototype.processChunk.call(this, w);
                }),
                (S.exports = s);
            },
            { '../utils': 32, './GenericWorker': 28 }
          ],
          27: [
            function (w, S, C) {
              'use strict';
              var I = w('../utils'),
                $ = w('./GenericWorker');
              function s(w) {
                $.call(this, 'DataWorker');
                var S = this;
                (this.dataIsReady = !1),
                  (this.index = 0),
                  (this.max = 0),
                  (this.data = null),
                  (this.type = ''),
                  (this._tickScheduled = !1),
                  w.then(
                    function (w) {
                      (S.dataIsReady = !0),
                        (S.data = w),
                        (S.max = (w && w.length) || 0),
                        (S.type = I.getTypeOf(w)),
                        S.isPaused || S._tickAndRepeat();
                    },
                    function (w) {
                      S.error(w);
                    }
                  );
              }
              I.inherits(s, $),
                (s.prototype.cleanUp = function () {
                  $.prototype.cleanUp.call(this), (this.data = null);
                }),
                (s.prototype.resume = function () {
                  return (
                    !!$.prototype.resume.call(this) &&
                    (!this._tickScheduled &&
                      this.dataIsReady &&
                      ((this._tickScheduled = !0), I.delay(this._tickAndRepeat, [], this)),
                    !0)
                  );
                }),
                (s.prototype._tickAndRepeat = function () {
                  (this._tickScheduled = !1),
                    this.isPaused ||
                      this.isFinished ||
                      (this._tick(),
                      this.isFinished || (I.delay(this._tickAndRepeat, [], this), (this._tickScheduled = !0)));
                }),
                (s.prototype._tick = function () {
                  if (this.isPaused || this.isFinished) return !1;
                  var w = null,
                    S = Math.min(this.max, this.index + 16384);
                  if (this.index >= this.max) return this.end();
                  switch (this.type) {
                    case 'string':
                      w = this.data.substring(this.index, S);
                      break;
                    case 'uint8array':
                      w = this.data.subarray(this.index, S);
                      break;
                    case 'array':
                    case 'nodebuffer':
                      w = this.data.slice(this.index, S);
                  }
                  return (
                    (this.index = S),
                    this.push({ data: w, meta: { percent: this.max ? (this.index / this.max) * 100 : 0 } })
                  );
                }),
                (S.exports = s);
            },
            { '../utils': 32, './GenericWorker': 28 }
          ],
          28: [
            function (w, S, C) {
              'use strict';
              function n(w) {
                (this.name = w || 'default'),
                  (this.streamInfo = {}),
                  (this.generatedError = null),
                  (this.extraStreamInfo = {}),
                  (this.isPaused = !0),
                  (this.isFinished = !1),
                  (this.isLocked = !1),
                  (this._listeners = { data: [], end: [], error: [] }),
                  (this.previous = null);
              }
              (n.prototype = {
                push: function (w) {
                  this.emit('data', w);
                },
                end: function () {
                  if (this.isFinished) return !1;
                  this.flush();
                  try {
                    this.emit('end'), this.cleanUp(), (this.isFinished = !0);
                  } catch (w) {
                    this.emit('error', w);
                  }
                  return !0;
                },
                error: function (w) {
                  return (
                    !this.isFinished &&
                    (this.isPaused
                      ? (this.generatedError = w)
                      : ((this.isFinished = !0),
                        this.emit('error', w),
                        this.previous && this.previous.error(w),
                        this.cleanUp()),
                    !0)
                  );
                },
                on: function (w, S) {
                  return this._listeners[w].push(S), this;
                },
                cleanUp: function () {
                  (this.streamInfo = this.generatedError = this.extraStreamInfo = null), (this._listeners = []);
                },
                emit: function (w, S) {
                  if (this._listeners[w])
                    for (var C = 0; C < this._listeners[w].length; C++) this._listeners[w][C].call(this, S);
                },
                pipe: function (w) {
                  return w.registerPrevious(this);
                },
                registerPrevious: function (w) {
                  if (this.isLocked) throw Error("The stream '" + this + "' has already been used.");
                  (this.streamInfo = w.streamInfo), this.mergeStreamInfo(), (this.previous = w);
                  var S = this;
                  return (
                    w.on('data', function (w) {
                      S.processChunk(w);
                    }),
                    w.on('end', function () {
                      S.end();
                    }),
                    w.on('error', function (w) {
                      S.error(w);
                    }),
                    this
                  );
                },
                pause: function () {
                  return (
                    !this.isPaused &&
                    !this.isFinished &&
                    ((this.isPaused = !0), this.previous && this.previous.pause(), !0)
                  );
                },
                resume: function () {
                  if (!this.isPaused || this.isFinished) return !1;
                  var w = (this.isPaused = !1);
                  return (
                    this.generatedError && (this.error(this.generatedError), (w = !0)),
                    this.previous && this.previous.resume(),
                    !w
                  );
                },
                flush: function () {},
                processChunk: function (w) {
                  this.push(w);
                },
                withStreamInfo: function (w, S) {
                  return (this.extraStreamInfo[w] = S), this.mergeStreamInfo(), this;
                },
                mergeStreamInfo: function () {
                  for (var w in this.extraStreamInfo)
                    Object.prototype.hasOwnProperty.call(this.extraStreamInfo, w) &&
                      (this.streamInfo[w] = this.extraStreamInfo[w]);
                },
                lock: function () {
                  if (this.isLocked) throw Error("The stream '" + this + "' has already been used.");
                  (this.isLocked = !0), this.previous && this.previous.lock();
                },
                toString: function () {
                  var w = 'Worker ' + this.name;
                  return this.previous ? this.previous + ' -> ' + w : w;
                }
              }),
                (S.exports = n);
            },
            {}
          ],
          29: [
            function (w, S, C) {
              'use strict';
              var $ = w('../utils'),
                er = w('./ConvertWorker'),
                en = w('./GenericWorker'),
                ei = w('../base64'),
                eo = w('../support'),
                es = w('../external'),
                el = null;
              if (eo.nodestream)
                try {
                  el = w('../nodejs/NodejsStreamOutputAdapter');
                } catch (w) {}
              function l(w, S) {
                return new es.Promise(function (C, er) {
                  var en = [],
                    eo = w._internalType,
                    es = w._outputType,
                    el = w._mimeType;
                  w.on('data', function (w, C) {
                    en.push(w), S && S(C);
                  })
                    .on('error', function (w) {
                      (en = []), er(w);
                    })
                    .on('end', function () {
                      try {
                        var w = (function (w, S, C) {
                          switch (w) {
                            case 'blob':
                              return $.newBlob($.transformTo('arraybuffer', S), C);
                            case 'base64':
                              return ei.encode(S);
                            default:
                              return $.transformTo(w, S);
                          }
                        })(
                          es,
                          (function (w, S) {
                            var C,
                              $ = 0,
                              er = null,
                              en = 0;
                            for (C = 0; C < S.length; C++) en += S[C].length;
                            switch (w) {
                              case 'string':
                                return S.join('');
                              case 'array':
                                return Array.prototype.concat.apply([], S);
                              case 'uint8array':
                                for (er = new Uint8Array(en), C = 0; C < S.length; C++)
                                  er.set(S[C], $), ($ += S[C].length);
                                return er;
                              case 'nodebuffer':
                                return I.concat(S);
                              default:
                                throw Error("concat : unsupported type '" + w + "'");
                            }
                          })(eo, en),
                          el
                        );
                        C(w);
                      } catch (w) {
                        er(w);
                      }
                      en = [];
                    })
                    .resume();
                });
              }
              function f(w, S, C) {
                var I = S;
                switch (S) {
                  case 'blob':
                  case 'arraybuffer':
                    I = 'uint8array';
                    break;
                  case 'base64':
                    I = 'string';
                }
                try {
                  (this._internalType = I),
                    (this._outputType = S),
                    (this._mimeType = C),
                    $.checkSupport(I),
                    (this._worker = w.pipe(new er(I))),
                    w.lock();
                } catch (w) {
                  (this._worker = new en('error')), this._worker.error(w);
                }
              }
              (f.prototype = {
                accumulate: function (w) {
                  return l(this, w);
                },
                on: function (w, S) {
                  var C = this;
                  return (
                    'data' === w
                      ? this._worker.on(w, function (w) {
                          S.call(C, w.data, w.meta);
                        })
                      : this._worker.on(w, function () {
                          $.delay(S, arguments, C);
                        }),
                    this
                  );
                },
                resume: function () {
                  return $.delay(this._worker.resume, [], this._worker), this;
                },
                pause: function () {
                  return this._worker.pause(), this;
                },
                toNodejsStream: function (w) {
                  if (($.checkSupport('nodestream'), 'nodebuffer' !== this._outputType))
                    throw Error(this._outputType + ' is not supported by this method');
                  return new el(this, { objectMode: 'nodebuffer' !== this._outputType }, w);
                }
              }),
                (S.exports = f);
            },
            {
              '../base64': 1,
              '../external': 6,
              '../nodejs/NodejsStreamOutputAdapter': 13,
              '../support': 30,
              '../utils': 32,
              './ConvertWorker': 24,
              './GenericWorker': 28
            }
          ],
          30: [
            function (w, S, C) {
              'use strict';
              if (
                ((C.base64 = !0),
                (C.array = !0),
                (C.string = !0),
                (C.arraybuffer = 'undefined' != typeof ArrayBuffer && 'undefined' != typeof Uint8Array),
                (C.nodebuffer = void 0 !== I),
                (C.uint8array = 'undefined' != typeof Uint8Array),
                'undefined' == typeof ArrayBuffer)
              )
                C.blob = !1;
              else {
                var $ = new ArrayBuffer(0);
                try {
                  C.blob = 0 === new Blob([$], { type: 'application/zip' }).size;
                } catch (w) {
                  try {
                    var er = new (self.BlobBuilder ||
                      self.WebKitBlobBuilder ||
                      self.MozBlobBuilder ||
                      self.MSBlobBuilder)();
                    er.append($), (C.blob = 0 === er.getBlob('application/zip').size);
                  } catch (w) {
                    C.blob = !1;
                  }
                }
              }
              try {
                C.nodestream = !!w('readable-stream').Readable;
              } catch (w) {
                C.nodestream = !1;
              }
            },
            { 'readable-stream': 16 }
          ],
          31: [
            function (w, S, C) {
              'use strict';
              for (
                var I = w('./utils'),
                  $ = w('./support'),
                  er = w('./nodejsUtils'),
                  en = w('./stream/GenericWorker'),
                  ei = Array(256),
                  eo = 0;
                eo < 256;
                eo++
              )
                ei[eo] = 252 <= eo ? 6 : 248 <= eo ? 5 : 240 <= eo ? 4 : 224 <= eo ? 3 : 192 <= eo ? 2 : 1;
              function a() {
                en.call(this, 'utf-8 decode'), (this.leftOver = null);
              }
              function l() {
                en.call(this, 'utf-8 encode');
              }
              (ei[254] = ei[254] = 1),
                (C.utf8encode = function (w) {
                  return $.nodebuffer
                    ? er.newBufferFrom(w, 'utf-8')
                    : (function (w) {
                        var S,
                          C,
                          I,
                          er,
                          en,
                          ei = w.length,
                          eo = 0;
                        for (er = 0; er < ei; er++)
                          55296 == (64512 & (C = w.charCodeAt(er))) &&
                            er + 1 < ei &&
                            56320 == (64512 & (I = w.charCodeAt(er + 1))) &&
                            ((C = 65536 + ((C - 55296) << 10) + (I - 56320)), er++),
                            (eo += C < 128 ? 1 : C < 2048 ? 2 : C < 65536 ? 3 : 4);
                        for (S = $.uint8array ? new Uint8Array(eo) : Array(eo), er = en = 0; en < eo; er++)
                          55296 == (64512 & (C = w.charCodeAt(er))) &&
                            er + 1 < ei &&
                            56320 == (64512 & (I = w.charCodeAt(er + 1))) &&
                            ((C = 65536 + ((C - 55296) << 10) + (I - 56320)), er++),
                            C < 128
                              ? (S[en++] = C)
                              : (C < 2048
                                  ? (S[en++] = 192 | (C >>> 6))
                                  : (C < 65536
                                      ? (S[en++] = 224 | (C >>> 12))
                                      : ((S[en++] = 240 | (C >>> 18)), (S[en++] = 128 | ((C >>> 12) & 63))),
                                    (S[en++] = 128 | ((C >>> 6) & 63))),
                                (S[en++] = 128 | (63 & C)));
                        return S;
                      })(w);
                }),
                (C.utf8decode = function (w) {
                  return $.nodebuffer
                    ? I.transformTo('nodebuffer', w).toString('utf-8')
                    : (function (w) {
                        var S,
                          C,
                          $,
                          er,
                          en = w.length,
                          eo = Array(2 * en);
                        for (S = C = 0; S < en; )
                          if (($ = w[S++]) < 128) eo[C++] = $;
                          else if (4 < (er = ei[$])) (eo[C++] = 65533), (S += er - 1);
                          else {
                            for ($ &= 2 === er ? 31 : 3 === er ? 15 : 7; 1 < er && S < en; )
                              ($ = ($ << 6) | (63 & w[S++])), er--;
                            1 < er
                              ? (eo[C++] = 65533)
                              : $ < 65536
                              ? (eo[C++] = $)
                              : (($ -= 65536), (eo[C++] = 55296 | (($ >> 10) & 1023)), (eo[C++] = 56320 | (1023 & $)));
                          }
                        return (
                          eo.length !== C && (eo.subarray ? (eo = eo.subarray(0, C)) : (eo.length = C)),
                          I.applyFromCharCode(eo)
                        );
                      })((w = I.transformTo($.uint8array ? 'uint8array' : 'array', w)));
                }),
                I.inherits(a, en),
                (a.prototype.processChunk = function (w) {
                  var S = I.transformTo($.uint8array ? 'uint8array' : 'array', w.data);
                  if (this.leftOver && this.leftOver.length) {
                    if ($.uint8array) {
                      var er = S;
                      (S = new Uint8Array(er.length + this.leftOver.length)).set(this.leftOver, 0),
                        S.set(er, this.leftOver.length);
                    } else S = this.leftOver.concat(S);
                    this.leftOver = null;
                  }
                  var en = (function (w, S) {
                      var C;
                      for ((S = S || w.length) > w.length && (S = w.length), C = S - 1; 0 <= C && 128 == (192 & w[C]); )
                        C--;
                      return C < 0 ? S : 0 === C ? S : C + ei[w[C]] > S ? C : S;
                    })(S),
                    eo = S;
                  en !== S.length &&
                    ($.uint8array
                      ? ((eo = S.subarray(0, en)), (this.leftOver = S.subarray(en, S.length)))
                      : ((eo = S.slice(0, en)), (this.leftOver = S.slice(en, S.length)))),
                    this.push({ data: C.utf8decode(eo), meta: w.meta });
                }),
                (a.prototype.flush = function () {
                  this.leftOver &&
                    this.leftOver.length &&
                    (this.push({ data: C.utf8decode(this.leftOver), meta: {} }), (this.leftOver = null));
                }),
                (C.Utf8DecodeWorker = a),
                I.inherits(l, en),
                (l.prototype.processChunk = function (w) {
                  this.push({ data: C.utf8encode(w.data), meta: w.meta });
                }),
                (C.Utf8EncodeWorker = l);
            },
            { './nodejsUtils': 14, './stream/GenericWorker': 28, './support': 30, './utils': 32 }
          ],
          32: [
            function (w, S, C) {
              'use strict';
              var I = w('./support'),
                $ = w('./base64'),
                er = w('./nodejsUtils'),
                en = w('./external');
              function n(w) {
                return w;
              }
              function l(w, S) {
                for (var C = 0; C < w.length; ++C) S[C] = 255 & w.charCodeAt(C);
                return S;
              }
              w('setimmediate'),
                (C.newBlob = function (w, S) {
                  C.checkSupport('blob');
                  try {
                    return new Blob([w], { type: S });
                  } catch (C) {
                    try {
                      var I = new (self.BlobBuilder ||
                        self.WebKitBlobBuilder ||
                        self.MozBlobBuilder ||
                        self.MSBlobBuilder)();
                      return I.append(w), I.getBlob(S);
                    } catch (w) {
                      throw Error("Bug : can't construct the Blob.");
                    }
                  }
                });
              var ei = {
                stringifyByChunk: function (w, S, C) {
                  var I = [],
                    $ = 0,
                    er = w.length;
                  if (er <= C) return String.fromCharCode.apply(null, w);
                  for (; $ < er; )
                    'array' === S || 'nodebuffer' === S
                      ? I.push(String.fromCharCode.apply(null, w.slice($, Math.min($ + C, er))))
                      : I.push(String.fromCharCode.apply(null, w.subarray($, Math.min($ + C, er)))),
                      ($ += C);
                  return I.join('');
                },
                stringifyByChar: function (w) {
                  for (var S = '', C = 0; C < w.length; C++) S += String.fromCharCode(w[C]);
                  return S;
                },
                applyCanBeUsed: {
                  uint8array: (function () {
                    try {
                      return I.uint8array && 1 === String.fromCharCode.apply(null, new Uint8Array(1)).length;
                    } catch (w) {
                      return !1;
                    }
                  })(),
                  nodebuffer: (function () {
                    try {
                      return I.nodebuffer && 1 === String.fromCharCode.apply(null, er.allocBuffer(1)).length;
                    } catch (w) {
                      return !1;
                    }
                  })()
                }
              };
              function s(w) {
                var S = 65536,
                  I = C.getTypeOf(w),
                  $ = !0;
                if (
                  ('uint8array' === I
                    ? ($ = ei.applyCanBeUsed.uint8array)
                    : 'nodebuffer' === I && ($ = ei.applyCanBeUsed.nodebuffer),
                  $)
                )
                  for (; 1 < S; )
                    try {
                      return ei.stringifyByChunk(w, I, S);
                    } catch (w) {
                      S = Math.floor(S / 2);
                    }
                return ei.stringifyByChar(w);
              }
              function f(w, S) {
                for (var C = 0; C < w.length; C++) S[C] = w[C];
                return S;
              }
              C.applyFromCharCode = s;
              var eo = {};
              (eo.string = {
                string: n,
                array: function (w) {
                  return l(w, Array(w.length));
                },
                arraybuffer: function (w) {
                  return eo.string.uint8array(w).buffer;
                },
                uint8array: function (w) {
                  return l(w, new Uint8Array(w.length));
                },
                nodebuffer: function (w) {
                  return l(w, er.allocBuffer(w.length));
                }
              }),
                (eo.array = {
                  string: s,
                  array: n,
                  arraybuffer: function (w) {
                    return new Uint8Array(w).buffer;
                  },
                  uint8array: function (w) {
                    return new Uint8Array(w);
                  },
                  nodebuffer: function (w) {
                    return er.newBufferFrom(w);
                  }
                }),
                (eo.arraybuffer = {
                  string: function (w) {
                    return s(new Uint8Array(w));
                  },
                  array: function (w) {
                    return f(new Uint8Array(w), Array(w.byteLength));
                  },
                  arraybuffer: n,
                  uint8array: function (w) {
                    return new Uint8Array(w);
                  },
                  nodebuffer: function (w) {
                    return er.newBufferFrom(new Uint8Array(w));
                  }
                }),
                (eo.uint8array = {
                  string: s,
                  array: function (w) {
                    return f(w, Array(w.length));
                  },
                  arraybuffer: function (w) {
                    return w.buffer;
                  },
                  uint8array: n,
                  nodebuffer: function (w) {
                    return er.newBufferFrom(w);
                  }
                }),
                (eo.nodebuffer = {
                  string: s,
                  array: function (w) {
                    return f(w, Array(w.length));
                  },
                  arraybuffer: function (w) {
                    return eo.nodebuffer.uint8array(w).buffer;
                  },
                  uint8array: function (w) {
                    return f(w, new Uint8Array(w.length));
                  },
                  nodebuffer: n
                }),
                (C.transformTo = function (w, S) {
                  return ((S = S || ''), w) ? (C.checkSupport(w), eo[C.getTypeOf(S)][w](S)) : S;
                }),
                (C.resolve = function (w) {
                  for (var S = w.split('/'), C = [], I = 0; I < S.length; I++) {
                    var $ = S[I];
                    '.' === $ || ('' === $ && 0 !== I && I !== S.length - 1) || ('..' === $ ? C.pop() : C.push($));
                  }
                  return C.join('/');
                }),
                (C.getTypeOf = function (w) {
                  return 'string' == typeof w
                    ? 'string'
                    : '[object Array]' === Object.prototype.toString.call(w)
                    ? 'array'
                    : I.nodebuffer && er.isBuffer(w)
                    ? 'nodebuffer'
                    : I.uint8array && w instanceof Uint8Array
                    ? 'uint8array'
                    : I.arraybuffer && w instanceof ArrayBuffer
                    ? 'arraybuffer'
                    : void 0;
                }),
                (C.checkSupport = function (w) {
                  if (!I[w.toLowerCase()]) throw Error(w + ' is not supported by this platform');
                }),
                (C.MAX_VALUE_16BITS = 65535),
                (C.MAX_VALUE_32BITS = -1),
                (C.pretty = function (w) {
                  var S,
                    C,
                    I = '';
                  for (C = 0; C < (w || '').length; C++)
                    I += '\\x' + ((S = w.charCodeAt(C)) < 16 ? '0' : '') + S.toString(16).toUpperCase();
                  return I;
                }),
                (C.delay = function (w, S, C) {
                  setImmediate(function () {
                    w.apply(C || null, S || []);
                  });
                }),
                (C.inherits = function (w, S) {
                  function r() {}
                  (r.prototype = S.prototype), (w.prototype = new r());
                }),
                (C.extend = function () {
                  var w,
                    S,
                    C = {};
                  for (w = 0; w < arguments.length; w++)
                    for (S in arguments[w])
                      Object.prototype.hasOwnProperty.call(arguments[w], S) &&
                        void 0 === C[S] &&
                        (C[S] = arguments[w][S]);
                  return C;
                }),
                (C.prepareContent = function (w, S, er, ei, eo) {
                  return en.Promise.resolve(S)
                    .then(function (w) {
                      return I.blob &&
                        (w instanceof Blob ||
                          -1 !== ['[object File]', '[object Blob]'].indexOf(Object.prototype.toString.call(w))) &&
                        'undefined' != typeof FileReader
                        ? new en.Promise(function (S, C) {
                            var I = new FileReader();
                            (I.onload = function (w) {
                              S(w.target.result);
                            }),
                              (I.onerror = function (w) {
                                C(w.target.error);
                              }),
                              I.readAsArrayBuffer(w);
                          })
                        : w;
                    })
                    .then(function (S) {
                      var es,
                        el = C.getTypeOf(S);
                      return el
                        ? ('arraybuffer' === el
                            ? (S = C.transformTo('uint8array', S))
                            : 'string' === el &&
                              (eo
                                ? (S = $.decode(S))
                                : er &&
                                  !0 !== ei &&
                                  (S = l((es = S), I.uint8array ? new Uint8Array(es.length) : Array(es.length)))),
                          S)
                        : en.Promise.reject(
                            Error(
                              "Can't read the data of '" +
                                w +
                                "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"
                            )
                          );
                    });
                });
            },
            { './base64': 1, './external': 6, './nodejsUtils': 14, './support': 30, setimmediate: 54 }
          ],
          33: [
            function (w, S, C) {
              'use strict';
              var I = w('./reader/readerFor'),
                $ = w('./utils'),
                er = w('./signature'),
                en = w('./zipEntry'),
                ei = w('./support');
              function h(w) {
                (this.files = []), (this.loadOptions = w);
              }
              (h.prototype = {
                checkSignature: function (w) {
                  if (!this.reader.readAndCheckSignature(w)) {
                    this.reader.index -= 4;
                    var S = this.reader.readString(4);
                    throw Error(
                      'Corrupted zip or bug: unexpected signature (' + $.pretty(S) + ', expected ' + $.pretty(w) + ')'
                    );
                  }
                },
                isSignature: function (w, S) {
                  var C = this.reader.index;
                  this.reader.setIndex(w);
                  var I = this.reader.readString(4) === S;
                  return this.reader.setIndex(C), I;
                },
                readBlockEndOfCentral: function () {
                  (this.diskNumber = this.reader.readInt(2)),
                    (this.diskWithCentralDirStart = this.reader.readInt(2)),
                    (this.centralDirRecordsOnThisDisk = this.reader.readInt(2)),
                    (this.centralDirRecords = this.reader.readInt(2)),
                    (this.centralDirSize = this.reader.readInt(4)),
                    (this.centralDirOffset = this.reader.readInt(4)),
                    (this.zipCommentLength = this.reader.readInt(2));
                  var w = this.reader.readData(this.zipCommentLength),
                    S = ei.uint8array ? 'uint8array' : 'array',
                    C = $.transformTo(S, w);
                  this.zipComment = this.loadOptions.decodeFileName(C);
                },
                readBlockZip64EndOfCentral: function () {
                  (this.zip64EndOfCentralSize = this.reader.readInt(8)),
                    this.reader.skip(4),
                    (this.diskNumber = this.reader.readInt(4)),
                    (this.diskWithCentralDirStart = this.reader.readInt(4)),
                    (this.centralDirRecordsOnThisDisk = this.reader.readInt(8)),
                    (this.centralDirRecords = this.reader.readInt(8)),
                    (this.centralDirSize = this.reader.readInt(8)),
                    (this.centralDirOffset = this.reader.readInt(8)),
                    (this.zip64ExtensibleData = {});
                  for (var w, S, C, I = this.zip64EndOfCentralSize - 44; 0 < I; )
                    (w = this.reader.readInt(2)),
                      (S = this.reader.readInt(4)),
                      (C = this.reader.readData(S)),
                      (this.zip64ExtensibleData[w] = { id: w, length: S, value: C });
                },
                readBlockZip64EndOfCentralLocator: function () {
                  if (
                    ((this.diskWithZip64CentralDirStart = this.reader.readInt(4)),
                    (this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8)),
                    (this.disksCount = this.reader.readInt(4)),
                    1 < this.disksCount)
                  )
                    throw Error('Multi-volumes zip are not supported');
                },
                readLocalFiles: function () {
                  var w, S;
                  for (w = 0; w < this.files.length; w++)
                    (S = this.files[w]),
                      this.reader.setIndex(S.localHeaderOffset),
                      this.checkSignature(er.LOCAL_FILE_HEADER),
                      S.readLocalPart(this.reader),
                      S.handleUTF8(),
                      S.processAttributes();
                },
                readCentralDir: function () {
                  var w;
                  for (
                    this.reader.setIndex(this.centralDirOffset);
                    this.reader.readAndCheckSignature(er.CENTRAL_FILE_HEADER);

                  )
                    (w = new en({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader),
                      this.files.push(w);
                  if (
                    this.centralDirRecords !== this.files.length &&
                    0 !== this.centralDirRecords &&
                    0 === this.files.length
                  )
                    throw Error(
                      'Corrupted zip or bug: expected ' +
                        this.centralDirRecords +
                        ' records in central dir, got ' +
                        this.files.length
                    );
                },
                readEndOfCentral: function () {
                  var w = this.reader.lastIndexOfSignature(er.CENTRAL_DIRECTORY_END);
                  if (w < 0)
                    throw this.isSignature(0, er.LOCAL_FILE_HEADER)
                      ? Error("Corrupted zip: can't find end of central directory")
                      : Error(
                          "Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html"
                        );
                  this.reader.setIndex(w);
                  var S = w;
                  if (
                    (this.checkSignature(er.CENTRAL_DIRECTORY_END),
                    this.readBlockEndOfCentral(),
                    this.diskNumber === $.MAX_VALUE_16BITS ||
                      this.diskWithCentralDirStart === $.MAX_VALUE_16BITS ||
                      this.centralDirRecordsOnThisDisk === $.MAX_VALUE_16BITS ||
                      this.centralDirRecords === $.MAX_VALUE_16BITS ||
                      this.centralDirSize === $.MAX_VALUE_32BITS ||
                      this.centralDirOffset === $.MAX_VALUE_32BITS)
                  ) {
                    if (
                      ((this.zip64 = !0),
                      (w = this.reader.lastIndexOfSignature(er.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
                    )
                      throw Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
                    if (
                      (this.reader.setIndex(w),
                      this.checkSignature(er.ZIP64_CENTRAL_DIRECTORY_LOCATOR),
                      this.readBlockZip64EndOfCentralLocator(),
                      !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, er.ZIP64_CENTRAL_DIRECTORY_END) &&
                        ((this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(
                          er.ZIP64_CENTRAL_DIRECTORY_END
                        )),
                        this.relativeOffsetEndOfZip64CentralDir < 0))
                    )
                      throw Error("Corrupted zip: can't find the ZIP64 end of central directory");
                    this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),
                      this.checkSignature(er.ZIP64_CENTRAL_DIRECTORY_END),
                      this.readBlockZip64EndOfCentral();
                  }
                  var C = this.centralDirOffset + this.centralDirSize;
                  this.zip64 && (C += 20 + (12 + this.zip64EndOfCentralSize));
                  var I = S - C;
                  if (0 < I) this.isSignature(S, er.CENTRAL_FILE_HEADER) || (this.reader.zero = I);
                  else if (I < 0) throw Error('Corrupted zip: missing ' + Math.abs(I) + ' bytes.');
                },
                prepareReader: function (w) {
                  this.reader = I(w);
                },
                load: function (w) {
                  this.prepareReader(w), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
                }
              }),
                (S.exports = h);
            },
            { './reader/readerFor': 22, './signature': 23, './support': 30, './utils': 32, './zipEntry': 34 }
          ],
          34: [
            function (w, S, C) {
              'use strict';
              var I = w('./reader/readerFor'),
                $ = w('./utils'),
                er = w('./compressedObject'),
                en = w('./crc32'),
                ei = w('./utf8'),
                eo = w('./compressions'),
                es = w('./support');
              function l(w, S) {
                (this.options = w), (this.loadOptions = S);
              }
              (l.prototype = {
                isEncrypted: function () {
                  return 1 == (1 & this.bitFlag);
                },
                useUTF8: function () {
                  return 2048 == (2048 & this.bitFlag);
                },
                readLocalPart: function (w) {
                  var S, C;
                  if (
                    (w.skip(22),
                    (this.fileNameLength = w.readInt(2)),
                    (C = w.readInt(2)),
                    (this.fileName = w.readData(this.fileNameLength)),
                    w.skip(C),
                    -1 === this.compressedSize || -1 === this.uncompressedSize)
                  )
                    throw Error(
                      "Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)"
                    );
                  if (
                    null ===
                    (S = (function (w) {
                      for (var S in eo)
                        if (Object.prototype.hasOwnProperty.call(eo, S) && eo[S].magic === w) return eo[S];
                      return null;
                    })(this.compressionMethod))
                  )
                    throw Error(
                      'Corrupted zip : compression ' +
                        $.pretty(this.compressionMethod) +
                        ' unknown (inner file : ' +
                        $.transformTo('string', this.fileName) +
                        ')'
                    );
                  this.decompressed = new er(
                    this.compressedSize,
                    this.uncompressedSize,
                    this.crc32,
                    S,
                    w.readData(this.compressedSize)
                  );
                },
                readCentralPart: function (w) {
                  (this.versionMadeBy = w.readInt(2)),
                    w.skip(2),
                    (this.bitFlag = w.readInt(2)),
                    (this.compressionMethod = w.readString(2)),
                    (this.date = w.readDate()),
                    (this.crc32 = w.readInt(4)),
                    (this.compressedSize = w.readInt(4)),
                    (this.uncompressedSize = w.readInt(4));
                  var S = w.readInt(2);
                  if (
                    ((this.extraFieldsLength = w.readInt(2)),
                    (this.fileCommentLength = w.readInt(2)),
                    (this.diskNumberStart = w.readInt(2)),
                    (this.internalFileAttributes = w.readInt(2)),
                    (this.externalFileAttributes = w.readInt(4)),
                    (this.localHeaderOffset = w.readInt(4)),
                    this.isEncrypted())
                  )
                    throw Error('Encrypted zip are not supported');
                  w.skip(S),
                    this.readExtraFields(w),
                    this.parseZIP64ExtraField(w),
                    (this.fileComment = w.readData(this.fileCommentLength));
                },
                processAttributes: function () {
                  (this.unixPermissions = null), (this.dosPermissions = null);
                  var w = this.versionMadeBy >> 8;
                  (this.dir = !!(16 & this.externalFileAttributes)),
                    0 == w && (this.dosPermissions = 63 & this.externalFileAttributes),
                    3 == w && (this.unixPermissions = (this.externalFileAttributes >> 16) & 65535),
                    this.dir || '/' !== this.fileNameStr.slice(-1) || (this.dir = !0);
                },
                parseZIP64ExtraField: function () {
                  if (this.extraFields[1]) {
                    var w = I(this.extraFields[1].value);
                    this.uncompressedSize === $.MAX_VALUE_32BITS && (this.uncompressedSize = w.readInt(8)),
                      this.compressedSize === $.MAX_VALUE_32BITS && (this.compressedSize = w.readInt(8)),
                      this.localHeaderOffset === $.MAX_VALUE_32BITS && (this.localHeaderOffset = w.readInt(8)),
                      this.diskNumberStart === $.MAX_VALUE_32BITS && (this.diskNumberStart = w.readInt(4));
                  }
                },
                readExtraFields: function (w) {
                  var S,
                    C,
                    I,
                    $ = w.index + this.extraFieldsLength;
                  for (this.extraFields || (this.extraFields = {}); w.index + 4 < $; )
                    (S = w.readInt(2)),
                      (C = w.readInt(2)),
                      (I = w.readData(C)),
                      (this.extraFields[S] = { id: S, length: C, value: I });
                  w.setIndex($);
                },
                handleUTF8: function () {
                  var w = es.uint8array ? 'uint8array' : 'array';
                  if (this.useUTF8())
                    (this.fileNameStr = ei.utf8decode(this.fileName)),
                      (this.fileCommentStr = ei.utf8decode(this.fileComment));
                  else {
                    var S = this.findExtraFieldUnicodePath();
                    if (null !== S) this.fileNameStr = S;
                    else {
                      var C = $.transformTo(w, this.fileName);
                      this.fileNameStr = this.loadOptions.decodeFileName(C);
                    }
                    var I = this.findExtraFieldUnicodeComment();
                    if (null !== I) this.fileCommentStr = I;
                    else {
                      var er = $.transformTo(w, this.fileComment);
                      this.fileCommentStr = this.loadOptions.decodeFileName(er);
                    }
                  }
                },
                findExtraFieldUnicodePath: function () {
                  var w = this.extraFields[28789];
                  if (w) {
                    var S = I(w.value);
                    return 1 !== S.readInt(1)
                      ? null
                      : en(this.fileName) !== S.readInt(4)
                      ? null
                      : ei.utf8decode(S.readData(w.length - 5));
                  }
                  return null;
                },
                findExtraFieldUnicodeComment: function () {
                  var w = this.extraFields[25461];
                  if (w) {
                    var S = I(w.value);
                    return 1 !== S.readInt(1)
                      ? null
                      : en(this.fileComment) !== S.readInt(4)
                      ? null
                      : ei.utf8decode(S.readData(w.length - 5));
                  }
                  return null;
                }
              }),
                (S.exports = l);
            },
            {
              './compressedObject': 2,
              './compressions': 3,
              './crc32': 4,
              './reader/readerFor': 22,
              './support': 30,
              './utf8': 31,
              './utils': 32
            }
          ],
          35: [
            function (w, S, C) {
              'use strict';
              function n(w, S, C) {
                (this.name = w),
                  (this.dir = C.dir),
                  (this.date = C.date),
                  (this.comment = C.comment),
                  (this.unixPermissions = C.unixPermissions),
                  (this.dosPermissions = C.dosPermissions),
                  (this._data = S),
                  (this._dataBinary = C.binary),
                  (this.options = { compression: C.compression, compressionOptions: C.compressionOptions });
              }
              var I = w('./stream/StreamHelper'),
                $ = w('./stream/DataWorker'),
                er = w('./utf8'),
                en = w('./compressedObject'),
                ei = w('./stream/GenericWorker');
              n.prototype = {
                internalStream: function (w) {
                  var S = null,
                    C = 'string';
                  try {
                    if (!w) throw Error('No output type specified.');
                    var $ = 'string' === (C = w.toLowerCase()) || 'text' === C;
                    ('binarystring' !== C && 'text' !== C) || (C = 'string'), (S = this._decompressWorker());
                    var en = !this._dataBinary;
                    en && !$ && (S = S.pipe(new er.Utf8EncodeWorker())),
                      !en && $ && (S = S.pipe(new er.Utf8DecodeWorker()));
                  } catch (w) {
                    (S = new ei('error')).error(w);
                  }
                  return new I(S, C, '');
                },
                async: function (w, S) {
                  return this.internalStream(w).accumulate(S);
                },
                nodeStream: function (w, S) {
                  return this.internalStream(w || 'nodebuffer').toNodejsStream(S);
                },
                _compressWorker: function (w, S) {
                  if (this._data instanceof en && this._data.compression.magic === w.magic)
                    return this._data.getCompressedWorker();
                  var C = this._decompressWorker();
                  return this._dataBinary || (C = C.pipe(new er.Utf8EncodeWorker())), en.createWorkerFrom(C, w, S);
                },
                _decompressWorker: function () {
                  return this._data instanceof en
                    ? this._data.getContentWorker()
                    : this._data instanceof ei
                    ? this._data
                    : new $(this._data);
                }
              };
              for (
                var eo = ['asText', 'asBinary', 'asNodeBuffer', 'asUint8Array', 'asArrayBuffer'],
                  l = function () {
                    throw Error('This method has been removed in JSZip 3.0, please check the upgrade guide.');
                  },
                  es = 0;
                es < eo.length;
                es++
              )
                n.prototype[eo[es]] = l;
              S.exports = n;
            },
            {
              './compressedObject': 2,
              './stream/DataWorker': 27,
              './stream/GenericWorker': 28,
              './stream/StreamHelper': 29,
              './utf8': 31
            }
          ],
          36: [
            function (w, S, I) {
              (function (w) {
                'use strict';
                var C,
                  I,
                  $ = w.MutationObserver || w.WebKitMutationObserver;
                if ($) {
                  var er = 0,
                    en = new $(u),
                    ei = w.document.createTextNode('');
                  en.observe(ei, { characterData: !0 }),
                    (C = function () {
                      ei.data = er = ++er % 2;
                    });
                } else if (w.setImmediate || void 0 === w.MessageChannel)
                  C =
                    'document' in w && 'onreadystatechange' in w.document.createElement('script')
                      ? function () {
                          var S = w.document.createElement('script');
                          (S.onreadystatechange = function () {
                            u(), (S.onreadystatechange = null), S.parentNode.removeChild(S), (S = null);
                          }),
                            w.document.documentElement.appendChild(S);
                        }
                      : function () {
                          setTimeout(u, 0);
                        };
                else {
                  var eo = new w.MessageChannel();
                  (eo.port1.onmessage = u),
                    (C = function () {
                      eo.port2.postMessage(0);
                    });
                }
                var es = [];
                function u() {
                  var w, S;
                  I = !0;
                  for (var C = es.length; C; ) {
                    for (S = es, es = [], w = -1; ++w < C; ) S[w]();
                    C = es.length;
                  }
                  I = !1;
                }
                S.exports = function (w) {
                  1 !== es.push(w) || I || C();
                };
              }).call(
                this,
                void 0 !== C.g ? C.g : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {}
              );
            },
            {}
          ],
          37: [
            function (w, S, C) {
              'use strict';
              var I = w('immediate');
              function u() {}
              var $ = {},
                er = ['REJECTED'],
                en = ['FULFILLED'],
                ei = ['PENDING'];
              function o(w) {
                if ('function' != typeof w) throw TypeError('resolver must be a function');
                (this.state = ei), (this.queue = []), (this.outcome = void 0), w !== u && d(this, w);
              }
              function h(w, S, C) {
                (this.promise = w),
                  'function' == typeof S && ((this.onFulfilled = S), (this.callFulfilled = this.otherCallFulfilled)),
                  'function' == typeof C && ((this.onRejected = C), (this.callRejected = this.otherCallRejected));
              }
              function f(w, S, C) {
                I(function () {
                  var I;
                  try {
                    I = S(C);
                  } catch (S) {
                    return $.reject(w, S);
                  }
                  I === w ? $.reject(w, TypeError('Cannot resolve promise with itself')) : $.resolve(w, I);
                });
              }
              function c(w) {
                var S = w && w.then;
                if (w && ('object' == typeof w || 'function' == typeof w) && 'function' == typeof S)
                  return function () {
                    S.apply(w, arguments);
                  };
              }
              function d(w, S) {
                var C = !1;
                function n(S) {
                  C || ((C = !0), $.reject(w, S));
                }
                function i(S) {
                  C || ((C = !0), $.resolve(w, S));
                }
                var I = p(function () {
                  S(i, n);
                });
                'error' === I.status && n(I.value);
              }
              function p(w, S) {
                var C = {};
                try {
                  (C.value = w(S)), (C.status = 'success');
                } catch (w) {
                  (C.status = 'error'), (C.value = w);
                }
                return C;
              }
              ((S.exports = o).prototype.finally = function (w) {
                if ('function' != typeof w) return this;
                var S = this.constructor;
                return this.then(
                  function (C) {
                    return S.resolve(w()).then(function () {
                      return C;
                    });
                  },
                  function (C) {
                    return S.resolve(w()).then(function () {
                      throw C;
                    });
                  }
                );
              }),
                (o.prototype.catch = function (w) {
                  return this.then(null, w);
                }),
                (o.prototype.then = function (w, S) {
                  if (('function' != typeof w && this.state === en) || ('function' != typeof S && this.state === er))
                    return this;
                  var C = new this.constructor(u);
                  return (
                    this.state !== ei ? f(C, this.state === en ? w : S, this.outcome) : this.queue.push(new h(C, w, S)),
                    C
                  );
                }),
                (h.prototype.callFulfilled = function (w) {
                  $.resolve(this.promise, w);
                }),
                (h.prototype.otherCallFulfilled = function (w) {
                  f(this.promise, this.onFulfilled, w);
                }),
                (h.prototype.callRejected = function (w) {
                  $.reject(this.promise, w);
                }),
                (h.prototype.otherCallRejected = function (w) {
                  f(this.promise, this.onRejected, w);
                }),
                ($.resolve = function (w, S) {
                  var C = p(c, S);
                  if ('error' === C.status) return $.reject(w, C.value);
                  var I = C.value;
                  if (I) d(w, I);
                  else {
                    (w.state = en), (w.outcome = S);
                    for (var er = -1, ei = w.queue.length; ++er < ei; ) w.queue[er].callFulfilled(S);
                  }
                  return w;
                }),
                ($.reject = function (w, S) {
                  (w.state = er), (w.outcome = S);
                  for (var C = -1, I = w.queue.length; ++C < I; ) w.queue[C].callRejected(S);
                  return w;
                }),
                (o.resolve = function (w) {
                  return w instanceof this ? w : $.resolve(new this(u), w);
                }),
                (o.reject = function (w) {
                  var S = new this(u);
                  return $.reject(S, w);
                }),
                (o.all = function (w) {
                  var S = this;
                  if ('[object Array]' !== Object.prototype.toString.call(w))
                    return this.reject(TypeError('must be an array'));
                  var C = w.length,
                    I = !1;
                  if (!C) return this.resolve([]);
                  for (var er = Array(C), en = 0, ei = -1, eo = new this(u); ++ei < C; ) h(w[ei], ei);
                  return eo;
                  function h(w, ei) {
                    S.resolve(w).then(
                      function (w) {
                        (er[ei] = w), ++en !== C || I || ((I = !0), $.resolve(eo, er));
                      },
                      function (w) {
                        I || ((I = !0), $.reject(eo, w));
                      }
                    );
                  }
                }),
                (o.race = function (w) {
                  if ('[object Array]' !== Object.prototype.toString.call(w))
                    return this.reject(TypeError('must be an array'));
                  var S,
                    C = w.length,
                    I = !1;
                  if (!C) return this.resolve([]);
                  for (var er = -1, en = new this(u); ++er < C; )
                    (S = w[er]),
                      this.resolve(S).then(
                        function (w) {
                          I || ((I = !0), $.resolve(en, w));
                        },
                        function (w) {
                          I || ((I = !0), $.reject(en, w));
                        }
                      );
                  return en;
                });
            },
            { immediate: 36 }
          ],
          38: [
            function (w, S, C) {
              'use strict';
              var I = {};
              (0, w('./lib/utils/common').assign)(I, w('./lib/deflate'), w('./lib/inflate'), w('./lib/zlib/constants')),
                (S.exports = I);
            },
            { './lib/deflate': 39, './lib/inflate': 40, './lib/utils/common': 41, './lib/zlib/constants': 44 }
          ],
          39: [
            function (w, S, C) {
              'use strict';
              var I = w('./zlib/deflate'),
                $ = w('./utils/common'),
                er = w('./utils/strings'),
                en = w('./zlib/messages'),
                ei = w('./zlib/zstream'),
                eo = Object.prototype.toString;
              function p(w) {
                if (!(this instanceof p)) return new p(w);
                this.options = $.assign(
                  { level: -1, method: 8, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: 0, to: '' },
                  w || {}
                );
                var S,
                  C = this.options;
                C.raw && 0 < C.windowBits
                  ? (C.windowBits = -C.windowBits)
                  : C.gzip && 0 < C.windowBits && C.windowBits < 16 && (C.windowBits += 16),
                  (this.err = 0),
                  (this.msg = ''),
                  (this.ended = !1),
                  (this.chunks = []),
                  (this.strm = new ei()),
                  (this.strm.avail_out = 0);
                var es = I.deflateInit2(this.strm, C.level, C.method, C.windowBits, C.memLevel, C.strategy);
                if (0 !== es) throw Error(en[es]);
                if ((C.header && I.deflateSetHeader(this.strm, C.header), C.dictionary)) {
                  if (
                    ((S =
                      'string' == typeof C.dictionary
                        ? er.string2buf(C.dictionary)
                        : '[object ArrayBuffer]' === eo.call(C.dictionary)
                        ? new Uint8Array(C.dictionary)
                        : C.dictionary),
                    0 !== (es = I.deflateSetDictionary(this.strm, S)))
                  )
                    throw Error(en[es]);
                  this._dict_set = !0;
                }
              }
              function n(w, S) {
                var C = new p(S);
                if ((C.push(w, !0), C.err)) throw C.msg || en[C.err];
                return C.result;
              }
              (p.prototype.push = function (w, S) {
                var C,
                  en,
                  ei = this.strm,
                  es = this.options.chunkSize;
                if (this.ended) return !1;
                (en = S === ~~S ? S : !0 === S ? 4 : 0),
                  'string' == typeof w
                    ? (ei.input = er.string2buf(w))
                    : '[object ArrayBuffer]' === eo.call(w)
                    ? (ei.input = new Uint8Array(w))
                    : (ei.input = w),
                  (ei.next_in = 0),
                  (ei.avail_in = ei.input.length);
                do {
                  if (
                    (0 === ei.avail_out && ((ei.output = new $.Buf8(es)), (ei.next_out = 0), (ei.avail_out = es)),
                    1 !== (C = I.deflate(ei, en)) && 0 !== C)
                  )
                    return this.onEnd(C), (this.ended = !0), !1;
                  (0 !== ei.avail_out && (0 !== ei.avail_in || (4 !== en && 2 !== en))) ||
                    ('string' === this.options.to
                      ? this.onData(er.buf2binstring($.shrinkBuf(ei.output, ei.next_out)))
                      : this.onData($.shrinkBuf(ei.output, ei.next_out)));
                } while ((0 < ei.avail_in || 0 === ei.avail_out) && 1 !== C);
                return 4 === en
                  ? ((C = I.deflateEnd(this.strm)), this.onEnd(C), (this.ended = !0), 0 === C)
                  : 2 !== en || (this.onEnd(0), (ei.avail_out = 0), !0);
              }),
                (p.prototype.onData = function (w) {
                  this.chunks.push(w);
                }),
                (p.prototype.onEnd = function (w) {
                  0 === w &&
                    ('string' === this.options.to
                      ? (this.result = this.chunks.join(''))
                      : (this.result = $.flattenChunks(this.chunks))),
                    (this.chunks = []),
                    (this.err = w),
                    (this.msg = this.strm.msg);
                }),
                (C.Deflate = p),
                (C.deflate = n),
                (C.deflateRaw = function (w, S) {
                  return ((S = S || {}).raw = !0), n(w, S);
                }),
                (C.gzip = function (w, S) {
                  return ((S = S || {}).gzip = !0), n(w, S);
                });
            },
            {
              './utils/common': 41,
              './utils/strings': 42,
              './zlib/deflate': 46,
              './zlib/messages': 51,
              './zlib/zstream': 53
            }
          ],
          40: [
            function (w, S, C) {
              'use strict';
              var I = w('./zlib/inflate'),
                $ = w('./utils/common'),
                er = w('./utils/strings'),
                en = w('./zlib/constants'),
                ei = w('./zlib/messages'),
                eo = w('./zlib/zstream'),
                es = w('./zlib/gzheader'),
                el = Object.prototype.toString;
              function a(w) {
                if (!(this instanceof a)) return new a(w);
                this.options = $.assign({ chunkSize: 16384, windowBits: 0, to: '' }, w || {});
                var S = this.options;
                S.raw &&
                  0 <= S.windowBits &&
                  S.windowBits < 16 &&
                  ((S.windowBits = -S.windowBits), 0 === S.windowBits && (S.windowBits = -15)),
                  !(0 <= S.windowBits && S.windowBits < 16) || (w && w.windowBits) || (S.windowBits += 32),
                  15 < S.windowBits && S.windowBits < 48 && 0 == (15 & S.windowBits) && (S.windowBits |= 15),
                  (this.err = 0),
                  (this.msg = ''),
                  (this.ended = !1),
                  (this.chunks = []),
                  (this.strm = new eo()),
                  (this.strm.avail_out = 0);
                var C = I.inflateInit2(this.strm, S.windowBits);
                if (C !== en.Z_OK) throw Error(ei[C]);
                (this.header = new es()), I.inflateGetHeader(this.strm, this.header);
              }
              function o(w, S) {
                var C = new a(S);
                if ((C.push(w, !0), C.err)) throw C.msg || ei[C.err];
                return C.result;
              }
              (a.prototype.push = function (w, S) {
                var C,
                  ei,
                  eo,
                  es,
                  ec,
                  eu,
                  ed = this.strm,
                  eh = this.options.chunkSize,
                  ef = this.options.dictionary,
                  ep = !1;
                if (this.ended) return !1;
                (ei = S === ~~S ? S : !0 === S ? en.Z_FINISH : en.Z_NO_FLUSH),
                  'string' == typeof w
                    ? (ed.input = er.binstring2buf(w))
                    : '[object ArrayBuffer]' === el.call(w)
                    ? (ed.input = new Uint8Array(w))
                    : (ed.input = w),
                  (ed.next_in = 0),
                  (ed.avail_in = ed.input.length);
                do {
                  if (
                    (0 === ed.avail_out && ((ed.output = new $.Buf8(eh)), (ed.next_out = 0), (ed.avail_out = eh)),
                    (C = I.inflate(ed, en.Z_NO_FLUSH)) === en.Z_NEED_DICT &&
                      ef &&
                      ((eu =
                        'string' == typeof ef
                          ? er.string2buf(ef)
                          : '[object ArrayBuffer]' === el.call(ef)
                          ? new Uint8Array(ef)
                          : ef),
                      (C = I.inflateSetDictionary(this.strm, eu))),
                    C === en.Z_BUF_ERROR && !0 === ep && ((C = en.Z_OK), (ep = !1)),
                    C !== en.Z_STREAM_END && C !== en.Z_OK)
                  )
                    return this.onEnd(C), (this.ended = !0), !1;
                  ed.next_out &&
                    ((0 !== ed.avail_out &&
                      C !== en.Z_STREAM_END &&
                      (0 !== ed.avail_in || (ei !== en.Z_FINISH && ei !== en.Z_SYNC_FLUSH))) ||
                      ('string' === this.options.to
                        ? ((eo = er.utf8border(ed.output, ed.next_out)),
                          (es = ed.next_out - eo),
                          (ec = er.buf2string(ed.output, eo)),
                          (ed.next_out = es),
                          (ed.avail_out = eh - es),
                          es && $.arraySet(ed.output, ed.output, eo, es, 0),
                          this.onData(ec))
                        : this.onData($.shrinkBuf(ed.output, ed.next_out)))),
                    0 === ed.avail_in && 0 === ed.avail_out && (ep = !0);
                } while ((0 < ed.avail_in || 0 === ed.avail_out) && C !== en.Z_STREAM_END);
                return (
                  C === en.Z_STREAM_END && (ei = en.Z_FINISH),
                  ei === en.Z_FINISH
                    ? ((C = I.inflateEnd(this.strm)), this.onEnd(C), (this.ended = !0), C === en.Z_OK)
                    : ei !== en.Z_SYNC_FLUSH || (this.onEnd(en.Z_OK), (ed.avail_out = 0), !0)
                );
              }),
                (a.prototype.onData = function (w) {
                  this.chunks.push(w);
                }),
                (a.prototype.onEnd = function (w) {
                  w === en.Z_OK &&
                    ('string' === this.options.to
                      ? (this.result = this.chunks.join(''))
                      : (this.result = $.flattenChunks(this.chunks))),
                    (this.chunks = []),
                    (this.err = w),
                    (this.msg = this.strm.msg);
                }),
                (C.Inflate = a),
                (C.inflate = o),
                (C.inflateRaw = function (w, S) {
                  return ((S = S || {}).raw = !0), o(w, S);
                }),
                (C.ungzip = o);
            },
            {
              './utils/common': 41,
              './utils/strings': 42,
              './zlib/constants': 44,
              './zlib/gzheader': 47,
              './zlib/inflate': 49,
              './zlib/messages': 51,
              './zlib/zstream': 53
            }
          ],
          41: [
            function (w, S, C) {
              'use strict';
              var I =
                'undefined' != typeof Uint8Array &&
                'undefined' != typeof Uint16Array &&
                'undefined' != typeof Int32Array;
              (C.assign = function (w) {
                for (var S = Array.prototype.slice.call(arguments, 1); S.length; ) {
                  var C = S.shift();
                  if (C) {
                    if ('object' != typeof C) throw TypeError(C + 'must be non-object');
                    for (var I in C) C.hasOwnProperty(I) && (w[I] = C[I]);
                  }
                }
                return w;
              }),
                (C.shrinkBuf = function (w, S) {
                  return w.length === S ? w : w.subarray ? w.subarray(0, S) : ((w.length = S), w);
                });
              var $ = {
                  arraySet: function (w, S, C, I, $) {
                    if (S.subarray && w.subarray) w.set(S.subarray(C, C + I), $);
                    else for (var er = 0; er < I; er++) w[$ + er] = S[C + er];
                  },
                  flattenChunks: function (w) {
                    var S, C, I, $, er, en;
                    for (S = I = 0, C = w.length; S < C; S++) I += w[S].length;
                    for (en = new Uint8Array(I), S = $ = 0, C = w.length; S < C; S++)
                      (er = w[S]), en.set(er, $), ($ += er.length);
                    return en;
                  }
                },
                er = {
                  arraySet: function (w, S, C, I, $) {
                    for (var er = 0; er < I; er++) w[$ + er] = S[C + er];
                  },
                  flattenChunks: function (w) {
                    return [].concat.apply([], w);
                  }
                };
              (C.setTyped = function (w) {
                w
                  ? ((C.Buf8 = Uint8Array), (C.Buf16 = Uint16Array), (C.Buf32 = Int32Array), C.assign(C, $))
                  : ((C.Buf8 = Array), (C.Buf16 = Array), (C.Buf32 = Array), C.assign(C, er));
              }),
                C.setTyped(I);
            },
            {}
          ],
          42: [
            function (w, S, C) {
              'use strict';
              var I = w('./common'),
                $ = !0,
                er = !0;
              try {
                String.fromCharCode.apply(null, [0]);
              } catch (w) {
                $ = !1;
              }
              try {
                String.fromCharCode.apply(null, new Uint8Array(1));
              } catch (w) {
                er = !1;
              }
              for (var en = new I.Buf8(256), ei = 0; ei < 256; ei++)
                en[ei] = 252 <= ei ? 6 : 248 <= ei ? 5 : 240 <= ei ? 4 : 224 <= ei ? 3 : 192 <= ei ? 2 : 1;
              function l(w, S) {
                if (S < 65537 && ((w.subarray && er) || (!w.subarray && $)))
                  return String.fromCharCode.apply(null, I.shrinkBuf(w, S));
                for (var C = '', en = 0; en < S; en++) C += String.fromCharCode(w[en]);
                return C;
              }
              (en[254] = en[254] = 1),
                (C.string2buf = function (w) {
                  var S,
                    C,
                    $,
                    er,
                    en,
                    ei = w.length,
                    eo = 0;
                  for (er = 0; er < ei; er++)
                    55296 == (64512 & (C = w.charCodeAt(er))) &&
                      er + 1 < ei &&
                      56320 == (64512 & ($ = w.charCodeAt(er + 1))) &&
                      ((C = 65536 + ((C - 55296) << 10) + ($ - 56320)), er++),
                      (eo += C < 128 ? 1 : C < 2048 ? 2 : C < 65536 ? 3 : 4);
                  for (S = new I.Buf8(eo), er = en = 0; en < eo; er++)
                    55296 == (64512 & (C = w.charCodeAt(er))) &&
                      er + 1 < ei &&
                      56320 == (64512 & ($ = w.charCodeAt(er + 1))) &&
                      ((C = 65536 + ((C - 55296) << 10) + ($ - 56320)), er++),
                      C < 128
                        ? (S[en++] = C)
                        : (C < 2048
                            ? (S[en++] = 192 | (C >>> 6))
                            : (C < 65536
                                ? (S[en++] = 224 | (C >>> 12))
                                : ((S[en++] = 240 | (C >>> 18)), (S[en++] = 128 | ((C >>> 12) & 63))),
                              (S[en++] = 128 | ((C >>> 6) & 63))),
                          (S[en++] = 128 | (63 & C)));
                  return S;
                }),
                (C.buf2binstring = function (w) {
                  return l(w, w.length);
                }),
                (C.binstring2buf = function (w) {
                  for (var S = new I.Buf8(w.length), C = 0, $ = S.length; C < $; C++) S[C] = w.charCodeAt(C);
                  return S;
                }),
                (C.buf2string = function (w, S) {
                  var C,
                    I,
                    $,
                    er,
                    ei = S || w.length,
                    eo = Array(2 * ei);
                  for (C = I = 0; C < ei; )
                    if (($ = w[C++]) < 128) eo[I++] = $;
                    else if (4 < (er = en[$])) (eo[I++] = 65533), (C += er - 1);
                    else {
                      for ($ &= 2 === er ? 31 : 3 === er ? 15 : 7; 1 < er && C < ei; )
                        ($ = ($ << 6) | (63 & w[C++])), er--;
                      1 < er
                        ? (eo[I++] = 65533)
                        : $ < 65536
                        ? (eo[I++] = $)
                        : (($ -= 65536), (eo[I++] = 55296 | (($ >> 10) & 1023)), (eo[I++] = 56320 | (1023 & $)));
                    }
                  return l(eo, I);
                }),
                (C.utf8border = function (w, S) {
                  var C;
                  for ((S = S || w.length) > w.length && (S = w.length), C = S - 1; 0 <= C && 128 == (192 & w[C]); )
                    C--;
                  return C < 0 ? S : 0 === C ? S : C + en[w[C]] > S ? C : S;
                });
            },
            { './common': 41 }
          ],
          43: [
            function (w, S, C) {
              'use strict';
              S.exports = function (w, S, C, I) {
                for (var $ = (65535 & w) | 0, er = ((w >>> 16) & 65535) | 0, en = 0; 0 !== C; ) {
                  for (C -= en = 2e3 < C ? 2e3 : C; (er = (er + ($ = ($ + S[I++]) | 0)) | 0), --en; );
                  ($ %= 65521), (er %= 65521);
                }
                return $ | (er << 16) | 0;
              };
            },
            {}
          ],
          44: [
            function (w, S, C) {
              'use strict';
              S.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8
              };
            },
            {}
          ],
          45: [
            function (w, S, C) {
              'use strict';
              var I = (function () {
                for (var w, S = [], C = 0; C < 256; C++) {
                  w = C;
                  for (var I = 0; I < 8; I++) w = 1 & w ? 3988292384 ^ (w >>> 1) : w >>> 1;
                  S[C] = w;
                }
                return S;
              })();
              S.exports = function (w, S, C, $) {
                var er = $ + C;
                w ^= -1;
                for (var en = $; en < er; en++) w = (w >>> 8) ^ I[255 & (w ^ S[en])];
                return -1 ^ w;
              };
            },
            {}
          ],
          46: [
            function (w, S, C) {
              'use strict';
              var I,
                $ = w('../utils/common'),
                er = w('./trees'),
                en = w('./adler32'),
                ei = w('./crc32'),
                eo = w('./messages');
              function R(w, S) {
                return (w.msg = eo[S]), S;
              }
              function T(w) {
                return (w << 1) - (4 < w ? 9 : 0);
              }
              function D(w) {
                for (var S = w.length; 0 <= --S; ) w[S] = 0;
              }
              function F(w) {
                var S = w.state,
                  C = S.pending;
                C > w.avail_out && (C = w.avail_out),
                  0 !== C &&
                    ($.arraySet(w.output, S.pending_buf, S.pending_out, C, w.next_out),
                    (w.next_out += C),
                    (S.pending_out += C),
                    (w.total_out += C),
                    (w.avail_out -= C),
                    (S.pending -= C),
                    0 === S.pending && (S.pending_out = 0));
              }
              function N(w, S) {
                er._tr_flush_block(w, 0 <= w.block_start ? w.block_start : -1, w.strstart - w.block_start, S),
                  (w.block_start = w.strstart),
                  F(w.strm);
              }
              function U(w, S) {
                w.pending_buf[w.pending++] = S;
              }
              function P(w, S) {
                (w.pending_buf[w.pending++] = (S >>> 8) & 255), (w.pending_buf[w.pending++] = 255 & S);
              }
              function L(w, S) {
                var C,
                  I,
                  $ = w.max_chain_length,
                  er = w.strstart,
                  en = w.prev_length,
                  ei = w.nice_match,
                  eo = w.strstart > w.w_size - 262 ? w.strstart - (w.w_size - 262) : 0,
                  es = w.window,
                  el = w.w_mask,
                  ec = w.prev,
                  eu = w.strstart + 258,
                  ed = es[er + en - 1],
                  eh = es[er + en];
                w.prev_length >= w.good_match && ($ >>= 2), ei > w.lookahead && (ei = w.lookahead);
                do
                  if (es[(C = S) + en] === eh && es[C + en - 1] === ed && es[C] === es[er] && es[++C] === es[er + 1]) {
                    (er += 2), C++;
                    do;
                    while (
                      es[++er] === es[++C] &&
                      es[++er] === es[++C] &&
                      es[++er] === es[++C] &&
                      es[++er] === es[++C] &&
                      es[++er] === es[++C] &&
                      es[++er] === es[++C] &&
                      es[++er] === es[++C] &&
                      es[++er] === es[++C] &&
                      er < eu
                    );
                    if (((I = 258 - (eu - er)), (er = eu - 258), en < I)) {
                      if (((w.match_start = S), ei <= (en = I))) break;
                      (ed = es[er + en - 1]), (eh = es[er + en]);
                    }
                  }
                while ((S = ec[S & el]) > eo && 0 != --$);
                return en <= w.lookahead ? en : w.lookahead;
              }
              function j(w) {
                var S,
                  C,
                  I,
                  er,
                  eo,
                  es,
                  el,
                  ec,
                  eu,
                  ed,
                  eh = w.w_size;
                do {
                  if (((er = w.window_size - w.lookahead - w.strstart), w.strstart >= eh + (eh - 262))) {
                    for (
                      $.arraySet(w.window, w.window, eh, eh, 0),
                        w.match_start -= eh,
                        w.strstart -= eh,
                        w.block_start -= eh,
                        S = C = w.hash_size;
                      (I = w.head[--S]), (w.head[S] = eh <= I ? I - eh : 0), --C;

                    );
                    for (S = C = eh; (I = w.prev[--S]), (w.prev[S] = eh <= I ? I - eh : 0), --C; );
                    er += eh;
                  }
                  if (0 === w.strm.avail_in) break;
                  if (
                    ((es = w.strm),
                    (el = w.window),
                    (ec = w.strstart + w.lookahead),
                    (ed = void 0),
                    (eu = er) < (ed = es.avail_in) && (ed = eu),
                    (C =
                      0 === ed
                        ? 0
                        : ((es.avail_in -= ed),
                          $.arraySet(el, es.input, es.next_in, ed, ec),
                          1 === es.state.wrap
                            ? (es.adler = en(es.adler, el, ed, ec))
                            : 2 === es.state.wrap && (es.adler = ei(es.adler, el, ed, ec)),
                          (es.next_in += ed),
                          (es.total_in += ed),
                          ed)),
                    (w.lookahead += C),
                    w.lookahead + w.insert >= 3)
                  )
                    for (
                      eo = w.strstart - w.insert,
                        w.ins_h = w.window[eo],
                        w.ins_h = ((w.ins_h << w.hash_shift) ^ w.window[eo + 1]) & w.hash_mask;
                      w.insert &&
                      ((w.ins_h = ((w.ins_h << w.hash_shift) ^ w.window[eo + 3 - 1]) & w.hash_mask),
                      (w.prev[eo & w.w_mask] = w.head[w.ins_h]),
                      (w.head[w.ins_h] = eo),
                      eo++,
                      w.insert--,
                      !(w.lookahead + w.insert < 3));

                    );
                } while (w.lookahead < 262 && 0 !== w.strm.avail_in);
              }
              function Z(w, S) {
                for (var C, I; ; ) {
                  if (w.lookahead < 262) {
                    if ((j(w), w.lookahead < 262 && 0 === S)) return 1;
                    if (0 === w.lookahead) break;
                  }
                  if (
                    ((C = 0),
                    w.lookahead >= 3 &&
                      ((w.ins_h = ((w.ins_h << w.hash_shift) ^ w.window[w.strstart + 3 - 1]) & w.hash_mask),
                      (C = w.prev[w.strstart & w.w_mask] = w.head[w.ins_h]),
                      (w.head[w.ins_h] = w.strstart)),
                    0 !== C && w.strstart - C <= w.w_size - 262 && (w.match_length = L(w, C)),
                    w.match_length >= 3)
                  ) {
                    if (
                      ((I = er._tr_tally(w, w.strstart - w.match_start, w.match_length - 3)),
                      (w.lookahead -= w.match_length),
                      w.match_length <= w.max_lazy_match && w.lookahead >= 3)
                    ) {
                      for (
                        w.match_length--;
                        w.strstart++,
                          (w.ins_h = ((w.ins_h << w.hash_shift) ^ w.window[w.strstart + 3 - 1]) & w.hash_mask),
                          (C = w.prev[w.strstart & w.w_mask] = w.head[w.ins_h]),
                          (w.head[w.ins_h] = w.strstart),
                          0 != --w.match_length;

                      );
                      w.strstart++;
                    } else
                      (w.strstart += w.match_length),
                        (w.match_length = 0),
                        (w.ins_h = w.window[w.strstart]),
                        (w.ins_h = ((w.ins_h << w.hash_shift) ^ w.window[w.strstart + 1]) & w.hash_mask);
                  } else (I = er._tr_tally(w, 0, w.window[w.strstart])), w.lookahead--, w.strstart++;
                  if (I && (N(w, !1), 0 === w.strm.avail_out)) return 1;
                }
                return (
                  (w.insert = w.strstart < 2 ? w.strstart : 2),
                  4 === S
                    ? (N(w, !0), 0 === w.strm.avail_out ? 3 : 4)
                    : w.last_lit && (N(w, !1), 0 === w.strm.avail_out)
                    ? 1
                    : 2
                );
              }
              function W(w, S) {
                for (var C, I, $; ; ) {
                  if (w.lookahead < 262) {
                    if ((j(w), w.lookahead < 262 && 0 === S)) return 1;
                    if (0 === w.lookahead) break;
                  }
                  if (
                    ((C = 0),
                    w.lookahead >= 3 &&
                      ((w.ins_h = ((w.ins_h << w.hash_shift) ^ w.window[w.strstart + 3 - 1]) & w.hash_mask),
                      (C = w.prev[w.strstart & w.w_mask] = w.head[w.ins_h]),
                      (w.head[w.ins_h] = w.strstart)),
                    (w.prev_length = w.match_length),
                    (w.prev_match = w.match_start),
                    (w.match_length = 2),
                    0 !== C &&
                      w.prev_length < w.max_lazy_match &&
                      w.strstart - C <= w.w_size - 262 &&
                      ((w.match_length = L(w, C)),
                      w.match_length <= 5 &&
                        (1 === w.strategy || (3 === w.match_length && 4096 < w.strstart - w.match_start)) &&
                        (w.match_length = 2)),
                    w.prev_length >= 3 && w.match_length <= w.prev_length)
                  ) {
                    for (
                      $ = w.strstart + w.lookahead - 3,
                        I = er._tr_tally(w, w.strstart - 1 - w.prev_match, w.prev_length - 3),
                        w.lookahead -= w.prev_length - 1,
                        w.prev_length -= 2;
                      ++w.strstart <= $ &&
                        ((w.ins_h = ((w.ins_h << w.hash_shift) ^ w.window[w.strstart + 3 - 1]) & w.hash_mask),
                        (C = w.prev[w.strstart & w.w_mask] = w.head[w.ins_h]),
                        (w.head[w.ins_h] = w.strstart)),
                        0 != --w.prev_length;

                    );
                    if (
                      ((w.match_available = 0),
                      (w.match_length = 2),
                      w.strstart++,
                      I && (N(w, !1), 0 === w.strm.avail_out))
                    )
                      return 1;
                  } else if (w.match_available) {
                    if (
                      ((I = er._tr_tally(w, 0, w.window[w.strstart - 1])) && N(w, !1),
                      w.strstart++,
                      w.lookahead--,
                      0 === w.strm.avail_out)
                    )
                      return 1;
                  } else (w.match_available = 1), w.strstart++, w.lookahead--;
                }
                return (
                  w.match_available && ((I = er._tr_tally(w, 0, w.window[w.strstart - 1])), (w.match_available = 0)),
                  (w.insert = w.strstart < 2 ? w.strstart : 2),
                  4 === S
                    ? (N(w, !0), 0 === w.strm.avail_out ? 3 : 4)
                    : w.last_lit && (N(w, !1), 0 === w.strm.avail_out)
                    ? 1
                    : 2
                );
              }
              function M(w, S, C, I, $) {
                (this.good_length = w),
                  (this.max_lazy = S),
                  (this.nice_length = C),
                  (this.max_chain = I),
                  (this.func = $);
              }
              function H() {
                (this.strm = null),
                  (this.status = 0),
                  (this.pending_buf = null),
                  (this.pending_buf_size = 0),
                  (this.pending_out = 0),
                  (this.pending = 0),
                  (this.wrap = 0),
                  (this.gzhead = null),
                  (this.gzindex = 0),
                  (this.method = 8),
                  (this.last_flush = -1),
                  (this.w_size = 0),
                  (this.w_bits = 0),
                  (this.w_mask = 0),
                  (this.window = null),
                  (this.window_size = 0),
                  (this.prev = null),
                  (this.head = null),
                  (this.ins_h = 0),
                  (this.hash_size = 0),
                  (this.hash_bits = 0),
                  (this.hash_mask = 0),
                  (this.hash_shift = 0),
                  (this.block_start = 0),
                  (this.match_length = 0),
                  (this.prev_match = 0),
                  (this.match_available = 0),
                  (this.strstart = 0),
                  (this.match_start = 0),
                  (this.lookahead = 0),
                  (this.prev_length = 0),
                  (this.max_chain_length = 0),
                  (this.max_lazy_match = 0),
                  (this.level = 0),
                  (this.strategy = 0),
                  (this.good_match = 0),
                  (this.nice_match = 0),
                  (this.dyn_ltree = new $.Buf16(1146)),
                  (this.dyn_dtree = new $.Buf16(122)),
                  (this.bl_tree = new $.Buf16(78)),
                  D(this.dyn_ltree),
                  D(this.dyn_dtree),
                  D(this.bl_tree),
                  (this.l_desc = null),
                  (this.d_desc = null),
                  (this.bl_desc = null),
                  (this.bl_count = new $.Buf16(16)),
                  (this.heap = new $.Buf16(573)),
                  D(this.heap),
                  (this.heap_len = 0),
                  (this.heap_max = 0),
                  (this.depth = new $.Buf16(573)),
                  D(this.depth),
                  (this.l_buf = 0),
                  (this.lit_bufsize = 0),
                  (this.last_lit = 0),
                  (this.d_buf = 0),
                  (this.opt_len = 0),
                  (this.static_len = 0),
                  (this.matches = 0),
                  (this.insert = 0),
                  (this.bi_buf = 0),
                  (this.bi_valid = 0);
              }
              function G(w) {
                var S;
                return w && w.state
                  ? ((w.total_in = w.total_out = 0),
                    (w.data_type = 2),
                    ((S = w.state).pending = 0),
                    (S.pending_out = 0),
                    S.wrap < 0 && (S.wrap = -S.wrap),
                    (S.status = S.wrap ? 42 : 113),
                    (w.adler = 2 === S.wrap ? 0 : 1),
                    (S.last_flush = 0),
                    er._tr_init(S),
                    0)
                  : R(w, -2);
              }
              function K(w) {
                var S,
                  C = G(w);
                return (
                  0 === C &&
                    (((S = w.state).window_size = 2 * S.w_size),
                    D(S.head),
                    (S.max_lazy_match = I[S.level].max_lazy),
                    (S.good_match = I[S.level].good_length),
                    (S.nice_match = I[S.level].nice_length),
                    (S.max_chain_length = I[S.level].max_chain),
                    (S.strstart = 0),
                    (S.block_start = 0),
                    (S.lookahead = 0),
                    (S.insert = 0),
                    (S.match_length = S.prev_length = 2),
                    (S.match_available = 0),
                    (S.ins_h = 0)),
                  C
                );
              }
              function Y(w, S, C, I, er, en) {
                if (!w) return -2;
                var ei = 1;
                if (
                  (-1 === S && (S = 6),
                  I < 0 ? ((ei = 0), (I = -I)) : 15 < I && ((ei = 2), (I -= 16)),
                  er < 1 || 9 < er || 8 !== C || I < 8 || 15 < I || S < 0 || 9 < S || en < 0 || 4 < en)
                )
                  return R(w, -2);
                8 === I && (I = 9);
                var eo = new H();
                return (
                  ((w.state = eo).strm = w),
                  (eo.wrap = ei),
                  (eo.gzhead = null),
                  (eo.w_bits = I),
                  (eo.w_size = 1 << eo.w_bits),
                  (eo.w_mask = eo.w_size - 1),
                  (eo.hash_bits = er + 7),
                  (eo.hash_size = 1 << eo.hash_bits),
                  (eo.hash_mask = eo.hash_size - 1),
                  (eo.hash_shift = ~~((eo.hash_bits + 3 - 1) / 3)),
                  (eo.window = new $.Buf8(2 * eo.w_size)),
                  (eo.head = new $.Buf16(eo.hash_size)),
                  (eo.prev = new $.Buf16(eo.w_size)),
                  (eo.lit_bufsize = 1 << (er + 6)),
                  (eo.pending_buf_size = 4 * eo.lit_bufsize),
                  (eo.pending_buf = new $.Buf8(eo.pending_buf_size)),
                  (eo.d_buf = 1 * eo.lit_bufsize),
                  (eo.l_buf = 3 * eo.lit_bufsize),
                  (eo.level = S),
                  (eo.strategy = en),
                  (eo.method = C),
                  K(w)
                );
              }
              (I = [
                new M(0, 0, 0, 0, function (w, S) {
                  var C = 65535;
                  for (65535 > w.pending_buf_size - 5 && (C = w.pending_buf_size - 5); ; ) {
                    if (w.lookahead <= 1) {
                      if ((j(w), 0 === w.lookahead && 0 === S)) return 1;
                      if (0 === w.lookahead) break;
                    }
                    (w.strstart += w.lookahead), (w.lookahead = 0);
                    var I = w.block_start + C;
                    if (
                      ((0 === w.strstart || w.strstart >= I) &&
                        ((w.lookahead = w.strstart - I), (w.strstart = I), N(w, !1), 0 === w.strm.avail_out)) ||
                      (w.strstart - w.block_start >= w.w_size - 262 && (N(w, !1), 0 === w.strm.avail_out))
                    )
                      return 1;
                  }
                  return (
                    (w.insert = 0),
                    4 === S
                      ? (N(w, !0), 0 === w.strm.avail_out ? 3 : 4)
                      : (w.strstart > w.block_start && (N(w, !1), w.strm.avail_out), 1)
                  );
                }),
                new M(4, 4, 8, 4, Z),
                new M(4, 5, 16, 8, Z),
                new M(4, 6, 32, 32, Z),
                new M(4, 4, 16, 16, W),
                new M(8, 16, 32, 32, W),
                new M(8, 16, 128, 128, W),
                new M(8, 32, 128, 256, W),
                new M(32, 128, 258, 1024, W),
                new M(32, 258, 258, 4096, W)
              ]),
                (C.deflateInit = function (w, S) {
                  return Y(w, S, 8, 15, 8, 0);
                }),
                (C.deflateInit2 = Y),
                (C.deflateReset = K),
                (C.deflateResetKeep = G),
                (C.deflateSetHeader = function (w, S) {
                  return w && w.state ? (2 !== w.state.wrap ? -2 : ((w.state.gzhead = S), 0)) : -2;
                }),
                (C.deflate = function (w, S) {
                  var C, $, en, eo;
                  if (!w || !w.state || 5 < S || S < 0) return w ? R(w, -2) : -2;
                  if ((($ = w.state), !w.output || (!w.input && 0 !== w.avail_in) || (666 === $.status && 4 !== S)))
                    return R(w, 0 === w.avail_out ? -5 : -2);
                  if ((($.strm = w), (C = $.last_flush), ($.last_flush = S), 42 === $.status)) {
                    if (2 === $.wrap)
                      (w.adler = 0),
                        U($, 31),
                        U($, 139),
                        U($, 8),
                        $.gzhead
                          ? (U(
                              $,
                              ($.gzhead.text ? 1 : 0) +
                                ($.gzhead.hcrc ? 2 : 0) +
                                ($.gzhead.extra ? 4 : 0) +
                                ($.gzhead.name ? 8 : 0) +
                                ($.gzhead.comment ? 16 : 0)
                            ),
                            U($, 255 & $.gzhead.time),
                            U($, ($.gzhead.time >> 8) & 255),
                            U($, ($.gzhead.time >> 16) & 255),
                            U($, ($.gzhead.time >> 24) & 255),
                            U($, 9 === $.level ? 2 : 2 <= $.strategy || $.level < 2 ? 4 : 0),
                            U($, 255 & $.gzhead.os),
                            $.gzhead.extra &&
                              $.gzhead.extra.length &&
                              (U($, 255 & $.gzhead.extra.length), U($, ($.gzhead.extra.length >> 8) & 255)),
                            $.gzhead.hcrc && (w.adler = ei(w.adler, $.pending_buf, $.pending, 0)),
                            ($.gzindex = 0),
                            ($.status = 69))
                          : (U($, 0),
                            U($, 0),
                            U($, 0),
                            U($, 0),
                            U($, 0),
                            U($, 9 === $.level ? 2 : 2 <= $.strategy || $.level < 2 ? 4 : 0),
                            U($, 3),
                            ($.status = 113));
                    else {
                      var es = (8 + (($.w_bits - 8) << 4)) << 8;
                      (es |= (2 <= $.strategy || $.level < 2 ? 0 : $.level < 6 ? 1 : 6 === $.level ? 2 : 3) << 6),
                        0 !== $.strstart && (es |= 32),
                        (es += 31 - (es % 31)),
                        ($.status = 113),
                        P($, es),
                        0 !== $.strstart && (P($, w.adler >>> 16), P($, 65535 & w.adler)),
                        (w.adler = 1);
                    }
                  }
                  if (69 === $.status) {
                    if ($.gzhead.extra) {
                      for (
                        en = $.pending;
                        $.gzindex < (65535 & $.gzhead.extra.length) &&
                        ($.pending !== $.pending_buf_size ||
                          ($.gzhead.hcrc &&
                            $.pending > en &&
                            (w.adler = ei(w.adler, $.pending_buf, $.pending - en, en)),
                          F(w),
                          (en = $.pending),
                          $.pending !== $.pending_buf_size));

                      )
                        U($, 255 & $.gzhead.extra[$.gzindex]), $.gzindex++;
                      $.gzhead.hcrc && $.pending > en && (w.adler = ei(w.adler, $.pending_buf, $.pending - en, en)),
                        $.gzindex === $.gzhead.extra.length && (($.gzindex = 0), ($.status = 73));
                    } else $.status = 73;
                  }
                  if (73 === $.status) {
                    if ($.gzhead.name) {
                      en = $.pending;
                      do {
                        if (
                          $.pending === $.pending_buf_size &&
                          ($.gzhead.hcrc &&
                            $.pending > en &&
                            (w.adler = ei(w.adler, $.pending_buf, $.pending - en, en)),
                          F(w),
                          (en = $.pending),
                          $.pending === $.pending_buf_size)
                        ) {
                          eo = 1;
                          break;
                        }
                        (eo = $.gzindex < $.gzhead.name.length ? 255 & $.gzhead.name.charCodeAt($.gzindex++) : 0),
                          U($, eo);
                      } while (0 !== eo);
                      $.gzhead.hcrc && $.pending > en && (w.adler = ei(w.adler, $.pending_buf, $.pending - en, en)),
                        0 === eo && (($.gzindex = 0), ($.status = 91));
                    } else $.status = 91;
                  }
                  if (91 === $.status) {
                    if ($.gzhead.comment) {
                      en = $.pending;
                      do {
                        if (
                          $.pending === $.pending_buf_size &&
                          ($.gzhead.hcrc &&
                            $.pending > en &&
                            (w.adler = ei(w.adler, $.pending_buf, $.pending - en, en)),
                          F(w),
                          (en = $.pending),
                          $.pending === $.pending_buf_size)
                        ) {
                          eo = 1;
                          break;
                        }
                        (eo = $.gzindex < $.gzhead.comment.length ? 255 & $.gzhead.comment.charCodeAt($.gzindex++) : 0),
                          U($, eo);
                      } while (0 !== eo);
                      $.gzhead.hcrc && $.pending > en && (w.adler = ei(w.adler, $.pending_buf, $.pending - en, en)),
                        0 === eo && ($.status = 103);
                    } else $.status = 103;
                  }
                  if (
                    (103 === $.status &&
                      ($.gzhead.hcrc
                        ? ($.pending + 2 > $.pending_buf_size && F(w),
                          $.pending + 2 <= $.pending_buf_size &&
                            (U($, 255 & w.adler), U($, (w.adler >> 8) & 255), (w.adler = 0), ($.status = 113)))
                        : ($.status = 113)),
                    0 !== $.pending)
                  ) {
                    if ((F(w), 0 === w.avail_out)) return ($.last_flush = -1), 0;
                  } else if (0 === w.avail_in && T(S) <= T(C) && 4 !== S) return R(w, -5);
                  if (666 === $.status && 0 !== w.avail_in) return R(w, -5);
                  if (0 !== w.avail_in || 0 !== $.lookahead || (0 !== S && 666 !== $.status)) {
                    var el =
                      2 === $.strategy
                        ? (function (w, S) {
                            for (var C; ; ) {
                              if (0 === w.lookahead && (j(w), 0 === w.lookahead)) {
                                if (0 === S) return 1;
                                break;
                              }
                              if (
                                ((w.match_length = 0),
                                (C = er._tr_tally(w, 0, w.window[w.strstart])),
                                w.lookahead--,
                                w.strstart++,
                                C && (N(w, !1), 0 === w.strm.avail_out))
                              )
                                return 1;
                            }
                            return (
                              (w.insert = 0),
                              4 === S
                                ? (N(w, !0), 0 === w.strm.avail_out ? 3 : 4)
                                : w.last_lit && (N(w, !1), 0 === w.strm.avail_out)
                                ? 1
                                : 2
                            );
                          })($, S)
                        : 3 === $.strategy
                        ? (function (w, S) {
                            for (var C, I, $, en, ei = w.window; ; ) {
                              if (w.lookahead <= 258) {
                                if ((j(w), w.lookahead <= 258 && 0 === S)) return 1;
                                if (0 === w.lookahead) break;
                              }
                              if (
                                ((w.match_length = 0),
                                w.lookahead >= 3 &&
                                  0 < w.strstart &&
                                  (I = ei[($ = w.strstart - 1)]) === ei[++$] &&
                                  I === ei[++$] &&
                                  I === ei[++$])
                              ) {
                                en = w.strstart + 258;
                                do;
                                while (
                                  I === ei[++$] &&
                                  I === ei[++$] &&
                                  I === ei[++$] &&
                                  I === ei[++$] &&
                                  I === ei[++$] &&
                                  I === ei[++$] &&
                                  I === ei[++$] &&
                                  I === ei[++$] &&
                                  $ < en
                                );
                                (w.match_length = 258 - (en - $)),
                                  w.match_length > w.lookahead && (w.match_length = w.lookahead);
                              }
                              if (
                                (w.match_length >= 3
                                  ? ((C = er._tr_tally(w, 1, w.match_length - 3)),
                                    (w.lookahead -= w.match_length),
                                    (w.strstart += w.match_length),
                                    (w.match_length = 0))
                                  : ((C = er._tr_tally(w, 0, w.window[w.strstart])), w.lookahead--, w.strstart++),
                                C && (N(w, !1), 0 === w.strm.avail_out))
                              )
                                return 1;
                            }
                            return (
                              (w.insert = 0),
                              4 === S
                                ? (N(w, !0), 0 === w.strm.avail_out ? 3 : 4)
                                : w.last_lit && (N(w, !1), 0 === w.strm.avail_out)
                                ? 1
                                : 2
                            );
                          })($, S)
                        : I[$.level].func($, S);
                    if (((3 !== el && 4 !== el) || ($.status = 666), 1 === el || 3 === el))
                      return 0 === w.avail_out && ($.last_flush = -1), 0;
                    if (
                      2 === el &&
                      (1 === S
                        ? er._tr_align($)
                        : 5 !== S &&
                          (er._tr_stored_block($, 0, 0, !1),
                          3 === S &&
                            (D($.head), 0 === $.lookahead && (($.strstart = 0), ($.block_start = 0), ($.insert = 0)))),
                      F(w),
                      0 === w.avail_out)
                    )
                      return ($.last_flush = -1), 0;
                  }
                  return 4 !== S
                    ? 0
                    : $.wrap <= 0
                    ? 1
                    : (2 === $.wrap
                        ? (U($, 255 & w.adler),
                          U($, (w.adler >> 8) & 255),
                          U($, (w.adler >> 16) & 255),
                          U($, (w.adler >> 24) & 255),
                          U($, 255 & w.total_in),
                          U($, (w.total_in >> 8) & 255),
                          U($, (w.total_in >> 16) & 255),
                          U($, (w.total_in >> 24) & 255))
                        : (P($, w.adler >>> 16), P($, 65535 & w.adler)),
                      F(w),
                      0 < $.wrap && ($.wrap = -$.wrap),
                      0 !== $.pending ? 0 : 1);
                }),
                (C.deflateEnd = function (w) {
                  var S;
                  return w && w.state
                    ? 42 !== (S = w.state.status) &&
                      69 !== S &&
                      73 !== S &&
                      91 !== S &&
                      103 !== S &&
                      113 !== S &&
                      666 !== S
                      ? R(w, -2)
                      : ((w.state = null), 113 === S ? R(w, -3) : 0)
                    : -2;
                }),
                (C.deflateSetDictionary = function (w, S) {
                  var C,
                    I,
                    er,
                    ei,
                    eo,
                    es,
                    el,
                    ec,
                    eu = S.length;
                  if (!w || !w.state || 2 === (ei = (C = w.state).wrap) || (1 === ei && 42 !== C.status) || C.lookahead)
                    return -2;
                  for (
                    1 === ei && (w.adler = en(w.adler, S, eu, 0)),
                      C.wrap = 0,
                      eu >= C.w_size &&
                        (0 === ei && (D(C.head), (C.strstart = 0), (C.block_start = 0), (C.insert = 0)),
                        (ec = new $.Buf8(C.w_size)),
                        $.arraySet(ec, S, eu - C.w_size, C.w_size, 0),
                        (S = ec),
                        (eu = C.w_size)),
                      eo = w.avail_in,
                      es = w.next_in,
                      el = w.input,
                      w.avail_in = eu,
                      w.next_in = 0,
                      w.input = S,
                      j(C);
                    C.lookahead >= 3;

                  ) {
                    for (
                      I = C.strstart, er = C.lookahead - 2;
                      (C.ins_h = ((C.ins_h << C.hash_shift) ^ C.window[I + 3 - 1]) & C.hash_mask),
                        (C.prev[I & C.w_mask] = C.head[C.ins_h]),
                        (C.head[C.ins_h] = I),
                        I++,
                        --er;

                    );
                    (C.strstart = I), (C.lookahead = 2), j(C);
                  }
                  return (
                    (C.strstart += C.lookahead),
                    (C.block_start = C.strstart),
                    (C.insert = C.lookahead),
                    (C.lookahead = 0),
                    (C.match_length = C.prev_length = 2),
                    (C.match_available = 0),
                    (w.next_in = es),
                    (w.input = el),
                    (w.avail_in = eo),
                    (C.wrap = ei),
                    0
                  );
                }),
                (C.deflateInfo = 'pako deflate (from Nodeca project)');
            },
            { '../utils/common': 41, './adler32': 43, './crc32': 45, './messages': 51, './trees': 52 }
          ],
          47: [
            function (w, S, C) {
              'use strict';
              S.exports = function () {
                (this.text = 0),
                  (this.time = 0),
                  (this.xflags = 0),
                  (this.os = 0),
                  (this.extra = null),
                  (this.extra_len = 0),
                  (this.name = ''),
                  (this.comment = ''),
                  (this.hcrc = 0),
                  (this.done = !1);
              };
            },
            {}
          ],
          48: [
            function (w, S, C) {
              'use strict';
              S.exports = function (w, S) {
                var C, I, $, er, en, ei, eo, es, el, ec, eu, ed, eh, ef, ep, em, eg, ey, ev, eb, e_, ex, ew, ek, eS;
                (C = w.state),
                  (I = w.next_in),
                  (ek = w.input),
                  ($ = I + (w.avail_in - 5)),
                  (er = w.next_out),
                  (eS = w.output),
                  (en = er - (S - w.avail_out)),
                  (ei = er + (w.avail_out - 257)),
                  (eo = C.dmax),
                  (es = C.wsize),
                  (el = C.whave),
                  (ec = C.wnext),
                  (eu = C.window),
                  (ed = C.hold),
                  (eh = C.bits),
                  (ef = C.lencode),
                  (ep = C.distcode),
                  (em = (1 << C.lenbits) - 1),
                  (eg = (1 << C.distbits) - 1);
                e: do
                  for (
                    eh < 15 && ((ed += ek[I++] << eh), (eh += 8), (ed += ek[I++] << eh), (eh += 8)), ey = ef[ed & em];
                    ;

                  ) {
                    if (((ed >>>= ev = ey >>> 24), (eh -= ev), 0 == (ev = (ey >>> 16) & 255))) eS[er++] = 65535 & ey;
                    else {
                      if (!(16 & ev)) {
                        if (0 == (64 & ev)) {
                          ey = ef[(65535 & ey) + (ed & ((1 << ev) - 1))];
                          continue;
                        }
                        if (32 & ev) {
                          C.mode = 12;
                          break e;
                        }
                        (w.msg = 'invalid literal/length code'), (C.mode = 30);
                        break e;
                      }
                      for (
                        eb = 65535 & ey,
                          (ev &= 15) &&
                            (eh < ev && ((ed += ek[I++] << eh), (eh += 8)),
                            (eb += ed & ((1 << ev) - 1)),
                            (ed >>>= ev),
                            (eh -= ev)),
                          eh < 15 && ((ed += ek[I++] << eh), (eh += 8), (ed += ek[I++] << eh), (eh += 8)),
                          ey = ep[ed & eg];
                        ;

                      ) {
                        if (((ed >>>= ev = ey >>> 24), (eh -= ev), !(16 & (ev = (ey >>> 16) & 255)))) {
                          if (0 == (64 & ev)) {
                            ey = ep[(65535 & ey) + (ed & ((1 << ev) - 1))];
                            continue;
                          }
                          (w.msg = 'invalid distance code'), (C.mode = 30);
                          break e;
                        }
                        if (
                          ((e_ = 65535 & ey),
                          eh < (ev &= 15) &&
                            ((ed += ek[I++] << eh), (eh += 8) < ev && ((ed += ek[I++] << eh), (eh += 8))),
                          eo < (e_ += ed & ((1 << ev) - 1)))
                        ) {
                          (w.msg = 'invalid distance too far back'), (C.mode = 30);
                          break e;
                        }
                        if (((ed >>>= ev), (eh -= ev), (ev = er - en) < e_)) {
                          if (el < (ev = e_ - ev) && C.sane) {
                            (w.msg = 'invalid distance too far back'), (C.mode = 30);
                            break e;
                          }
                          if (((ew = eu), (ex = 0) === ec)) {
                            if (((ex += es - ev), ev < eb)) {
                              for (eb -= ev; (eS[er++] = eu[ex++]), --ev; );
                              (ex = er - e_), (ew = eS);
                            }
                          } else if (ec < ev) {
                            if (((ex += es + ec - ev), (ev -= ec) < eb)) {
                              for (eb -= ev; (eS[er++] = eu[ex++]), --ev; );
                              if (((ex = 0), ec < eb)) {
                                for (eb -= ev = ec; (eS[er++] = eu[ex++]), --ev; );
                                (ex = er - e_), (ew = eS);
                              }
                            }
                          } else if (((ex += ec - ev), ev < eb)) {
                            for (eb -= ev; (eS[er++] = eu[ex++]), --ev; );
                            (ex = er - e_), (ew = eS);
                          }
                          for (; 2 < eb; )
                            (eS[er++] = ew[ex++]), (eS[er++] = ew[ex++]), (eS[er++] = ew[ex++]), (eb -= 3);
                          eb && ((eS[er++] = ew[ex++]), 1 < eb && (eS[er++] = ew[ex++]));
                        } else {
                          for (
                            ex = er - e_;
                            (eS[er++] = eS[ex++]), (eS[er++] = eS[ex++]), (eS[er++] = eS[ex++]), 2 < (eb -= 3);

                          );
                          eb && ((eS[er++] = eS[ex++]), 1 < eb && (eS[er++] = eS[ex++]));
                        }
                        break;
                      }
                    }
                    break;
                  }
                while (I < $ && er < ei);
                (I -= eb = eh >> 3),
                  (ed &= (1 << (eh -= eb << 3)) - 1),
                  (w.next_in = I),
                  (w.next_out = er),
                  (w.avail_in = I < $ ? $ - I + 5 : 5 - (I - $)),
                  (w.avail_out = er < ei ? ei - er + 257 : 257 - (er - ei)),
                  (C.hold = ed),
                  (C.bits = eh);
              };
            },
            {}
          ],
          49: [
            function (w, S, C) {
              'use strict';
              var I = w('../utils/common'),
                $ = w('./adler32'),
                er = w('./crc32'),
                en = w('./inffast'),
                ei = w('./inftrees');
              function L(w) {
                return ((w >>> 24) & 255) + ((w >>> 8) & 65280) + ((65280 & w) << 8) + ((255 & w) << 24);
              }
              function s() {
                (this.mode = 0),
                  (this.last = !1),
                  (this.wrap = 0),
                  (this.havedict = !1),
                  (this.flags = 0),
                  (this.dmax = 0),
                  (this.check = 0),
                  (this.total = 0),
                  (this.head = null),
                  (this.wbits = 0),
                  (this.wsize = 0),
                  (this.whave = 0),
                  (this.wnext = 0),
                  (this.window = null),
                  (this.hold = 0),
                  (this.bits = 0),
                  (this.length = 0),
                  (this.offset = 0),
                  (this.extra = 0),
                  (this.lencode = null),
                  (this.distcode = null),
                  (this.lenbits = 0),
                  (this.distbits = 0),
                  (this.ncode = 0),
                  (this.nlen = 0),
                  (this.ndist = 0),
                  (this.have = 0),
                  (this.next = null),
                  (this.lens = new I.Buf16(320)),
                  (this.work = new I.Buf16(288)),
                  (this.lendyn = null),
                  (this.distdyn = null),
                  (this.sane = 0),
                  (this.back = 0),
                  (this.was = 0);
              }
              function a(w) {
                var S;
                return w && w.state
                  ? ((S = w.state),
                    (w.total_in = w.total_out = S.total = 0),
                    (w.msg = ''),
                    S.wrap && (w.adler = 1 & S.wrap),
                    (S.mode = 1),
                    (S.last = 0),
                    (S.havedict = 0),
                    (S.dmax = 32768),
                    (S.head = null),
                    (S.hold = 0),
                    (S.bits = 0),
                    (S.lencode = S.lendyn = new I.Buf32(852)),
                    (S.distcode = S.distdyn = new I.Buf32(592)),
                    (S.sane = 1),
                    (S.back = -1),
                    0)
                  : -2;
              }
              function o(w) {
                var S;
                return w && w.state ? (((S = w.state).wsize = 0), (S.whave = 0), (S.wnext = 0), a(w)) : -2;
              }
              function h(w, S) {
                var C, I;
                return w && w.state
                  ? ((I = w.state),
                    S < 0 ? ((C = 0), (S = -S)) : ((C = 1 + (S >> 4)), S < 48 && (S &= 15)),
                    S && (S < 8 || 15 < S)
                      ? -2
                      : (null !== I.window && I.wbits !== S && (I.window = null), (I.wrap = C), (I.wbits = S), o(w)))
                  : -2;
              }
              function u(w, S) {
                var C, I;
                return w
                  ? ((I = new s()), ((w.state = I).window = null), 0 !== (C = h(w, S)) && (w.state = null), C)
                  : -2;
              }
              var eo,
                es,
                el = !0;
              function j(w) {
                if (el) {
                  var S;
                  for (eo = new I.Buf32(512), es = new I.Buf32(32), S = 0; S < 144; ) w.lens[S++] = 8;
                  for (; S < 256; ) w.lens[S++] = 9;
                  for (; S < 280; ) w.lens[S++] = 7;
                  for (; S < 288; ) w.lens[S++] = 8;
                  for (ei(1, w.lens, 0, 288, eo, 0, w.work, { bits: 9 }), S = 0; S < 32; ) w.lens[S++] = 5;
                  ei(2, w.lens, 0, 32, es, 0, w.work, { bits: 5 }), (el = !1);
                }
                (w.lencode = eo), (w.lenbits = 9), (w.distcode = es), (w.distbits = 5);
              }
              function Z(w, S, C, $) {
                var er,
                  en = w.state;
                return (
                  null === en.window &&
                    ((en.wsize = 1 << en.wbits), (en.wnext = 0), (en.whave = 0), (en.window = new I.Buf8(en.wsize))),
                  $ >= en.wsize
                    ? (I.arraySet(en.window, S, C - en.wsize, en.wsize, 0), (en.wnext = 0), (en.whave = en.wsize))
                    : ($ < (er = en.wsize - en.wnext) && (er = $),
                      I.arraySet(en.window, S, C - $, er, en.wnext),
                      ($ -= er)
                        ? (I.arraySet(en.window, S, C - $, $, 0), (en.wnext = $), (en.whave = en.wsize))
                        : ((en.wnext += er),
                          en.wnext === en.wsize && (en.wnext = 0),
                          en.whave < en.wsize && (en.whave += er))),
                  0
                );
              }
              (C.inflateReset = o),
                (C.inflateReset2 = h),
                (C.inflateResetKeep = a),
                (C.inflateInit = function (w) {
                  return u(w, 15);
                }),
                (C.inflateInit2 = u),
                (C.inflate = function (w, S) {
                  var C,
                    eo,
                    es,
                    el,
                    ec,
                    eu,
                    ed,
                    eh,
                    ef,
                    ep,
                    em,
                    eg,
                    ey,
                    ev,
                    eb,
                    e_,
                    ex,
                    ew,
                    ek,
                    eS,
                    eC,
                    eP,
                    eA,
                    eT,
                    eE = 0,
                    ez = new I.Buf8(4),
                    eI = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                  if (!w || !w.state || !w.output || (!w.input && 0 !== w.avail_in)) return -2;
                  12 === (C = w.state).mode && (C.mode = 13),
                    (ec = w.next_out),
                    (es = w.output),
                    (ed = w.avail_out),
                    (el = w.next_in),
                    (eo = w.input),
                    (eu = w.avail_in),
                    (eh = C.hold),
                    (ef = C.bits),
                    (ep = eu),
                    (em = ed),
                    (eP = 0);
                  e: for (;;)
                    switch (C.mode) {
                      case 1:
                        if (0 === C.wrap) {
                          C.mode = 13;
                          break;
                        }
                        for (; ef < 16; ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        if (2 & C.wrap && 35615 === eh) {
                          (ez[(C.check = 0)] = 255 & eh),
                            (ez[1] = (eh >>> 8) & 255),
                            (C.check = er(C.check, ez, 2, 0)),
                            (ef = eh = 0),
                            (C.mode = 2);
                          break;
                        }
                        if (
                          ((C.flags = 0),
                          C.head && (C.head.done = !1),
                          !(1 & C.wrap) || (((255 & eh) << 8) + (eh >> 8)) % 31)
                        ) {
                          (w.msg = 'incorrect header check'), (C.mode = 30);
                          break;
                        }
                        if (8 != (15 & eh)) {
                          (w.msg = 'unknown compression method'), (C.mode = 30);
                          break;
                        }
                        if (((ef -= 4), (eC = 8 + (15 & (eh >>>= 4))), 0 === C.wbits)) C.wbits = eC;
                        else if (eC > C.wbits) {
                          (w.msg = 'invalid window size'), (C.mode = 30);
                          break;
                        }
                        (C.dmax = 1 << eC), (w.adler = C.check = 1), (C.mode = 512 & eh ? 10 : 12), (ef = eh = 0);
                        break;
                      case 2:
                        for (; ef < 16; ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        if (((C.flags = eh), 8 != (255 & C.flags))) {
                          (w.msg = 'unknown compression method'), (C.mode = 30);
                          break;
                        }
                        if (57344 & C.flags) {
                          (w.msg = 'unknown header flags set'), (C.mode = 30);
                          break;
                        }
                        C.head && (C.head.text = (eh >> 8) & 1),
                          512 & C.flags &&
                            ((ez[0] = 255 & eh), (ez[1] = (eh >>> 8) & 255), (C.check = er(C.check, ez, 2, 0))),
                          (ef = eh = 0),
                          (C.mode = 3);
                      case 3:
                        for (; ef < 32; ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        C.head && (C.head.time = eh),
                          512 & C.flags &&
                            ((ez[0] = 255 & eh),
                            (ez[1] = (eh >>> 8) & 255),
                            (ez[2] = (eh >>> 16) & 255),
                            (ez[3] = (eh >>> 24) & 255),
                            (C.check = er(C.check, ez, 4, 0))),
                          (ef = eh = 0),
                          (C.mode = 4);
                      case 4:
                        for (; ef < 16; ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        C.head && ((C.head.xflags = 255 & eh), (C.head.os = eh >> 8)),
                          512 & C.flags &&
                            ((ez[0] = 255 & eh), (ez[1] = (eh >>> 8) & 255), (C.check = er(C.check, ez, 2, 0))),
                          (ef = eh = 0),
                          (C.mode = 5);
                      case 5:
                        if (1024 & C.flags) {
                          for (; ef < 16; ) {
                            if (0 === eu) break e;
                            eu--, (eh += eo[el++] << ef), (ef += 8);
                          }
                          (C.length = eh),
                            C.head && (C.head.extra_len = eh),
                            512 & C.flags &&
                              ((ez[0] = 255 & eh), (ez[1] = (eh >>> 8) & 255), (C.check = er(C.check, ez, 2, 0))),
                            (ef = eh = 0);
                        } else C.head && (C.head.extra = null);
                        C.mode = 6;
                      case 6:
                        if (
                          1024 & C.flags &&
                          (eu < (eg = C.length) && (eg = eu),
                          eg &&
                            (C.head &&
                              ((eC = C.head.extra_len - C.length),
                              C.head.extra || (C.head.extra = Array(C.head.extra_len)),
                              I.arraySet(C.head.extra, eo, el, eg, eC)),
                            512 & C.flags && (C.check = er(C.check, eo, eg, el)),
                            (eu -= eg),
                            (el += eg),
                            (C.length -= eg)),
                          C.length)
                        )
                          break e;
                        (C.length = 0), (C.mode = 7);
                      case 7:
                        if (2048 & C.flags) {
                          if (0 === eu) break e;
                          for (
                            eg = 0;
                            (eC = eo[el + eg++]),
                              C.head && eC && C.length < 65536 && (C.head.name += String.fromCharCode(eC)),
                              eC && eg < eu;

                          );
                          if ((512 & C.flags && (C.check = er(C.check, eo, eg, el)), (eu -= eg), (el += eg), eC))
                            break e;
                        } else C.head && (C.head.name = null);
                        (C.length = 0), (C.mode = 8);
                      case 8:
                        if (4096 & C.flags) {
                          if (0 === eu) break e;
                          for (
                            eg = 0;
                            (eC = eo[el + eg++]),
                              C.head && eC && C.length < 65536 && (C.head.comment += String.fromCharCode(eC)),
                              eC && eg < eu;

                          );
                          if ((512 & C.flags && (C.check = er(C.check, eo, eg, el)), (eu -= eg), (el += eg), eC))
                            break e;
                        } else C.head && (C.head.comment = null);
                        C.mode = 9;
                      case 9:
                        if (512 & C.flags) {
                          for (; ef < 16; ) {
                            if (0 === eu) break e;
                            eu--, (eh += eo[el++] << ef), (ef += 8);
                          }
                          if (eh !== (65535 & C.check)) {
                            (w.msg = 'header crc mismatch'), (C.mode = 30);
                            break;
                          }
                          ef = eh = 0;
                        }
                        C.head && ((C.head.hcrc = (C.flags >> 9) & 1), (C.head.done = !0)),
                          (w.adler = C.check = 0),
                          (C.mode = 12);
                        break;
                      case 10:
                        for (; ef < 32; ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        (w.adler = C.check = L(eh)), (ef = eh = 0), (C.mode = 11);
                      case 11:
                        if (0 === C.havedict)
                          return (
                            (w.next_out = ec),
                            (w.avail_out = ed),
                            (w.next_in = el),
                            (w.avail_in = eu),
                            (C.hold = eh),
                            (C.bits = ef),
                            2
                          );
                        (w.adler = C.check = 1), (C.mode = 12);
                      case 12:
                        if (5 === S || 6 === S) break e;
                      case 13:
                        if (C.last) {
                          (eh >>>= 7 & ef), (ef -= 7 & ef), (C.mode = 27);
                          break;
                        }
                        for (; ef < 3; ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        switch (((C.last = 1 & eh), (ef -= 1), 3 & (eh >>>= 1))) {
                          case 0:
                            C.mode = 14;
                            break;
                          case 1:
                            if ((j(C), (C.mode = 20), 6 !== S)) break;
                            (eh >>>= 2), (ef -= 2);
                            break e;
                          case 2:
                            C.mode = 17;
                            break;
                          case 3:
                            (w.msg = 'invalid block type'), (C.mode = 30);
                        }
                        (eh >>>= 2), (ef -= 2);
                        break;
                      case 14:
                        for (eh >>>= 7 & ef, ef -= 7 & ef; ef < 32; ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        if ((65535 & eh) != ((eh >>> 16) ^ 65535)) {
                          (w.msg = 'invalid stored block lengths'), (C.mode = 30);
                          break;
                        }
                        if (((C.length = 65535 & eh), (ef = eh = 0), (C.mode = 15), 6 === S)) break e;
                      case 15:
                        C.mode = 16;
                      case 16:
                        if ((eg = C.length)) {
                          if ((eu < eg && (eg = eu), ed < eg && (eg = ed), 0 === eg)) break e;
                          I.arraySet(es, eo, el, eg, ec),
                            (eu -= eg),
                            (el += eg),
                            (ed -= eg),
                            (ec += eg),
                            (C.length -= eg);
                          break;
                        }
                        C.mode = 12;
                        break;
                      case 17:
                        for (; ef < 14; ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        if (
                          ((C.nlen = 257 + (31 & eh)),
                          (eh >>>= 5),
                          (ef -= 5),
                          (C.ndist = 1 + (31 & eh)),
                          (eh >>>= 5),
                          (ef -= 5),
                          (C.ncode = 4 + (15 & eh)),
                          (eh >>>= 4),
                          (ef -= 4),
                          286 < C.nlen || 30 < C.ndist)
                        ) {
                          (w.msg = 'too many length or distance symbols'), (C.mode = 30);
                          break;
                        }
                        (C.have = 0), (C.mode = 18);
                      case 18:
                        for (; C.have < C.ncode; ) {
                          for (; ef < 3; ) {
                            if (0 === eu) break e;
                            eu--, (eh += eo[el++] << ef), (ef += 8);
                          }
                          (C.lens[eI[C.have++]] = 7 & eh), (eh >>>= 3), (ef -= 3);
                        }
                        for (; C.have < 19; ) C.lens[eI[C.have++]] = 0;
                        if (
                          ((C.lencode = C.lendyn),
                          (C.lenbits = 7),
                          (eA = { bits: C.lenbits }),
                          (eP = ei(0, C.lens, 0, 19, C.lencode, 0, C.work, eA)),
                          (C.lenbits = eA.bits),
                          eP)
                        ) {
                          (w.msg = 'invalid code lengths set'), (C.mode = 30);
                          break;
                        }
                        (C.have = 0), (C.mode = 19);
                      case 19:
                        for (; C.have < C.nlen + C.ndist; ) {
                          for (
                            ;
                            (e_ = ((eE = C.lencode[eh & ((1 << C.lenbits) - 1)]) >>> 16) & 255),
                              (ex = 65535 & eE),
                              !((eb = eE >>> 24) <= ef);

                          ) {
                            if (0 === eu) break e;
                            eu--, (eh += eo[el++] << ef), (ef += 8);
                          }
                          if (ex < 16) (eh >>>= eb), (ef -= eb), (C.lens[C.have++] = ex);
                          else {
                            if (16 === ex) {
                              for (eT = eb + 2; ef < eT; ) {
                                if (0 === eu) break e;
                                eu--, (eh += eo[el++] << ef), (ef += 8);
                              }
                              if (((eh >>>= eb), (ef -= eb), 0 === C.have)) {
                                (w.msg = 'invalid bit length repeat'), (C.mode = 30);
                                break;
                              }
                              (eC = C.lens[C.have - 1]), (eg = 3 + (3 & eh)), (eh >>>= 2), (ef -= 2);
                            } else if (17 === ex) {
                              for (eT = eb + 3; ef < eT; ) {
                                if (0 === eu) break e;
                                eu--, (eh += eo[el++] << ef), (ef += 8);
                              }
                              (ef -= eb), (eC = 0), (eg = 3 + (7 & (eh >>>= eb))), (eh >>>= 3), (ef -= 3);
                            } else {
                              for (eT = eb + 7; ef < eT; ) {
                                if (0 === eu) break e;
                                eu--, (eh += eo[el++] << ef), (ef += 8);
                              }
                              (ef -= eb), (eC = 0), (eg = 11 + (127 & (eh >>>= eb))), (eh >>>= 7), (ef -= 7);
                            }
                            if (C.have + eg > C.nlen + C.ndist) {
                              (w.msg = 'invalid bit length repeat'), (C.mode = 30);
                              break;
                            }
                            for (; eg--; ) C.lens[C.have++] = eC;
                          }
                        }
                        if (30 === C.mode) break;
                        if (0 === C.lens[256]) {
                          (w.msg = 'invalid code -- missing end-of-block'), (C.mode = 30);
                          break;
                        }
                        if (
                          ((C.lenbits = 9),
                          (eA = { bits: C.lenbits }),
                          (eP = ei(1, C.lens, 0, C.nlen, C.lencode, 0, C.work, eA)),
                          (C.lenbits = eA.bits),
                          eP)
                        ) {
                          (w.msg = 'invalid literal/lengths set'), (C.mode = 30);
                          break;
                        }
                        if (
                          ((C.distbits = 6),
                          (C.distcode = C.distdyn),
                          (eA = { bits: C.distbits }),
                          (eP = ei(2, C.lens, C.nlen, C.ndist, C.distcode, 0, C.work, eA)),
                          (C.distbits = eA.bits),
                          eP)
                        ) {
                          (w.msg = 'invalid distances set'), (C.mode = 30);
                          break;
                        }
                        if (((C.mode = 20), 6 === S)) break e;
                      case 20:
                        C.mode = 21;
                      case 21:
                        if (6 <= eu && 258 <= ed) {
                          (w.next_out = ec),
                            (w.avail_out = ed),
                            (w.next_in = el),
                            (w.avail_in = eu),
                            (C.hold = eh),
                            (C.bits = ef),
                            en(w, em),
                            (ec = w.next_out),
                            (es = w.output),
                            (ed = w.avail_out),
                            (el = w.next_in),
                            (eo = w.input),
                            (eu = w.avail_in),
                            (eh = C.hold),
                            (ef = C.bits),
                            12 === C.mode && (C.back = -1);
                          break;
                        }
                        for (
                          C.back = 0;
                          (e_ = ((eE = C.lencode[eh & ((1 << C.lenbits) - 1)]) >>> 16) & 255),
                            (ex = 65535 & eE),
                            !((eb = eE >>> 24) <= ef);

                        ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        if (e_ && 0 == (240 & e_)) {
                          for (
                            ew = eb, ek = e_, eS = ex;
                            (e_ = ((eE = C.lencode[eS + ((eh & ((1 << (ew + ek)) - 1)) >> ew)]) >>> 16) & 255),
                              (ex = 65535 & eE),
                              !(ew + (eb = eE >>> 24) <= ef);

                          ) {
                            if (0 === eu) break e;
                            eu--, (eh += eo[el++] << ef), (ef += 8);
                          }
                          (eh >>>= ew), (ef -= ew), (C.back += ew);
                        }
                        if (((eh >>>= eb), (ef -= eb), (C.back += eb), (C.length = ex), 0 === e_)) {
                          C.mode = 26;
                          break;
                        }
                        if (32 & e_) {
                          (C.back = -1), (C.mode = 12);
                          break;
                        }
                        if (64 & e_) {
                          (w.msg = 'invalid literal/length code'), (C.mode = 30);
                          break;
                        }
                        (C.extra = 15 & e_), (C.mode = 22);
                      case 22:
                        if (C.extra) {
                          for (eT = C.extra; ef < eT; ) {
                            if (0 === eu) break e;
                            eu--, (eh += eo[el++] << ef), (ef += 8);
                          }
                          (C.length += eh & ((1 << C.extra) - 1)),
                            (eh >>>= C.extra),
                            (ef -= C.extra),
                            (C.back += C.extra);
                        }
                        (C.was = C.length), (C.mode = 23);
                      case 23:
                        for (
                          ;
                          (e_ = ((eE = C.distcode[eh & ((1 << C.distbits) - 1)]) >>> 16) & 255),
                            (ex = 65535 & eE),
                            !((eb = eE >>> 24) <= ef);

                        ) {
                          if (0 === eu) break e;
                          eu--, (eh += eo[el++] << ef), (ef += 8);
                        }
                        if (0 == (240 & e_)) {
                          for (
                            ew = eb, ek = e_, eS = ex;
                            (e_ = ((eE = C.distcode[eS + ((eh & ((1 << (ew + ek)) - 1)) >> ew)]) >>> 16) & 255),
                              (ex = 65535 & eE),
                              !(ew + (eb = eE >>> 24) <= ef);

                          ) {
                            if (0 === eu) break e;
                            eu--, (eh += eo[el++] << ef), (ef += 8);
                          }
                          (eh >>>= ew), (ef -= ew), (C.back += ew);
                        }
                        if (((eh >>>= eb), (ef -= eb), (C.back += eb), 64 & e_)) {
                          (w.msg = 'invalid distance code'), (C.mode = 30);
                          break;
                        }
                        (C.offset = ex), (C.extra = 15 & e_), (C.mode = 24);
                      case 24:
                        if (C.extra) {
                          for (eT = C.extra; ef < eT; ) {
                            if (0 === eu) break e;
                            eu--, (eh += eo[el++] << ef), (ef += 8);
                          }
                          (C.offset += eh & ((1 << C.extra) - 1)),
                            (eh >>>= C.extra),
                            (ef -= C.extra),
                            (C.back += C.extra);
                        }
                        if (C.offset > C.dmax) {
                          (w.msg = 'invalid distance too far back'), (C.mode = 30);
                          break;
                        }
                        C.mode = 25;
                      case 25:
                        if (0 === ed) break e;
                        if (((eg = em - ed), C.offset > eg)) {
                          if ((eg = C.offset - eg) > C.whave && C.sane) {
                            (w.msg = 'invalid distance too far back'), (C.mode = 30);
                            break;
                          }
                          (ey = eg > C.wnext ? ((eg -= C.wnext), C.wsize - eg) : C.wnext - eg),
                            eg > C.length && (eg = C.length),
                            (ev = C.window);
                        } else (ev = es), (ey = ec - C.offset), (eg = C.length);
                        for (ed < eg && (eg = ed), ed -= eg, C.length -= eg; (es[ec++] = ev[ey++]), --eg; );
                        0 === C.length && (C.mode = 21);
                        break;
                      case 26:
                        if (0 === ed) break e;
                        (es[ec++] = C.length), ed--, (C.mode = 21);
                        break;
                      case 27:
                        if (C.wrap) {
                          for (; ef < 32; ) {
                            if (0 === eu) break e;
                            eu--, (eh |= eo[el++] << ef), (ef += 8);
                          }
                          if (
                            ((em -= ed),
                            (w.total_out += em),
                            (C.total += em),
                            em &&
                              (w.adler = C.check =
                                C.flags ? er(C.check, es, em, ec - em) : $(C.check, es, em, ec - em)),
                            (em = ed),
                            (C.flags ? eh : L(eh)) !== C.check)
                          ) {
                            (w.msg = 'incorrect data check'), (C.mode = 30);
                            break;
                          }
                          ef = eh = 0;
                        }
                        C.mode = 28;
                      case 28:
                        if (C.wrap && C.flags) {
                          for (; ef < 32; ) {
                            if (0 === eu) break e;
                            eu--, (eh += eo[el++] << ef), (ef += 8);
                          }
                          if (eh !== (4294967295 & C.total)) {
                            (w.msg = 'incorrect length check'), (C.mode = 30);
                            break;
                          }
                          ef = eh = 0;
                        }
                        C.mode = 29;
                      case 29:
                        eP = 1;
                        break e;
                      case 30:
                        eP = -3;
                        break e;
                      case 31:
                        return -4;
                      default:
                        return -2;
                    }
                  return (
                    (w.next_out = ec),
                    (w.avail_out = ed),
                    (w.next_in = el),
                    (w.avail_in = eu),
                    (C.hold = eh),
                    (C.bits = ef),
                    (C.wsize || (em !== w.avail_out && C.mode < 30 && (C.mode < 27 || 4 !== S))) &&
                    Z(w, w.output, w.next_out, em - w.avail_out)
                      ? ((C.mode = 31), -4)
                      : ((ep -= w.avail_in),
                        (em -= w.avail_out),
                        (w.total_in += ep),
                        (w.total_out += em),
                        (C.total += em),
                        C.wrap &&
                          em &&
                          (w.adler = C.check =
                            C.flags ? er(C.check, es, em, w.next_out - em) : $(C.check, es, em, w.next_out - em)),
                        (w.data_type =
                          C.bits +
                          (C.last ? 64 : 0) +
                          (12 === C.mode ? 128 : 0) +
                          (20 === C.mode || 15 === C.mode ? 256 : 0)),
                        ((0 == ep && 0 === em) || 4 === S) && 0 === eP && (eP = -5),
                        eP)
                  );
                }),
                (C.inflateEnd = function (w) {
                  if (!w || !w.state) return -2;
                  var S = w.state;
                  return S.window && (S.window = null), (w.state = null), 0;
                }),
                (C.inflateGetHeader = function (w, S) {
                  var C;
                  return w && w.state ? (0 == (2 & (C = w.state).wrap) ? -2 : (((C.head = S).done = !1), 0)) : -2;
                }),
                (C.inflateSetDictionary = function (w, S) {
                  var C,
                    I = S.length;
                  return w && w.state
                    ? 0 !== (C = w.state).wrap && 11 !== C.mode
                      ? -2
                      : 11 === C.mode && $(1, S, I, 0) !== C.check
                      ? -3
                      : Z(w, S, I, I)
                      ? ((C.mode = 31), -4)
                      : ((C.havedict = 1), 0)
                    : -2;
                }),
                (C.inflateInfo = 'pako inflate (from Nodeca project)');
            },
            { '../utils/common': 41, './adler32': 43, './crc32': 45, './inffast': 48, './inftrees': 50 }
          ],
          50: [
            function (w, S, C) {
              'use strict';
              var I = w('../utils/common'),
                $ = [
                  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163,
                  195, 227, 258, 0, 0
                ],
                er = [
                  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21,
                  21, 21, 21, 16, 72, 78
                ],
                en = [
                  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073,
                  4097, 6145, 8193, 12289, 16385, 24577, 0, 0
                ],
                ei = [
                  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27,
                  27, 28, 28, 29, 29, 64, 64
                ];
              S.exports = function (w, S, C, eo, es, el, ec, eu) {
                var ed,
                  eh,
                  ef,
                  ep,
                  em,
                  eg,
                  ey,
                  ev,
                  eb,
                  e_ = eu.bits,
                  ex = 0,
                  ew = 0,
                  ek = 0,
                  eS = 0,
                  eC = 0,
                  eP = 0,
                  eA = 0,
                  eT = 0,
                  eE = 0,
                  ez = 0,
                  eI = null,
                  eB = 0,
                  eR = new I.Buf16(16),
                  eO = new I.Buf16(16),
                  eM = null,
                  eD = 0;
                for (ex = 0; ex <= 15; ex++) eR[ex] = 0;
                for (ew = 0; ew < eo; ew++) eR[S[C + ew]]++;
                for (eC = e_, eS = 15; 1 <= eS && 0 === eR[eS]; eS--);
                if ((eS < eC && (eC = eS), 0 === eS))
                  return (es[el++] = 20971520), (es[el++] = 20971520), (eu.bits = 1), 0;
                for (ek = 1; ek < eS && 0 === eR[ek]; ek++);
                for (eC < ek && (eC = ek), ex = eT = 1; ex <= 15; ex++) if (((eT <<= 1), (eT -= eR[ex]) < 0)) return -1;
                if (0 < eT && (0 === w || 1 !== eS)) return -1;
                for (eO[1] = 0, ex = 1; ex < 15; ex++) eO[ex + 1] = eO[ex] + eR[ex];
                for (ew = 0; ew < eo; ew++) 0 !== S[C + ew] && (ec[eO[S[C + ew]]++] = ew);
                if (
                  ((eg =
                    0 === w
                      ? ((eI = eM = ec), 19)
                      : 1 === w
                      ? ((eI = $), (eB -= 257), (eM = er), (eD -= 257), 256)
                      : ((eI = en), (eM = ei), -1)),
                  (ex = ek),
                  (em = el),
                  (eA = ew = ez = 0),
                  (ef = -1),
                  (ep = (eE = 1 << (eP = eC)) - 1),
                  (1 === w && 852 < eE) || (2 === w && 592 < eE))
                )
                  return 1;
                for (;;) {
                  for (
                    ey = ex - eA,
                      eb =
                        ec[ew] < eg
                          ? ((ev = 0), ec[ew])
                          : ec[ew] > eg
                          ? ((ev = eM[eD + ec[ew]]), eI[eB + ec[ew]])
                          : ((ev = 96), 0),
                      ed = 1 << (ex - eA),
                      ek = eh = 1 << eP;
                    (es[em + (ez >> eA) + (eh -= ed)] = (ey << 24) | (ev << 16) | eb | 0), 0 !== eh;

                  );
                  for (ed = 1 << (ex - 1); ez & ed; ) ed >>= 1;
                  if ((0 !== ed ? ((ez &= ed - 1), (ez += ed)) : (ez = 0), ew++, 0 == --eR[ex])) {
                    if (ex === eS) break;
                    ex = S[C + ec[ew]];
                  }
                  if (eC < ex && (ez & ep) !== ef) {
                    for (
                      0 === eA && (eA = eC), em += ek, eT = 1 << (eP = ex - eA);
                      eP + eA < eS && !((eT -= eR[eP + eA]) <= 0);

                    )
                      eP++, (eT <<= 1);
                    if (((eE += 1 << eP), (1 === w && 852 < eE) || (2 === w && 592 < eE))) return 1;
                    es[(ef = ez & ep)] = (eC << 24) | (eP << 16) | (em - el) | 0;
                  }
                }
                return 0 !== ez && (es[em + ez] = ((ex - eA) << 24) | 4194304), (eu.bits = eC), 0;
              };
            },
            { '../utils/common': 41 }
          ],
          51: [
            function (w, S, C) {
              'use strict';
              S.exports = {
                2: 'need dictionary',
                1: 'stream end',
                0: '',
                '-1': 'file error',
                '-2': 'stream error',
                '-3': 'data error',
                '-4': 'insufficient memory',
                '-5': 'buffer error',
                '-6': 'incompatible version'
              };
            },
            {}
          ],
          52: [
            function (w, S, C) {
              'use strict';
              var I = w('../utils/common');
              function n(w) {
                for (var S = w.length; 0 <= --S; ) w[S] = 0;
              }
              var $ = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],
                er = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
                en = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                ei = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                eo = Array(576);
              n(eo);
              var es = Array(60);
              n(es);
              var el = Array(512);
              n(el);
              var ec = Array(256);
              n(ec);
              var eu = Array(29);
              n(eu);
              var ed,
                eh,
                ef,
                ep = Array(30);
              function D(w, S, C, I, $) {
                (this.static_tree = w),
                  (this.extra_bits = S),
                  (this.extra_base = C),
                  (this.elems = I),
                  (this.max_length = $),
                  (this.has_stree = w && w.length);
              }
              function F(w, S) {
                (this.dyn_tree = w), (this.max_code = 0), (this.stat_desc = S);
              }
              function N(w) {
                return w < 256 ? el[w] : el[256 + (w >>> 7)];
              }
              function U(w, S) {
                (w.pending_buf[w.pending++] = 255 & S), (w.pending_buf[w.pending++] = (S >>> 8) & 255);
              }
              function P(w, S, C) {
                w.bi_valid > 16 - C
                  ? ((w.bi_buf |= (S << w.bi_valid) & 65535),
                    U(w, w.bi_buf),
                    (w.bi_buf = S >> (16 - w.bi_valid)),
                    (w.bi_valid += C - 16))
                  : ((w.bi_buf |= (S << w.bi_valid) & 65535), (w.bi_valid += C));
              }
              function L(w, S, C) {
                P(w, C[2 * S], C[2 * S + 1]);
              }
              function j(w, S) {
                for (var C = 0; (C |= 1 & w), (w >>>= 1), (C <<= 1), 0 < --S; );
                return C >>> 1;
              }
              function Z(w, S, C) {
                var I,
                  $,
                  er = Array(16),
                  en = 0;
                for (I = 1; I <= 15; I++) er[I] = en = (en + C[I - 1]) << 1;
                for ($ = 0; $ <= S; $++) {
                  var ei = w[2 * $ + 1];
                  0 !== ei && (w[2 * $] = j(er[ei]++, ei));
                }
              }
              function W(w) {
                var S;
                for (S = 0; S < 286; S++) w.dyn_ltree[2 * S] = 0;
                for (S = 0; S < 30; S++) w.dyn_dtree[2 * S] = 0;
                for (S = 0; S < 19; S++) w.bl_tree[2 * S] = 0;
                (w.dyn_ltree[512] = 1), (w.opt_len = w.static_len = 0), (w.last_lit = w.matches = 0);
              }
              function M(w) {
                8 < w.bi_valid ? U(w, w.bi_buf) : 0 < w.bi_valid && (w.pending_buf[w.pending++] = w.bi_buf),
                  (w.bi_buf = 0),
                  (w.bi_valid = 0);
              }
              function H(w, S, C, I) {
                var $ = 2 * S,
                  er = 2 * C;
                return w[$] < w[er] || (w[$] === w[er] && I[S] <= I[C]);
              }
              function G(w, S, C) {
                for (
                  var I = w.heap[C], $ = C << 1;
                  $ <= w.heap_len &&
                  ($ < w.heap_len && H(S, w.heap[$ + 1], w.heap[$], w.depth) && $++, !H(S, I, w.heap[$], w.depth));

                )
                  (w.heap[C] = w.heap[$]), (C = $), ($ <<= 1);
                w.heap[C] = I;
              }
              function K(w, S, C) {
                var I,
                  en,
                  ei,
                  eo,
                  es = 0;
                if (0 !== w.last_lit)
                  for (
                    ;
                    (I = (w.pending_buf[w.d_buf + 2 * es] << 8) | w.pending_buf[w.d_buf + 2 * es + 1]),
                      (en = w.pending_buf[w.l_buf + es]),
                      es++,
                      0 === I
                        ? L(w, en, S)
                        : (L(w, (ei = ec[en]) + 256 + 1, S),
                          0 !== (eo = $[ei]) && P(w, (en -= eu[ei]), eo),
                          L(w, (ei = N(--I)), C),
                          0 !== (eo = er[ei]) && P(w, (I -= ep[ei]), eo)),
                      es < w.last_lit;

                  );
                L(w, 256, S);
              }
              function Y(w, S) {
                var C,
                  I,
                  $,
                  er = S.dyn_tree,
                  en = S.stat_desc.static_tree,
                  ei = S.stat_desc.has_stree,
                  eo = S.stat_desc.elems,
                  es = -1;
                for (w.heap_len = 0, w.heap_max = 573, C = 0; C < eo; C++)
                  0 !== er[2 * C] ? ((w.heap[++w.heap_len] = es = C), (w.depth[C] = 0)) : (er[2 * C + 1] = 0);
                for (; w.heap_len < 2; )
                  (er[2 * ($ = w.heap[++w.heap_len] = es < 2 ? ++es : 0)] = 1),
                    (w.depth[$] = 0),
                    w.opt_len--,
                    ei && (w.static_len -= en[2 * $ + 1]);
                for (S.max_code = es, C = w.heap_len >> 1; 1 <= C; C--) G(w, er, C);
                for (
                  $ = eo;
                  (C = w.heap[1]),
                    (w.heap[1] = w.heap[w.heap_len--]),
                    G(w, er, 1),
                    (I = w.heap[1]),
                    (w.heap[--w.heap_max] = C),
                    (w.heap[--w.heap_max] = I),
                    (er[2 * $] = er[2 * C] + er[2 * I]),
                    (w.depth[$] = (w.depth[C] >= w.depth[I] ? w.depth[C] : w.depth[I]) + 1),
                    (er[2 * C + 1] = er[2 * I + 1] = $),
                    (w.heap[1] = $++),
                    G(w, er, 1),
                    2 <= w.heap_len;

                );
                (w.heap[--w.heap_max] = w.heap[1]),
                  (function (w, S) {
                    var C,
                      I,
                      $,
                      er,
                      en,
                      ei,
                      eo = S.dyn_tree,
                      es = S.max_code,
                      el = S.stat_desc.static_tree,
                      ec = S.stat_desc.has_stree,
                      eu = S.stat_desc.extra_bits,
                      ed = S.stat_desc.extra_base,
                      eh = S.stat_desc.max_length,
                      ef = 0;
                    for (er = 0; er <= 15; er++) w.bl_count[er] = 0;
                    for (eo[2 * w.heap[w.heap_max] + 1] = 0, C = w.heap_max + 1; C < 573; C++)
                      eh < (er = eo[2 * eo[2 * (I = w.heap[C]) + 1] + 1] + 1) && ((er = eh), ef++),
                        (eo[2 * I + 1] = er),
                        es < I ||
                          (w.bl_count[er]++,
                          (en = 0),
                          ed <= I && (en = eu[I - ed]),
                          (ei = eo[2 * I]),
                          (w.opt_len += ei * (er + en)),
                          ec && (w.static_len += ei * (el[2 * I + 1] + en)));
                    if (0 !== ef) {
                      do {
                        for (er = eh - 1; 0 === w.bl_count[er]; ) er--;
                        w.bl_count[er]--, (w.bl_count[er + 1] += 2), w.bl_count[eh]--, (ef -= 2);
                      } while (0 < ef);
                      for (er = eh; 0 !== er; er--)
                        for (I = w.bl_count[er]; 0 !== I; )
                          es < ($ = w.heap[--C]) ||
                            (eo[2 * $ + 1] !== er &&
                              ((w.opt_len += (er - eo[2 * $ + 1]) * eo[2 * $]), (eo[2 * $ + 1] = er)),
                            I--);
                    }
                  })(w, S),
                  Z(er, es, w.bl_count);
              }
              function X(w, S, C) {
                var I,
                  $,
                  er = -1,
                  en = S[1],
                  ei = 0,
                  eo = 7,
                  es = 4;
                for (0 === en && ((eo = 138), (es = 3)), S[2 * (C + 1) + 1] = 65535, I = 0; I <= C; I++)
                  ($ = en),
                    (en = S[2 * (I + 1) + 1]),
                    (++ei < eo && $ === en) ||
                      (ei < es
                        ? (w.bl_tree[2 * $] += ei)
                        : 0 !== $
                        ? ($ !== er && w.bl_tree[2 * $]++, w.bl_tree[32]++)
                        : ei <= 10
                        ? w.bl_tree[34]++
                        : w.bl_tree[36]++,
                      (er = $),
                      (es = (ei = 0) === en ? ((eo = 138), 3) : $ === en ? ((eo = 6), 3) : ((eo = 7), 4)));
              }
              function V(w, S, C) {
                var I,
                  $,
                  er = -1,
                  en = S[1],
                  ei = 0,
                  eo = 7,
                  es = 4;
                for (0 === en && ((eo = 138), (es = 3)), I = 0; I <= C; I++)
                  if ((($ = en), (en = S[2 * (I + 1) + 1]), !(++ei < eo && $ === en))) {
                    if (ei < es) for (; L(w, $, w.bl_tree), 0 != --ei; );
                    else
                      0 !== $
                        ? ($ !== er && (L(w, $, w.bl_tree), ei--), L(w, 16, w.bl_tree), P(w, ei - 3, 2))
                        : ei <= 10
                        ? (L(w, 17, w.bl_tree), P(w, ei - 3, 3))
                        : (L(w, 18, w.bl_tree), P(w, ei - 11, 7));
                    (er = $), (es = (ei = 0) === en ? ((eo = 138), 3) : $ === en ? ((eo = 6), 3) : ((eo = 7), 4));
                  }
              }
              n(ep);
              var em = !1;
              function J(w, S, C, $) {
                P(w, 0 + ($ ? 1 : 0), 3),
                  M(w),
                  U(w, C),
                  U(w, ~C),
                  I.arraySet(w.pending_buf, w.window, S, C, w.pending),
                  (w.pending += C);
              }
              (C._tr_init = function (w) {
                em ||
                  ((function () {
                    var w,
                      S,
                      C,
                      I,
                      ei,
                      em = Array(16);
                    for (I = C = 0; I < 28; I++) for (eu[I] = C, w = 0; w < 1 << $[I]; w++) ec[C++] = I;
                    for (ec[C - 1] = I, I = ei = 0; I < 16; I++)
                      for (ep[I] = ei, w = 0; w < 1 << er[I]; w++) el[ei++] = I;
                    for (ei >>= 7; I < 30; I++)
                      for (ep[I] = ei << 7, w = 0; w < 1 << (er[I] - 7); w++) el[256 + ei++] = I;
                    for (S = 0; S <= 15; S++) em[S] = 0;
                    for (w = 0; w <= 143; ) (eo[2 * w + 1] = 8), w++, em[8]++;
                    for (; w <= 255; ) (eo[2 * w + 1] = 9), w++, em[9]++;
                    for (; w <= 279; ) (eo[2 * w + 1] = 7), w++, em[7]++;
                    for (; w <= 287; ) (eo[2 * w + 1] = 8), w++, em[8]++;
                    for (Z(eo, 287, em), w = 0; w < 30; w++) (es[2 * w + 1] = 5), (es[2 * w] = j(w, 5));
                    (ed = new D(eo, $, 257, 286, 15)), (eh = new D(es, er, 0, 30, 15)), (ef = new D([], en, 0, 19, 7));
                  })(),
                  (em = !0)),
                  (w.l_desc = new F(w.dyn_ltree, ed)),
                  (w.d_desc = new F(w.dyn_dtree, eh)),
                  (w.bl_desc = new F(w.bl_tree, ef)),
                  (w.bi_buf = 0),
                  (w.bi_valid = 0),
                  W(w);
              }),
                (C._tr_stored_block = J),
                (C._tr_flush_block = function (w, S, C, I) {
                  var $,
                    er,
                    en = 0;
                  0 < w.level
                    ? (2 === w.strm.data_type &&
                        (w.strm.data_type = (function (w) {
                          var S,
                            C = 4093624447;
                          for (S = 0; S <= 31; S++, C >>>= 1) if (1 & C && 0 !== w.dyn_ltree[2 * S]) return 0;
                          if (0 !== w.dyn_ltree[18] || 0 !== w.dyn_ltree[20] || 0 !== w.dyn_ltree[26]) return 1;
                          for (S = 32; S < 256; S++) if (0 !== w.dyn_ltree[2 * S]) return 1;
                          return 0;
                        })(w)),
                      Y(w, w.l_desc),
                      Y(w, w.d_desc),
                      (en = (function (w) {
                        var S;
                        for (
                          X(w, w.dyn_ltree, w.l_desc.max_code),
                            X(w, w.dyn_dtree, w.d_desc.max_code),
                            Y(w, w.bl_desc),
                            S = 18;
                          3 <= S && 0 === w.bl_tree[2 * ei[S] + 1];
                          S--
                        );
                        return (w.opt_len += 3 * (S + 1) + 5 + 5 + 4), S;
                      })(w)),
                      ($ = (w.opt_len + 3 + 7) >>> 3),
                      (er = (w.static_len + 3 + 7) >>> 3) <= $ && ($ = er))
                    : ($ = er = C + 5),
                    C + 4 <= $ && -1 !== S
                      ? J(w, S, C, I)
                      : 4 === w.strategy || er === $
                      ? (P(w, 2 + (I ? 1 : 0), 3), K(w, eo, es))
                      : (P(w, 4 + (I ? 1 : 0), 3),
                        (function (w, S, C, I) {
                          var $;
                          for (P(w, S - 257, 5), P(w, C - 1, 5), P(w, I - 4, 4), $ = 0; $ < I; $++)
                            P(w, w.bl_tree[2 * ei[$] + 1], 3);
                          V(w, w.dyn_ltree, S - 1), V(w, w.dyn_dtree, C - 1);
                        })(w, w.l_desc.max_code + 1, w.d_desc.max_code + 1, en + 1),
                        K(w, w.dyn_ltree, w.dyn_dtree)),
                    W(w),
                    I && M(w);
                }),
                (C._tr_tally = function (w, S, C) {
                  return (
                    (w.pending_buf[w.d_buf + 2 * w.last_lit] = (S >>> 8) & 255),
                    (w.pending_buf[w.d_buf + 2 * w.last_lit + 1] = 255 & S),
                    (w.pending_buf[w.l_buf + w.last_lit] = 255 & C),
                    w.last_lit++,
                    0 === S
                      ? w.dyn_ltree[2 * C]++
                      : (w.matches++, S--, w.dyn_ltree[2 * (ec[C] + 256 + 1)]++, w.dyn_dtree[2 * N(S)]++),
                    w.last_lit === w.lit_bufsize - 1
                  );
                }),
                (C._tr_align = function (w) {
                  P(w, 2, 3),
                    L(w, 256, eo),
                    16 === w.bi_valid
                      ? (U(w, w.bi_buf), (w.bi_buf = 0), (w.bi_valid = 0))
                      : 8 <= w.bi_valid &&
                        ((w.pending_buf[w.pending++] = 255 & w.bi_buf), (w.bi_buf >>= 8), (w.bi_valid -= 8));
                });
            },
            { '../utils/common': 41 }
          ],
          53: [
            function (w, S, C) {
              'use strict';
              S.exports = function () {
                (this.input = null),
                  (this.next_in = 0),
                  (this.avail_in = 0),
                  (this.total_in = 0),
                  (this.output = null),
                  (this.next_out = 0),
                  (this.avail_out = 0),
                  (this.total_out = 0),
                  (this.msg = ''),
                  (this.state = null),
                  (this.data_type = 2),
                  (this.adler = 0);
              };
            },
            {}
          ],
          54: [
            function (w, S, I) {
              (function (w) {
                !(function (w, S) {
                  'use strict';
                  if (!w.setImmediate) {
                    var C,
                      I,
                      er,
                      en,
                      ei = 1,
                      eo = {},
                      es = !1,
                      el = w.document,
                      ec = Object.getPrototypeOf && Object.getPrototypeOf(w);
                    (ec = ec && ec.setTimeout ? ec : w),
                      (C =
                        '[object process]' === {}.toString.call(w.process)
                          ? function (w) {
                              $.nextTick(function () {
                                c(w);
                              });
                            }
                          : !(function () {
                              if (w.postMessage && !w.importScripts) {
                                var S = !0,
                                  C = w.onmessage;
                                return (
                                  (w.onmessage = function () {
                                    S = !1;
                                  }),
                                  w.postMessage('', '*'),
                                  (w.onmessage = C),
                                  S
                                );
                              }
                            })()
                          ? w.MessageChannel
                            ? (((er = new MessageChannel()).port1.onmessage = function (w) {
                                c(w.data);
                              }),
                              function (w) {
                                er.port2.postMessage(w);
                              })
                            : el && 'onreadystatechange' in el.createElement('script')
                            ? ((I = el.documentElement),
                              function (w) {
                                var S = el.createElement('script');
                                (S.onreadystatechange = function () {
                                  c(w), (S.onreadystatechange = null), I.removeChild(S), (S = null);
                                }),
                                  I.appendChild(S);
                              })
                            : function (w) {
                                setTimeout(c, 0, w);
                              }
                          : ((en = 'setImmediate$' + Math.random() + '$'),
                            w.addEventListener ? w.addEventListener('message', d, !1) : w.attachEvent('onmessage', d),
                            function (S) {
                              w.postMessage(en + S, '*');
                            })),
                      (ec.setImmediate = function (w) {
                        'function' != typeof w && (w = Function('' + w));
                        for (var S = Array(arguments.length - 1), I = 0; I < S.length; I++) S[I] = arguments[I + 1];
                        var $ = { callback: w, args: S };
                        return (eo[ei] = $), C(ei), ei++;
                      }),
                      (ec.clearImmediate = f);
                  }
                  function f(w) {
                    delete eo[w];
                  }
                  function c(w) {
                    if (es) setTimeout(c, 0, w);
                    else {
                      var S = eo[w];
                      if (S) {
                        es = !0;
                        try {
                          !(function (w) {
                            var S = w.callback,
                              C = w.args;
                            switch (C.length) {
                              case 0:
                                S();
                                break;
                              case 1:
                                S(C[0]);
                                break;
                              case 2:
                                S(C[0], C[1]);
                                break;
                              case 3:
                                S(C[0], C[1], C[2]);
                                break;
                              default:
                                S.apply(void 0, C);
                            }
                          })(S);
                        } finally {
                          f(w), (es = !1);
                        }
                      }
                    }
                  }
                  function d(S) {
                    S.source === w &&
                      'string' == typeof S.data &&
                      0 === S.data.indexOf(en) &&
                      c(+S.data.slice(en.length));
                  }
                })('undefined' == typeof self ? (void 0 === w ? this : w) : self);
              }).call(
                this,
                void 0 !== C.g ? C.g : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {}
              );
            },
            {}
          ]
        },
        {},
        [10]
      )(10);
    },
    94216: function (w, S, C) {
      w = C.nmd(w);
      var I,
        $ = '__lodash_hash_undefined__',
        er = '[object Arguments]',
        en = '[object Function]',
        ei = '[object Object]',
        eo = /^\[object .+?Constructor\]$/,
        es = /^(?:0|[1-9]\d*)$/,
        el = {};
      (el['[object Float32Array]'] =
        el['[object Float64Array]'] =
        el['[object Int8Array]'] =
        el['[object Int16Array]'] =
        el['[object Int32Array]'] =
        el['[object Uint8Array]'] =
        el['[object Uint8ClampedArray]'] =
        el['[object Uint16Array]'] =
        el['[object Uint32Array]'] =
          !0),
        (el[er] =
          el['[object Array]'] =
          el['[object ArrayBuffer]'] =
          el['[object Boolean]'] =
          el['[object DataView]'] =
          el['[object Date]'] =
          el['[object Error]'] =
          el[en] =
          el['[object Map]'] =
          el['[object Number]'] =
          el[ei] =
          el['[object RegExp]'] =
          el['[object Set]'] =
          el['[object String]'] =
          el['[object WeakMap]'] =
            !1);
      var ec = 'object' == typeof C.g && C.g && C.g.Object === Object && C.g,
        eu = 'object' == typeof self && self && self.Object === Object && self,
        ed = ec || eu || Function('return this')(),
        eh = S && !S.nodeType && S,
        ef = eh && w && !w.nodeType && w,
        ep = ef && ef.exports === eh,
        em = ep && ec.process,
        eg = (function () {
          try {
            var w = ef && ef.require && ef.require('util').types;
            if (w) return w;
            return em && em.binding && em.binding('util');
          } catch (w) {}
        })(),
        ey = eg && eg.isTypedArray;
      function apply(w, S, C) {
        switch (C.length) {
          case 0:
            return w.call(S);
          case 1:
            return w.call(S, C[0]);
          case 2:
            return w.call(S, C[0], C[1]);
          case 3:
            return w.call(S, C[0], C[1], C[2]);
        }
        return w.apply(S, C);
      }
      function baseTimes(w, S) {
        for (var C = -1, I = Array(w); ++C < w; ) I[C] = S(C);
        return I;
      }
      function baseUnary(w) {
        return function (S) {
          return w(S);
        };
      }
      function getValue(w, S) {
        return null == w ? void 0 : w[S];
      }
      function overArg(w, S) {
        return function (C) {
          return w(S(C));
        };
      }
      var ev = Array.prototype,
        eb = Function.prototype,
        e_ = Object.prototype,
        ex = ed['__core-js_shared__'],
        ew = eb.toString,
        ek = e_.hasOwnProperty,
        eS = (I = /[^.]+$/.exec((ex && ex.keys && ex.keys.IE_PROTO) || '')) ? 'Symbol(src)_1.' + I : '',
        eC = e_.toString,
        eP = ew.call(Object),
        eA = RegExp(
          '^' +
            ew
              .call(ek)
              .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
              .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') +
            '$'
        ),
        eT = ep ? ed.Buffer : void 0,
        eE = ed.Symbol,
        ez = ed.Uint8Array,
        eI = eT ? eT.allocUnsafe : void 0,
        eB = overArg(Object.getPrototypeOf, Object),
        eR = Object.create,
        eO = e_.propertyIsEnumerable,
        eM = ev.splice,
        eD = eE ? eE.toStringTag : void 0,
        ej = (function () {
          try {
            var w = getNative(Object, 'defineProperty');
            return w({}, '', {}), w;
          } catch (w) {}
        })(),
        eL = eT ? eT.isBuffer : void 0,
        eF = Math.max,
        eV = Date.now,
        eN = getNative(ed, 'Map'),
        eU = getNative(Object, 'create'),
        e$ = (function () {
          function object() {}
          return function (w) {
            if (!isObject(w)) return {};
            if (eR) return eR(w);
            object.prototype = w;
            var S = new object();
            return (object.prototype = void 0), S;
          };
        })();
      function Hash(w) {
        var S = -1,
          C = null == w ? 0 : w.length;
        for (this.clear(); ++S < C; ) {
          var I = w[S];
          this.set(I[0], I[1]);
        }
      }
      function hashClear() {
        (this.__data__ = eU ? eU(null) : {}), (this.size = 0);
      }
      function hashDelete(w) {
        var S = this.has(w) && delete this.__data__[w];
        return (this.size -= S ? 1 : 0), S;
      }
      function hashGet(w) {
        var S = this.__data__;
        if (eU) {
          var C = S[w];
          return C === $ ? void 0 : C;
        }
        return ek.call(S, w) ? S[w] : void 0;
      }
      function hashHas(w) {
        var S = this.__data__;
        return eU ? void 0 !== S[w] : ek.call(S, w);
      }
      function hashSet(w, S) {
        var C = this.__data__;
        return (this.size += this.has(w) ? 0 : 1), (C[w] = eU && void 0 === S ? $ : S), this;
      }
      function ListCache(w) {
        var S = -1,
          C = null == w ? 0 : w.length;
        for (this.clear(); ++S < C; ) {
          var I = w[S];
          this.set(I[0], I[1]);
        }
      }
      function listCacheClear() {
        (this.__data__ = []), (this.size = 0);
      }
      function listCacheDelete(w) {
        var S = this.__data__,
          C = assocIndexOf(S, w);
        return !(C < 0) && (C == S.length - 1 ? S.pop() : eM.call(S, C, 1), --this.size, !0);
      }
      function listCacheGet(w) {
        var S = this.__data__,
          C = assocIndexOf(S, w);
        return C < 0 ? void 0 : S[C][1];
      }
      function listCacheHas(w) {
        return assocIndexOf(this.__data__, w) > -1;
      }
      function listCacheSet(w, S) {
        var C = this.__data__,
          I = assocIndexOf(C, w);
        return I < 0 ? (++this.size, C.push([w, S])) : (C[I][1] = S), this;
      }
      function MapCache(w) {
        var S = -1,
          C = null == w ? 0 : w.length;
        for (this.clear(); ++S < C; ) {
          var I = w[S];
          this.set(I[0], I[1]);
        }
      }
      function mapCacheClear() {
        (this.size = 0), (this.__data__ = { hash: new Hash(), map: new (eN || ListCache)(), string: new Hash() });
      }
      function mapCacheDelete(w) {
        var S = getMapData(this, w).delete(w);
        return (this.size -= S ? 1 : 0), S;
      }
      function mapCacheGet(w) {
        return getMapData(this, w).get(w);
      }
      function mapCacheHas(w) {
        return getMapData(this, w).has(w);
      }
      function mapCacheSet(w, S) {
        var C = getMapData(this, w),
          I = C.size;
        return C.set(w, S), (this.size += C.size == I ? 0 : 1), this;
      }
      function Stack(w) {
        var S = (this.__data__ = new ListCache(w));
        this.size = S.size;
      }
      function stackClear() {
        (this.__data__ = new ListCache()), (this.size = 0);
      }
      function stackDelete(w) {
        var S = this.__data__,
          C = S.delete(w);
        return (this.size = S.size), C;
      }
      function stackGet(w) {
        return this.__data__.get(w);
      }
      function stackHas(w) {
        return this.__data__.has(w);
      }
      function stackSet(w, S) {
        var C = this.__data__;
        if (C instanceof ListCache) {
          var I = C.__data__;
          if (!eN || I.length < 199) return I.push([w, S]), (this.size = ++C.size), this;
          C = this.__data__ = new MapCache(I);
        }
        return C.set(w, S), (this.size = C.size), this;
      }
      function arrayLikeKeys(w, S) {
        var C = eZ(w),
          I = !C && eH(w),
          $ = !C && !I && eY(w),
          er = !C && !I && !$ && eK(w),
          en = C || I || $ || er,
          ei = en ? baseTimes(w.length, String) : [],
          eo = ei.length;
        for (var es in w)
          (S || ek.call(w, es)) &&
            !(
              en &&
              ('length' == es ||
                ($ && ('offset' == es || 'parent' == es)) ||
                (er && ('buffer' == es || 'byteLength' == es || 'byteOffset' == es)) ||
                isIndex(es, eo))
            ) &&
            ei.push(es);
        return ei;
      }
      function assignMergeValue(w, S, C) {
        ((void 0 === C || eq(w[S], C)) && (void 0 !== C || S in w)) || baseAssignValue(w, S, C);
      }
      function assignValue(w, S, C) {
        var I = w[S];
        (ek.call(w, S) && eq(I, C) && (void 0 !== C || S in w)) || baseAssignValue(w, S, C);
      }
      function assocIndexOf(w, S) {
        for (var C = w.length; C--; ) if (eq(w[C][0], S)) return C;
        return -1;
      }
      function baseAssignValue(w, S, C) {
        '__proto__' == S && ej ? ej(w, S, { configurable: !0, enumerable: !0, value: C, writable: !0 }) : (w[S] = C);
      }
      (Hash.prototype.clear = hashClear),
        (Hash.prototype.delete = hashDelete),
        (Hash.prototype.get = hashGet),
        (Hash.prototype.has = hashHas),
        (Hash.prototype.set = hashSet),
        (ListCache.prototype.clear = listCacheClear),
        (ListCache.prototype.delete = listCacheDelete),
        (ListCache.prototype.get = listCacheGet),
        (ListCache.prototype.has = listCacheHas),
        (ListCache.prototype.set = listCacheSet),
        (MapCache.prototype.clear = mapCacheClear),
        (MapCache.prototype.delete = mapCacheDelete),
        (MapCache.prototype.get = mapCacheGet),
        (MapCache.prototype.has = mapCacheHas),
        (MapCache.prototype.set = mapCacheSet),
        (Stack.prototype.clear = stackClear),
        (Stack.prototype.delete = stackDelete),
        (Stack.prototype.get = stackGet),
        (Stack.prototype.has = stackHas),
        (Stack.prototype.set = stackSet);
      var eW = createBaseFor();
      function baseGetTag(w) {
        return null == w
          ? void 0 === w
            ? '[object Undefined]'
            : '[object Null]'
          : eD && eD in Object(w)
          ? getRawTag(w)
          : objectToString(w);
      }
      function baseIsArguments(w) {
        return isObjectLike(w) && baseGetTag(w) == er;
      }
      function baseIsNative(w) {
        return !(!isObject(w) || isMasked(w)) && (isFunction(w) ? eA : eo).test(toSource(w));
      }
      function baseIsTypedArray(w) {
        return isObjectLike(w) && isLength(w.length) && !!el[baseGetTag(w)];
      }
      function baseKeysIn(w) {
        if (!isObject(w)) return nativeKeysIn(w);
        var S = isPrototype(w),
          C = [];
        for (var I in w) ('constructor' == I && (S || !ek.call(w, I))) || C.push(I);
        return C;
      }
      function baseMerge(w, S, C, I, $) {
        w !== S &&
          eW(
            S,
            function (er, en) {
              if (($ || ($ = new Stack()), isObject(er))) baseMergeDeep(w, S, en, C, baseMerge, I, $);
              else {
                var ei = I ? I(safeGet(w, en), er, en + '', w, S, $) : void 0;
                void 0 === ei && (ei = er), assignMergeValue(w, en, ei);
              }
            },
            keysIn
          );
      }
      function baseMergeDeep(w, S, C, I, $, er, en) {
        var ei = safeGet(w, C),
          eo = safeGet(S, C),
          es = en.get(eo);
        if (es) {
          assignMergeValue(w, C, es);
          return;
        }
        var el = er ? er(ei, eo, C + '', w, S, en) : void 0,
          ec = void 0 === el;
        if (ec) {
          var eu = eZ(eo),
            ed = !eu && eY(eo),
            eh = !eu && !ed && eK(eo);
          (el = eo),
            eu || ed || eh
              ? eZ(ei)
                ? (el = ei)
                : isArrayLikeObject(ei)
                ? (el = copyArray(ei))
                : ed
                ? ((ec = !1), (el = cloneBuffer(eo, !0)))
                : eh
                ? ((ec = !1), (el = cloneTypedArray(eo, !0)))
                : (el = [])
              : isPlainObject(eo) || eH(eo)
              ? ((el = ei),
                eH(ei) ? (el = toPlainObject(ei)) : (!isObject(ei) || isFunction(ei)) && (el = initCloneObject(eo)))
              : (ec = !1);
        }
        ec && (en.set(eo, el), $(el, eo, I, er, en), en.delete(eo)), assignMergeValue(w, C, el);
      }
      function baseRest(w, S) {
        return eG(overRest(w, S, identity), w + '');
      }
      function cloneBuffer(w, S) {
        if (S) return w.slice();
        var C = w.length,
          I = eI ? eI(C) : new w.constructor(C);
        return w.copy(I), I;
      }
      function cloneArrayBuffer(w) {
        var S = new w.constructor(w.byteLength);
        return new ez(S).set(new ez(w)), S;
      }
      function cloneTypedArray(w, S) {
        var C = S ? cloneArrayBuffer(w.buffer) : w.buffer;
        return new w.constructor(C, w.byteOffset, w.length);
      }
      function copyArray(w, S) {
        var C = -1,
          I = w.length;
        for (S || (S = Array(I)); ++C < I; ) S[C] = w[C];
        return S;
      }
      function copyObject(w, S, C, I) {
        var $ = !C;
        C || (C = {});
        for (var er = -1, en = S.length; ++er < en; ) {
          var ei = S[er],
            eo = I ? I(C[ei], w[ei], ei, C, w) : void 0;
          void 0 === eo && (eo = w[ei]), $ ? baseAssignValue(C, ei, eo) : assignValue(C, ei, eo);
        }
        return C;
      }
      function createAssigner(w) {
        return baseRest(function (S, C) {
          var I = -1,
            $ = C.length,
            er = $ > 1 ? C[$ - 1] : void 0,
            en = $ > 2 ? C[2] : void 0;
          for (
            er = w.length > 3 && 'function' == typeof er ? ($--, er) : void 0,
              en && isIterateeCall(C[0], C[1], en) && ((er = $ < 3 ? void 0 : er), ($ = 1)),
              S = Object(S);
            ++I < $;

          ) {
            var ei = C[I];
            ei && w(S, ei, I, er);
          }
          return S;
        });
      }
      function createBaseFor(w) {
        return function (S, C, I) {
          for (var $ = -1, er = Object(S), en = I(S), ei = en.length; ei--; ) {
            var eo = en[w ? ei : ++$];
            if (!1 === C(er[eo], eo, er)) break;
          }
          return S;
        };
      }
      function getMapData(w, S) {
        var C = w.__data__;
        return isKeyable(S) ? C['string' == typeof S ? 'string' : 'hash'] : C.map;
      }
      function getNative(w, S) {
        var C = getValue(w, S);
        return baseIsNative(C) ? C : void 0;
      }
      function getRawTag(w) {
        var S = ek.call(w, eD),
          C = w[eD];
        try {
          w[eD] = void 0;
          var I = !0;
        } catch (w) {}
        var $ = eC.call(w);
        return I && (S ? (w[eD] = C) : delete w[eD]), $;
      }
      function initCloneObject(w) {
        return 'function' != typeof w.constructor || isPrototype(w) ? {} : e$(eB(w));
      }
      function isIndex(w, S) {
        var C = typeof w;
        return (
          !!(S = null == S ? 9007199254740991 : S) &&
          ('number' == C || ('symbol' != C && es.test(w))) &&
          w > -1 &&
          w % 1 == 0 &&
          w < S
        );
      }
      function isIterateeCall(w, S, C) {
        if (!isObject(C)) return !1;
        var I = typeof S;
        return ('number' == I ? !!(isArrayLike(C) && isIndex(S, C.length)) : 'string' == I && S in C) && eq(C[S], w);
      }
      function isKeyable(w) {
        var S = typeof w;
        return 'string' == S || 'number' == S || 'symbol' == S || 'boolean' == S ? '__proto__' !== w : null === w;
      }
      function isMasked(w) {
        return !!eS && eS in w;
      }
      function isPrototype(w) {
        var S = w && w.constructor;
        return w === (('function' == typeof S && S.prototype) || e_);
      }
      function nativeKeysIn(w) {
        var S = [];
        if (null != w) for (var C in Object(w)) S.push(C);
        return S;
      }
      function objectToString(w) {
        return eC.call(w);
      }
      function overRest(w, S, C) {
        return (
          (S = eF(void 0 === S ? w.length - 1 : S, 0)),
          function () {
            for (var I = arguments, $ = -1, er = eF(I.length - S, 0), en = Array(er); ++$ < er; ) en[$] = I[S + $];
            $ = -1;
            for (var ei = Array(S + 1); ++$ < S; ) ei[$] = I[$];
            return (ei[S] = C(en)), apply(w, this, ei);
          }
        );
      }
      function safeGet(w, S) {
        if (('constructor' !== S || 'function' != typeof w[S]) && '__proto__' != S) return w[S];
      }
      var eG = shortOut(
        ej
          ? function (w, S) {
              return ej(w, 'toString', { configurable: !0, enumerable: !1, value: constant(S), writable: !0 });
            }
          : identity
      );
      function shortOut(w) {
        var S = 0,
          C = 0;
        return function () {
          var I = eV(),
            $ = 16 - (I - C);
          if (((C = I), $ > 0)) {
            if (++S >= 800) return arguments[0];
          } else S = 0;
          return w.apply(void 0, arguments);
        };
      }
      function toSource(w) {
        if (null != w) {
          try {
            return ew.call(w);
          } catch (w) {}
          try {
            return w + '';
          } catch (w) {}
        }
        return '';
      }
      function eq(w, S) {
        return w === S || (w != w && S != S);
      }
      var eH = baseIsArguments(
          (function () {
            return arguments;
          })()
        )
          ? baseIsArguments
          : function (w) {
              return isObjectLike(w) && ek.call(w, 'callee') && !eO.call(w, 'callee');
            },
        eZ = Array.isArray;
      function isArrayLike(w) {
        return null != w && isLength(w.length) && !isFunction(w);
      }
      function isArrayLikeObject(w) {
        return isObjectLike(w) && isArrayLike(w);
      }
      var eY = eL || stubFalse;
      function isFunction(w) {
        if (!isObject(w)) return !1;
        var S = baseGetTag(w);
        return S == en || '[object GeneratorFunction]' == S || '[object AsyncFunction]' == S || '[object Proxy]' == S;
      }
      function isLength(w) {
        return 'number' == typeof w && w > -1 && w % 1 == 0 && w <= 9007199254740991;
      }
      function isObject(w) {
        var S = typeof w;
        return null != w && ('object' == S || 'function' == S);
      }
      function isObjectLike(w) {
        return null != w && 'object' == typeof w;
      }
      function isPlainObject(w) {
        if (!isObjectLike(w) || baseGetTag(w) != ei) return !1;
        var S = eB(w);
        if (null === S) return !0;
        var C = ek.call(S, 'constructor') && S.constructor;
        return 'function' == typeof C && C instanceof C && ew.call(C) == eP;
      }
      var eK = ey ? baseUnary(ey) : baseIsTypedArray;
      function toPlainObject(w) {
        return copyObject(w, keysIn(w));
      }
      function keysIn(w) {
        return isArrayLike(w) ? arrayLikeKeys(w, !0) : baseKeysIn(w);
      }
      var eX = createAssigner(function (w, S, C, I) {
        baseMerge(w, S, C, I);
      });
      function constant(w) {
        return function () {
          return w;
        };
      }
      function identity(w) {
        return w;
      }
      function stubFalse() {
        return !1;
      }
      w.exports = eX;
    },
    62601: function (w, S, C) {
      'use strict';
      var I, $;
      w.exports =
        (null == (I = C.g.process) ? void 0 : I.env) && 'object' == typeof (null == ($ = C.g.process) ? void 0 : $.env)
          ? C.g.process
          : C(58960);
    },
    31162: function (w, S, C) {
      'use strict';
      Object.defineProperty(S, '$', {
        enumerable: !0,
        get: function () {
          return createServerReference;
        }
      });
      let I = C(15231);
      function createServerReference(w) {
        let { createServerReference: S } = C(6671);
        return S(w, I.callServer);
      }
    },
    470: function (w, S) {
      'use strict';
      Symbol.for('react.server.reference');
    },
    58960: function (w) {
      !(function () {
        var S = {
            229: function (w) {
              var S,
                C,
                I,
                $ = (w.exports = {});
              function defaultSetTimout() {
                throw Error('setTimeout has not been defined');
              }
              function defaultClearTimeout() {
                throw Error('clearTimeout has not been defined');
              }
              function runTimeout(w) {
                if (S === setTimeout) return setTimeout(w, 0);
                if ((S === defaultSetTimout || !S) && setTimeout) return (S = setTimeout), setTimeout(w, 0);
                try {
                  return S(w, 0);
                } catch (C) {
                  try {
                    return S.call(null, w, 0);
                  } catch (C) {
                    return S.call(this, w, 0);
                  }
                }
              }
              function runClearTimeout(w) {
                if (C === clearTimeout) return clearTimeout(w);
                if ((C === defaultClearTimeout || !C) && clearTimeout) return (C = clearTimeout), clearTimeout(w);
                try {
                  return C(w);
                } catch (S) {
                  try {
                    return C.call(null, w);
                  } catch (S) {
                    return C.call(this, w);
                  }
                }
              }
              !(function () {
                try {
                  S = 'function' == typeof setTimeout ? setTimeout : defaultSetTimout;
                } catch (w) {
                  S = defaultSetTimout;
                }
                try {
                  C = 'function' == typeof clearTimeout ? clearTimeout : defaultClearTimeout;
                } catch (w) {
                  C = defaultClearTimeout;
                }
              })();
              var er = [],
                en = !1,
                ei = -1;
              function cleanUpNextTick() {
                en && I && ((en = !1), I.length ? (er = I.concat(er)) : (ei = -1), er.length && drainQueue());
              }
              function drainQueue() {
                if (!en) {
                  var w = runTimeout(cleanUpNextTick);
                  en = !0;
                  for (var S = er.length; S; ) {
                    for (I = er, er = []; ++ei < S; ) I && I[ei].run();
                    (ei = -1), (S = er.length);
                  }
                  (I = null), (en = !1), runClearTimeout(w);
                }
              }
              function Item(w, S) {
                (this.fun = w), (this.array = S);
              }
              function noop() {}
              ($.nextTick = function (w) {
                var S = Array(arguments.length - 1);
                if (arguments.length > 1) for (var C = 1; C < arguments.length; C++) S[C - 1] = arguments[C];
                er.push(new Item(w, S)), 1 !== er.length || en || runTimeout(drainQueue);
              }),
                (Item.prototype.run = function () {
                  this.fun.apply(null, this.array);
                }),
                ($.title = 'browser'),
                ($.browser = !0),
                ($.env = {}),
                ($.argv = []),
                ($.version = ''),
                ($.versions = {}),
                ($.on = noop),
                ($.addListener = noop),
                ($.once = noop),
                ($.off = noop),
                ($.removeListener = noop),
                ($.removeAllListeners = noop),
                ($.emit = noop),
                ($.prependListener = noop),
                ($.prependOnceListener = noop),
                ($.listeners = function (w) {
                  return [];
                }),
                ($.binding = function (w) {
                  throw Error('process.binding is not supported');
                }),
                ($.cwd = function () {
                  return '/';
                }),
                ($.chdir = function (w) {
                  throw Error('process.chdir is not supported');
                }),
                ($.umask = function () {
                  return 0;
                });
            }
          },
          C = {};
        function __nccwpck_require__(w) {
          var I = C[w];
          if (void 0 !== I) return I.exports;
          var $ = (C[w] = { exports: {} }),
            er = !0;
          try {
            S[w]($, $.exports, __nccwpck_require__), (er = !1);
          } finally {
            er && delete C[w];
          }
          return $.exports;
        }
        __nccwpck_require__.ab = '//';
        var I = __nccwpck_require__(229);
        w.exports = I;
      })();
    },
    30622: function (w, S, C) {
      'use strict';
      /**
       * @license React
       * react-jsx-runtime.production.min.js
       *
       * Copyright (c) Meta Platforms, Inc. and affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var I = C(2265),
        $ = Symbol.for('react.element'),
        er = Symbol.for('react.fragment'),
        en = Object.prototype.hasOwnProperty,
        ei = I.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
        eo = { key: !0, ref: !0, __self: !0, __source: !0 };
      function q(w, S, C) {
        var I,
          er = {},
          es = null,
          el = null;
        for (I in (void 0 !== C && (es = '' + C),
        void 0 !== S.key && (es = '' + S.key),
        void 0 !== S.ref && (el = S.ref),
        S))
          en.call(S, I) && !eo.hasOwnProperty(I) && (er[I] = S[I]);
        if (w && w.defaultProps) for (I in (S = w.defaultProps)) void 0 === er[I] && (er[I] = S[I]);
        return { $$typeof: $, type: w, key: es, ref: el, props: er, _owner: ei.current };
      }
      (S.Fragment = er), (S.jsx = q), (S.jsxs = q);
    },
    57437: function (w, S, C) {
      'use strict';
      w.exports = C(30622);
    },
    763: function (w, S, C) {
      'use strict';
      C.d(S, {
        dn: function () {
          return tP;
        },
        Z1: function () {
          return tI;
        },
        cL: function () {
          return tB;
        }
      });
      var I,
        $,
        er,
        en,
        ei,
        eo,
        es,
        __assign = function () {
          return (__assign =
            Object.assign ||
            function (w) {
              for (var S, C = 1, I = arguments.length; C < I; C++)
                for (var $ in (S = arguments[C])) Object.prototype.hasOwnProperty.call(S, $) && (w[$] = S[$]);
              return w;
            }).apply(this, arguments);
        };
      function __spreadArray(w, S, C) {
        if (C || 2 == arguments.length)
          for (var I, $ = 0, er = S.length; $ < er; $++)
            (!I && $ in S) || (I || (I = Array.prototype.slice.call(S, 0, $)), (I[$] = S[$]));
        return w.concat(I || Array.prototype.slice.call(S));
      }
      'function' == typeof SuppressedError && SuppressedError;
      var el = C(2265),
        ec = C(75733),
        eu = C.n(ec),
        ed = '-ms-',
        eh = '-moz-',
        ef = '-webkit-',
        ep = 'comm',
        em = 'rule',
        eg = 'decl',
        ey = '@keyframes',
        ev = Math.abs,
        eb = String.fromCharCode,
        e_ = Object.assign;
      function hash(w, S) {
        return 45 ^ Utility_charat(w, 0)
          ? (((((((S << 2) ^ Utility_charat(w, 0)) << 2) ^ Utility_charat(w, 1)) << 2) ^ Utility_charat(w, 2)) << 2) ^
              Utility_charat(w, 3)
          : 0;
      }
      function match(w, S) {
        return (w = S.exec(w)) ? w[0] : w;
      }
      function replace(w, S, C) {
        return w.replace(S, C);
      }
      function indexof(w, S) {
        return w.indexOf(S);
      }
      function Utility_charat(w, S) {
        return 0 | w.charCodeAt(S);
      }
      function Utility_substr(w, S, C) {
        return w.slice(S, C);
      }
      function Utility_strlen(w) {
        return w.length;
      }
      function Utility_append(w, S) {
        return S.push(w), w;
      }
      function Utility_combine(w, S) {
        return w.map(S).join('');
      }
      function filter(w, S) {
        return w.filter(function (w) {
          return !match(w, S);
        });
      }
      var ex = 1,
        ew = 1,
        ek = 0,
        eS = 0,
        eC = 0,
        eP = '';
      function node(w, S, C, I, $, er, en, ei) {
        return {
          value: w,
          root: S,
          parent: C,
          type: I,
          props: $,
          children: er,
          line: ex,
          column: ew,
          length: en,
          return: '',
          siblings: ei
        };
      }
      function copy(w, S) {
        return e_(node('', null, null, '', null, null, 0, w.siblings), w, { length: -w.length }, S);
      }
      function lift(w) {
        for (; w.root; ) w = copy(w.root, { children: [w] });
        Utility_append(w, w.siblings);
      }
      function Tokenizer_char() {
        return eC;
      }
      function prev() {
        return (eC = eS > 0 ? Utility_charat(eP, --eS) : 0), ew--, 10 === eC && ((ew = 1), ex--), eC;
      }
      function next() {
        return (eC = eS < ek ? Utility_charat(eP, eS++) : 0), ew++, 10 === eC && ((ew = 1), ex++), eC;
      }
      function peek() {
        return Utility_charat(eP, eS);
      }
      function token(w) {
        switch (w) {
          case 0:
          case 9:
          case 10:
          case 13:
          case 32:
            return 5;
          case 33:
          case 43:
          case 44:
          case 47:
          case 62:
          case 64:
          case 126:
          case 59:
          case 123:
          case 125:
            return 4;
          case 58:
            return 3;
          case 34:
          case 39:
          case 40:
          case 91:
            return 2;
          case 41:
          case 93:
            return 1;
        }
        return 0;
      }
      function alloc(w) {
        return (ex = ew = 1), (ek = Utility_strlen((eP = w))), (eS = 0), [];
      }
      function dealloc(w) {
        return (eP = ''), w;
      }
      function delimit(w) {
        var S, C;
        return ((S = eS - 1),
        (C = delimiter(91 === w ? w + 2 : 40 === w ? w + 1 : w)),
        Utility_substr(eP, S, C)).trim();
      }
      function whitespace(w) {
        for (; (eC = peek()); )
          if (eC < 33) next();
          else break;
        return token(w) > 2 || token(eC) > 3 ? '' : ' ';
      }
      function escaping(w, S) {
        for (
          var C;
          --S && next() && !(eC < 48) && !(eC > 102) && (!(eC > 57) || !(eC < 65)) && (!(eC > 70) || !(eC < 97));

        );
        return (C = eS + (S < 6 && 32 == peek() && 32 == next())), Utility_substr(eP, w, C);
      }
      function delimiter(w) {
        for (; next(); )
          switch (eC) {
            case w:
              return eS;
            case 34:
            case 39:
              34 !== w && 39 !== w && delimiter(eC);
              break;
            case 40:
              41 === w && delimiter(w);
              break;
            case 92:
              next();
          }
        return eS;
      }
      function commenter(w, S) {
        for (; next(); )
          if (w + eC === 57) break;
          else if (w + eC === 84 && 47 === peek()) break;
        return '/*' + Utility_substr(eP, S, eS - 1) + '*' + eb(47 === w ? w : next());
      }
      function identifier(w) {
        for (; !token(peek()); ) next();
        return Utility_substr(eP, w, eS);
      }
      function serialize(w, S) {
        for (var C = '', I = 0; I < w.length; I++) C += S(w[I], I, w, S) || '';
        return C;
      }
      function stringify(w, S, C, I) {
        switch (w.type) {
          case '@layer':
            if (w.children.length) break;
          case '@import':
          case eg:
            return (w.return = w.return || w.value);
          case ep:
            return '';
          case ey:
            return (w.return = w.value + '{' + serialize(w.children, I) + '}');
          case em:
            if (!Utility_strlen((w.value = w.props.join(',')))) return '';
        }
        return Utility_strlen((C = serialize(w.children, I))) ? (w.return = w.value + '{' + C + '}') : '';
      }
      function prefix(w, S, C) {
        switch (hash(w, S)) {
          case 5103:
            return ef + 'print-' + w + w;
          case 5737:
          case 4201:
          case 3177:
          case 3433:
          case 1641:
          case 4457:
          case 2921:
          case 5572:
          case 6356:
          case 5844:
          case 3191:
          case 6645:
          case 3005:
          case 6391:
          case 5879:
          case 5623:
          case 6135:
          case 4599:
          case 4855:
          case 4215:
          case 6389:
          case 5109:
          case 5365:
          case 5621:
          case 3829:
            return ef + w + w;
          case 4789:
            return eh + w + w;
          case 5349:
          case 4246:
          case 4810:
          case 6968:
          case 2756:
            return ef + w + eh + w + ed + w + w;
          case 5936:
            switch (Utility_charat(w, S + 11)) {
              case 114:
                return ef + w + ed + replace(w, /[svh]\w+-[tblr]{2}/, 'tb') + w;
              case 108:
                return ef + w + ed + replace(w, /[svh]\w+-[tblr]{2}/, 'tb-rl') + w;
              case 45:
                return ef + w + ed + replace(w, /[svh]\w+-[tblr]{2}/, 'lr') + w;
            }
          case 6828:
          case 4268:
          case 2903:
            return ef + w + ed + w + w;
          case 6165:
            return ef + w + ed + 'flex-' + w + w;
          case 5187:
            return ef + w + replace(w, /(\w+).+(:[^]+)/, ef + 'box-$1$2' + ed + 'flex-$1$2') + w;
          case 5443:
            return (
              ef +
              w +
              ed +
              'flex-item-' +
              replace(w, /flex-|-self/g, '') +
              (match(w, /flex-|baseline/) ? '' : ed + 'grid-row-' + replace(w, /flex-|-self/g, '')) +
              w
            );
          case 4675:
            return ef + w + ed + 'flex-line-pack' + replace(w, /align-content|flex-|-self/g, '') + w;
          case 5548:
            return ef + w + ed + replace(w, 'shrink', 'negative') + w;
          case 5292:
            return ef + w + ed + replace(w, 'basis', 'preferred-size') + w;
          case 6060:
            return ef + 'box-' + replace(w, '-grow', '') + ef + w + ed + replace(w, 'grow', 'positive') + w;
          case 4554:
            return ef + replace(w, /([^-])(transform)/g, '$1' + ef + '$2') + w;
          case 6187:
            return replace(replace(replace(w, /(zoom-|grab)/, ef + '$1'), /(image-set)/, ef + '$1'), w, '') + w;
          case 5495:
          case 3959:
            return replace(w, /(image-set\([^]*)/, ef + '$1$`$1');
          case 4968:
            return (
              replace(
                replace(w, /(.+:)(flex-)?(.*)/, ef + 'box-pack:$3' + ed + 'flex-pack:$3'),
                /s.+-b[^;]+/,
                'justify'
              ) +
              ef +
              w +
              w
            );
          case 4200:
            if (!match(w, /flex-|baseline/)) return ed + 'grid-column-align' + Utility_substr(w, S) + w;
            break;
          case 2592:
          case 3360:
            return ed + replace(w, 'template-', '') + w;
          case 4384:
          case 3616:
            if (
              C &&
              C.some(function (w, C) {
                return (S = C), match(w.props, /grid-\w+-end/);
              })
            )
              return ~indexof(w + (C = C[S].value), 'span')
                ? w
                : ed +
                    replace(w, '-start', '') +
                    w +
                    ed +
                    'grid-row-span:' +
                    (~indexof(C, 'span') ? match(C, /\d+/) : +match(C, /\d+/) - +match(w, /\d+/)) +
                    ';';
            return ed + replace(w, '-start', '') + w;
          case 4896:
          case 4128:
            return C &&
              C.some(function (w) {
                return match(w.props, /grid-\w+-start/);
              })
              ? w
              : ed + replace(replace(w, '-end', '-span'), 'span ', '') + w;
          case 4095:
          case 3583:
          case 4068:
          case 2532:
            return replace(w, /(.+)-inline(.+)/, ef + '$1$2') + w;
          case 8116:
          case 7059:
          case 5753:
          case 5535:
          case 5445:
          case 5701:
          case 4933:
          case 4677:
          case 5533:
          case 5789:
          case 5021:
          case 4765:
            if (Utility_strlen(w) - 1 - S > 6)
              switch (Utility_charat(w, S + 1)) {
                case 109:
                  if (45 !== Utility_charat(w, S + 4)) break;
                case 102:
                  return (
                    replace(
                      w,
                      /(.+:)(.+)-([^]+)/,
                      '$1' + ef + '$2-$3$1' + eh + (108 == Utility_charat(w, S + 3) ? '$3' : '$2-$3')
                    ) + w
                  );
                case 115:
                  return ~indexof(w, 'stretch') ? prefix(replace(w, 'stretch', 'fill-available'), S, C) + w : w;
              }
            break;
          case 5152:
          case 5920:
            return replace(w, /(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/, function (S, C, I, $, er, en, ei) {
              return ed + C + ':' + I + ei + ($ ? ed + C + '-span:' + (er ? en : +en - +I) + ei : '') + w;
            });
          case 4949:
            if (121 === Utility_charat(w, S + 6)) return replace(w, ':', ':' + ef) + w;
            break;
          case 6444:
            switch (Utility_charat(w, 45 === Utility_charat(w, 14) ? 18 : 11)) {
              case 120:
                return (
                  replace(
                    w,
                    /(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,
                    '$1' +
                      ef +
                      (45 === Utility_charat(w, 14) ? 'inline-' : '') +
                      'box$3$1' +
                      ef +
                      '$2$3$1' +
                      ed +
                      '$2box$3'
                  ) + w
                );
              case 100:
                return replace(w, ':', ':' + ed) + w;
            }
            break;
          case 5719:
          case 2647:
          case 2135:
          case 3927:
          case 2391:
            return replace(w, 'scroll-', 'scroll-snap-') + w;
        }
        return w;
      }
      function middleware(w) {
        var S = w.length;
        return function (C, I, $, er) {
          for (var en = '', ei = 0; ei < S; ei++) en += w[ei](C, I, $, er) || '';
          return en;
        };
      }
      function rulesheet(w) {
        return function (S) {
          !S.root && (S = S.return) && w(S);
        };
      }
      function prefixer(w, S, C, I) {
        if (w.length > -1 && !w.return)
          switch (w.type) {
            case eg:
              w.return = prefix(w.value, w.length, C);
              return;
            case ey:
              return serialize([copy(w, { value: replace(w.value, '@', '@' + ef) })], I);
            case em:
              if (w.length)
                return Utility_combine((C = w.props), function (S) {
                  switch (match(S, (I = /(::plac\w+|:read-\w+)/))) {
                    case ':read-only':
                    case ':read-write':
                      lift(copy(w, { props: [replace(S, /:(read-\w+)/, ':' + eh + '$1')] })),
                        lift(copy(w, { props: [S] })),
                        e_(w, { props: filter(C, I) });
                      break;
                    case '::placeholder':
                      lift(copy(w, { props: [replace(S, /:(plac\w+)/, ':' + ef + 'input-$1')] })),
                        lift(copy(w, { props: [replace(S, /:(plac\w+)/, ':' + eh + '$1')] })),
                        lift(copy(w, { props: [replace(S, /:(plac\w+)/, ed + 'input-$1')] })),
                        lift(copy(w, { props: [S] })),
                        e_(w, { props: filter(C, I) });
                  }
                  return '';
                });
          }
      }
      function compile(w) {
        return dealloc(parse('', null, null, null, [''], (w = alloc(w)), 0, [0], w));
      }
      function parse(w, S, C, I, $, er, en, ei, eo) {
        for (
          var es = 0,
            el = 0,
            ec = en,
            eu = 0,
            ed = 0,
            eh = 0,
            ef = 1,
            ep = 1,
            em = 1,
            eg = 0,
            ey = '',
            ev = $,
            e_ = er,
            ex = I,
            ew = ey;
          ep;

        )
          switch (((eh = eg), (eg = next()))) {
            case 40:
              if (108 != eh && 58 == Utility_charat(ew, ec - 1)) {
                -1 != indexof((ew += replace(delimit(eg), '&', '&\f')), '&\f') && (em = -1);
                break;
              }
            case 34:
            case 39:
            case 91:
              ew += delimit(eg);
              break;
            case 9:
            case 10:
            case 13:
            case 32:
              ew += whitespace(eh);
              break;
            case 92:
              ew += escaping(eS - 1, 7);
              continue;
            case 47:
              switch (peek()) {
                case 42:
                case 47:
                  Utility_append(comment(commenter(next(), eS), S, C, eo), eo);
                  break;
                default:
                  ew += '/';
              }
              break;
            case 123 * ef:
              ei[es++] = Utility_strlen(ew) * em;
            case 125 * ef:
            case 59:
            case 0:
              switch (eg) {
                case 0:
                case 125:
                  ep = 0;
                case 59 + el:
                  -1 == em && (ew = replace(ew, /\f/g, '')),
                    ed > 0 &&
                      Utility_strlen(ew) - ec &&
                      Utility_append(
                        ed > 32
                          ? declaration(ew + ';', I, C, ec - 1, eo)
                          : declaration(replace(ew, ' ', '') + ';', I, C, ec - 2, eo),
                        eo
                      );
                  break;
                case 59:
                  ew += ';';
                default:
                  if (
                    (Utility_append((ex = ruleset(ew, S, C, es, el, $, ei, ey, (ev = []), (e_ = []), ec, er)), er),
                    123 === eg)
                  ) {
                    if (0 === el) parse(ew, S, ex, ex, ev, er, ec, ei, e_);
                    else
                      switch (99 === eu && 110 === Utility_charat(ew, 3) ? 100 : eu) {
                        case 100:
                        case 108:
                        case 109:
                        case 115:
                          parse(
                            w,
                            ex,
                            ex,
                            I && Utility_append(ruleset(w, ex, ex, 0, 0, $, ei, ey, $, (ev = []), ec, e_), e_),
                            $,
                            e_,
                            ec,
                            ei,
                            I ? ev : e_
                          );
                          break;
                        default:
                          parse(ew, ex, ex, ex, [''], e_, 0, ei, e_);
                      }
                  }
              }
              (es = el = ed = 0), (ef = em = 1), (ey = ew = ''), (ec = en);
              break;
            case 58:
              (ec = 1 + Utility_strlen(ew)), (ed = eh);
            default:
              if (ef < 1) {
                if (123 == eg) --ef;
                else if (125 == eg && 0 == ef++ && 125 == prev()) continue;
              }
              switch (((ew += eb(eg)), eg * ef)) {
                case 38:
                  em = el > 0 ? 1 : ((ew += '\f'), -1);
                  break;
                case 44:
                  (ei[es++] = (Utility_strlen(ew) - 1) * em), (em = 1);
                  break;
                case 64:
                  45 === peek() && (ew += delimit(next())),
                    (eu = peek()),
                    (el = ec = Utility_strlen((ey = ew += identifier(eS)))),
                    eg++;
                  break;
                case 45:
                  45 === eh && 2 == Utility_strlen(ew) && (ef = 0);
              }
          }
        return er;
      }
      function ruleset(w, S, C, I, $, er, en, ei, eo, es, el, ec) {
        for (var eu = $ - 1, ed = 0 === $ ? er : [''], eh = ed.length, ef = 0, ep = 0, eg = 0; ef < I; ++ef)
          for (var ey = 0, eb = Utility_substr(w, eu + 1, (eu = ev((ep = en[ef])))), e_ = w; ey < eh; ++ey)
            (e_ = (ep > 0 ? ed[ey] + ' ' + eb : replace(eb, /&\f/g, ed[ey])).trim()) && (eo[eg++] = e_);
        return node(w, S, C, 0 === $ ? em : ei, eo, es, el, ec);
      }
      function comment(w, S, C, I) {
        return node(w, S, C, ep, eb(Tokenizer_char()), Utility_substr(w, 2, -2), 0, I);
      }
      function declaration(w, S, C, I, $) {
        return node(w, S, C, eg, Utility_substr(w, 0, I), Utility_substr(w, I + 1, -1), I, $);
      }
      var eA = C(7015),
        eT = C(62601),
        eE = (void 0 !== eT && void 0 !== eT.env && (eT.env.REACT_APP_SC_ATTR || eT.env.SC_ATTR)) || 'data-styled',
        ez = 'undefined' != typeof window && 'HTMLElement' in window,
        eI = !!('boolean' == typeof SC_DISABLE_SPEEDY
          ? SC_DISABLE_SPEEDY
          : void 0 !== eT &&
            void 0 !== eT.env &&
            void 0 !== eT.env.REACT_APP_SC_DISABLE_SPEEDY &&
            '' !== eT.env.REACT_APP_SC_DISABLE_SPEEDY
          ? 'false' !== eT.env.REACT_APP_SC_DISABLE_SPEEDY && eT.env.REACT_APP_SC_DISABLE_SPEEDY
          : void 0 !== eT &&
            void 0 !== eT.env &&
            void 0 !== eT.env.SC_DISABLE_SPEEDY &&
            '' !== eT.env.SC_DISABLE_SPEEDY &&
            'false' !== eT.env.SC_DISABLE_SPEEDY &&
            eT.env.SC_DISABLE_SPEEDY),
        eB = Object.freeze([]),
        eR = Object.freeze({});
      function P(w, S, C) {
        return void 0 === C && (C = eR), (w.theme !== C.theme && w.theme) || S || C.theme;
      }
      var eO = new Set([
          'a',
          'abbr',
          'address',
          'area',
          'article',
          'aside',
          'audio',
          'b',
          'base',
          'bdi',
          'bdo',
          'big',
          'blockquote',
          'body',
          'br',
          'button',
          'canvas',
          'caption',
          'cite',
          'code',
          'col',
          'colgroup',
          'data',
          'datalist',
          'dd',
          'del',
          'details',
          'dfn',
          'dialog',
          'div',
          'dl',
          'dt',
          'em',
          'embed',
          'fieldset',
          'figcaption',
          'figure',
          'footer',
          'form',
          'h1',
          'h2',
          'h3',
          'h4',
          'h5',
          'h6',
          'header',
          'hgroup',
          'hr',
          'html',
          'i',
          'iframe',
          'img',
          'input',
          'ins',
          'kbd',
          'keygen',
          'label',
          'legend',
          'li',
          'link',
          'main',
          'map',
          'mark',
          'menu',
          'menuitem',
          'meta',
          'meter',
          'nav',
          'noscript',
          'object',
          'ol',
          'optgroup',
          'option',
          'output',
          'p',
          'param',
          'picture',
          'pre',
          'progress',
          'q',
          'rp',
          'rt',
          'ruby',
          's',
          'samp',
          'script',
          'section',
          'select',
          'small',
          'source',
          'span',
          'strong',
          'style',
          'sub',
          'summary',
          'sup',
          'table',
          'tbody',
          'td',
          'textarea',
          'tfoot',
          'th',
          'thead',
          'time',
          'tr',
          'track',
          'u',
          'ul',
          'use',
          'var',
          'video',
          'wbr',
          'circle',
          'clipPath',
          'defs',
          'ellipse',
          'foreignObject',
          'g',
          'image',
          'line',
          'linearGradient',
          'marker',
          'mask',
          'path',
          'pattern',
          'polygon',
          'polyline',
          'radialGradient',
          'rect',
          'stop',
          'svg',
          'text',
          'tspan'
        ]),
        eM = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
        eD = /(^-|-$)/g;
      function A(w) {
        return w.replace(eM, '-').replace(eD, '');
      }
      var ej = /(a)(d)/gi,
        D = function (w) {
          return String.fromCharCode(w + (w > 25 ? 39 : 97));
        };
      function R(w) {
        var S,
          C = '';
        for (S = Math.abs(w); S > 52; S = (S / 52) | 0) C = D(S % 52) + C;
        return (D(S % 52) + C).replace(ej, '$1-$2');
      }
      var eL,
        k = function (w, S) {
          for (var C = S.length; C; ) w = (33 * w) ^ S.charCodeAt(--C);
          return w;
        },
        j = function (w) {
          return k(5381, w);
        };
      function x(w) {
        return R(j(w) >>> 0);
      }
      function V(w) {
        return w.displayName || w.name || 'Component';
      }
      function F(w) {
        return 'string' == typeof w;
      }
      var eF = 'function' == typeof Symbol && Symbol.for,
        eV = eF ? Symbol.for('react.memo') : 60115,
        eN = eF ? Symbol.for('react.forward_ref') : 60112,
        eU = {
          childContextTypes: !0,
          contextType: !0,
          contextTypes: !0,
          defaultProps: !0,
          displayName: !0,
          getDefaultProps: !0,
          getDerivedStateFromError: !0,
          getDerivedStateFromProps: !0,
          mixins: !0,
          propTypes: !0,
          type: !0
        },
        e$ = { name: !0, length: !0, prototype: !0, caller: !0, callee: !0, arguments: !0, arity: !0 },
        eW = { $$typeof: !0, compare: !0, defaultProps: !0, displayName: !0, propTypes: !0, type: !0 },
        eG =
          (((eL = {})[eN] = { $$typeof: !0, render: !0, defaultProps: !0, displayName: !0, propTypes: !0 }),
          (eL[eV] = eW),
          eL);
      function W(w) {
        return ('type' in w && w.type.$$typeof) === eV ? eW : '$$typeof' in w ? eG[w.$$typeof] : eU;
      }
      var eH = Object.defineProperty,
        eZ = Object.getOwnPropertyNames,
        eY = Object.getOwnPropertySymbols,
        eK = Object.getOwnPropertyDescriptor,
        eX = Object.getPrototypeOf,
        eJ = Object.prototype;
      function K(w, S, C) {
        if ('string' != typeof S) {
          if (eJ) {
            var I = eX(S);
            I && I !== eJ && K(w, I, C);
          }
          var $ = eZ(S);
          eY && ($ = $.concat(eY(S)));
          for (var er = W(w), en = W(S), ei = 0; ei < $.length; ++ei) {
            var eo = $[ei];
            if (!(eo in e$ || (C && C[eo]) || (en && eo in en) || (er && eo in er))) {
              var es = eK(S, eo);
              try {
                eH(w, eo, es);
              } catch (w) {}
            }
          }
        }
        return w;
      }
      function Q(w) {
        return 'function' == typeof w;
      }
      function ee(w) {
        return 'object' == typeof w && 'styledComponentId' in w;
      }
      function te(w, S) {
        return w && S ? ''.concat(w, ' ').concat(S) : w || S || '';
      }
      function ne(w, S) {
        if (0 === w.length) return '';
        for (var C = w[0], I = 1; I < w.length; I++) C += S ? S + w[I] : w[I];
        return C;
      }
      function oe(w) {
        return (
          null !== w && 'object' == typeof w && w.constructor.name === Object.name && !('props' in w && w.$$typeof)
        );
      }
      function re(w, S, C) {
        if ((void 0 === C && (C = !1), !C && !oe(w) && !Array.isArray(w))) return S;
        if (Array.isArray(S)) for (var I = 0; I < S.length; I++) w[I] = re(w[I], S[I]);
        else if (oe(S)) for (var I in S) w[I] = re(w[I], S[I]);
        return w;
      }
      function se(w, S) {
        Object.defineProperty(w, 'toString', { value: S });
      }
      function ce(w) {
        for (var S = [], C = 1; C < arguments.length; C++) S[C - 1] = arguments[C];
        return Error(
          'An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#'
            .concat(w, ' for more information.')
            .concat(S.length > 0 ? ' Args: '.concat(S.join(', ')) : '')
        );
      }
      var eQ = (function () {
          function e(w) {
            (this.groupSizes = new Uint32Array(512)), (this.length = 512), (this.tag = w);
          }
          return (
            (e.prototype.indexOfGroup = function (w) {
              for (var S = 0, C = 0; C < w; C++) S += this.groupSizes[C];
              return S;
            }),
            (e.prototype.insertRules = function (w, S) {
              if (w >= this.groupSizes.length) {
                for (var C = this.groupSizes, I = C.length, $ = I; w >= $; )
                  if (($ <<= 1) < 0) throw ce(16, ''.concat(w));
                (this.groupSizes = new Uint32Array($)), this.groupSizes.set(C), (this.length = $);
                for (var er = I; er < $; er++) this.groupSizes[er] = 0;
              }
              for (var en = this.indexOfGroup(w + 1), ei = ((er = 0), S.length); er < ei; er++)
                this.tag.insertRule(en, S[er]) && (this.groupSizes[w]++, en++);
            }),
            (e.prototype.clearGroup = function (w) {
              if (w < this.length) {
                var S = this.groupSizes[w],
                  C = this.indexOfGroup(w),
                  I = C + S;
                this.groupSizes[w] = 0;
                for (var $ = C; $ < I; $++) this.tag.deleteRule(C);
              }
            }),
            (e.prototype.getGroup = function (w) {
              var S = '';
              if (w >= this.length || 0 === this.groupSizes[w]) return S;
              for (var C = this.groupSizes[w], I = this.indexOfGroup(w), $ = I + C, er = I; er < $; er++)
                S += ''.concat(this.tag.getRule(er)).concat('/*!sc*/\n');
              return S;
            }),
            e
          );
        })(),
        e0 = new Map(),
        e1 = new Map(),
        e2 = 1,
        he = function (w) {
          if (e0.has(w)) return e0.get(w);
          for (; e1.has(e2); ) e2++;
          var S = e2++;
          return e0.set(w, S), e1.set(S, w), S;
        },
        fe = function (w, S) {
          e0.set(w, S), e1.set(S, w);
        },
        e5 = 'style['.concat(eE, '][').concat('data-styled-version', '="').concat('6.1.0', '"]'),
        e3 = new RegExp('^'.concat(eE, '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),
        ve = function (w, S, C) {
          for (var I, $ = C.split(','), er = 0, en = $.length; er < en; er++) (I = $[er]) && w.registerName(S, I);
        },
        ge = function (w, S) {
          for (
            var C,
              I = (null !== (C = S.textContent) && void 0 !== C ? C : '').split('/*!sc*/\n'),
              $ = [],
              er = 0,
              en = I.length;
            er < en;
            er++
          ) {
            var ei = I[er].trim();
            if (ei) {
              var eo = ei.match(e3);
              if (eo) {
                var es = 0 | parseInt(eo[1], 10),
                  el = eo[2];
                0 !== es && (fe(el, es), ve(w, el, eo[3]), w.getTag().insertRules(es, $)), ($.length = 0);
              } else $.push(ei);
            }
          }
        },
        we = function (w) {
          var S,
            I = document.head,
            $ = w || I,
            er = document.createElement('style'),
            en = (S = Array.from($.querySelectorAll('style['.concat(eE, ']'))))[S.length - 1],
            ei = void 0 !== en ? en.nextSibling : null;
          er.setAttribute(eE, 'active'), er.setAttribute('data-styled-version', '6.1.0');
          var eo = C.nc;
          return eo && er.setAttribute('nonce', eo), $.insertBefore(er, ei), er;
        },
        e4 = (function () {
          function e(w) {
            (this.element = we(w)),
              this.element.appendChild(document.createTextNode('')),
              (this.sheet = (function (w) {
                if (w.sheet) return w.sheet;
                for (var S = document.styleSheets, C = 0, I = S.length; C < I; C++) {
                  var $ = S[C];
                  if ($.ownerNode === w) return $;
                }
                throw ce(17);
              })(this.element)),
              (this.length = 0);
          }
          return (
            (e.prototype.insertRule = function (w, S) {
              try {
                return this.sheet.insertRule(S, w), this.length++, !0;
              } catch (w) {
                return !1;
              }
            }),
            (e.prototype.deleteRule = function (w) {
              this.sheet.deleteRule(w), this.length--;
            }),
            (e.prototype.getRule = function (w) {
              var S = this.sheet.cssRules[w];
              return S && S.cssText ? S.cssText : '';
            }),
            e
          );
        })(),
        e6 = (function () {
          function e(w) {
            (this.element = we(w)), (this.nodes = this.element.childNodes), (this.length = 0);
          }
          return (
            (e.prototype.insertRule = function (w, S) {
              if (w <= this.length && w >= 0) {
                var C = document.createTextNode(S);
                return this.element.insertBefore(C, this.nodes[w] || null), this.length++, !0;
              }
              return !1;
            }),
            (e.prototype.deleteRule = function (w) {
              this.element.removeChild(this.nodes[w]), this.length--;
            }),
            (e.prototype.getRule = function (w) {
              return w < this.length ? this.nodes[w].textContent : '';
            }),
            e
          );
        })(),
        e8 = (function () {
          function e(w) {
            (this.rules = []), (this.length = 0);
          }
          return (
            (e.prototype.insertRule = function (w, S) {
              return w <= this.length && (this.rules.splice(w, 0, S), this.length++, !0);
            }),
            (e.prototype.deleteRule = function (w) {
              this.rules.splice(w, 1), this.length--;
            }),
            (e.prototype.getRule = function (w) {
              return w < this.length ? this.rules[w] : '';
            }),
            e
          );
        })(),
        e9 = ez,
        e7 = { isServer: !ez, useCSSOMInjection: !eI },
        tr = (function () {
          function e(w, S, C) {
            void 0 === w && (w = eR), void 0 === S && (S = {});
            var I = this;
            (this.options = __assign(__assign({}, e7), w)),
              (this.gs = S),
              (this.names = new Map(C)),
              (this.server = !!w.isServer),
              !this.server &&
                ez &&
                e9 &&
                ((e9 = !1),
                (function (w) {
                  for (var S = document.querySelectorAll(e5), C = 0, I = S.length; C < I; C++) {
                    var $ = S[C];
                    $ && 'active' !== $.getAttribute(eE) && (ge(w, $), $.parentNode && $.parentNode.removeChild($));
                  }
                })(this)),
              se(this, function () {
                return (function (w) {
                  for (var S = w.getTag(), C = S.length, I = '', $ = 0; $ < C; $++)
                    (function (C) {
                      var $ = e1.get(C);
                      if (void 0 !== $) {
                        var er = w.names.get($),
                          en = S.getGroup(C);
                        if (void 0 !== er && 0 !== en.length) {
                          var ei = ''.concat(eE, '.g').concat(C, '[id="').concat($, '"]'),
                            eo = '';
                          void 0 !== er &&
                            er.forEach(function (w) {
                              w.length > 0 && (eo += ''.concat(w, ','));
                            }),
                            (I += ''.concat(en).concat(ei, '{content:"').concat(eo, '"}').concat('/*!sc*/\n'));
                        }
                      }
                    })($);
                  return I;
                })(I);
              });
          }
          return (
            (e.registerId = function (w) {
              return he(w);
            }),
            (e.prototype.reconstructWithOptions = function (w, S) {
              return (
                void 0 === S && (S = !0),
                new e(__assign(__assign({}, this.options), w), this.gs, (S && this.names) || void 0)
              );
            }),
            (e.prototype.allocateGSInstance = function (w) {
              return (this.gs[w] = (this.gs[w] || 0) + 1);
            }),
            (e.prototype.getTag = function () {
              var w, S, C;
              return (
                this.tag ||
                (this.tag =
                  ((S = (w = this.options).useCSSOMInjection),
                  (C = w.target),
                  new eQ(w.isServer ? new e8(C) : S ? new e4(C) : new e6(C))))
              );
            }),
            (e.prototype.hasNameForId = function (w, S) {
              return this.names.has(w) && this.names.get(w).has(S);
            }),
            (e.prototype.registerName = function (w, S) {
              if ((he(w), this.names.has(w))) this.names.get(w).add(S);
              else {
                var C = new Set();
                C.add(S), this.names.set(w, C);
              }
            }),
            (e.prototype.insertRules = function (w, S, C) {
              this.registerName(w, S), this.getTag().insertRules(he(w), C);
            }),
            (e.prototype.clearNames = function (w) {
              this.names.has(w) && this.names.get(w).clear();
            }),
            (e.prototype.clearRules = function (w) {
              this.getTag().clearGroup(he(w)), this.clearNames(w);
            }),
            (e.prototype.clearTag = function () {
              this.tag = void 0;
            }),
            e
          );
        })(),
        tn = /&/g,
        ti = /^\s*\/\/.*$/gm;
      function Oe(w, S) {
        return w.map(function (w) {
          return (
            'rule' === w.type &&
              ((w.value = ''.concat(S, ' ').concat(w.value)),
              (w.value = w.value.replaceAll(',', ','.concat(S, ' '))),
              (w.props = w.props.map(function (w) {
                return ''.concat(S, ' ').concat(w);
              }))),
            Array.isArray(w.children) && '@keyframes' !== w.type && (w.children = Oe(w.children, S)),
            w
          );
        });
      }
      function De(w) {
        var S,
          C,
          I,
          $ = void 0 === w ? eR : w,
          er = $.options,
          en = void 0 === er ? eR : er,
          ei = $.plugins,
          eo = void 0 === ei ? eB : ei,
          l = function (w, I, $) {
            return $ === C || ($.startsWith(C) && $.endsWith(C) && $.replaceAll(C, '').length > 0) ? '.'.concat(S) : w;
          },
          es = eo.slice();
        es.push(function (w) {
          w.type === em && w.value.includes('&') && (w.props[0] = w.props[0].replace(tn, C).replace(I, l));
        }),
          en.prefix && es.push(prefixer),
          es.push(stringify);
        var p = function (w, $, er, ei) {
          void 0 === $ && ($ = ''),
            void 0 === er && (er = ''),
            void 0 === ei && (ei = '&'),
            (S = ei),
            (C = $),
            (I = RegExp('\\'.concat(C, '\\b'), 'g'));
          var eo = w.replace(ti, ''),
            el = compile(er || $ ? ''.concat(er, ' ').concat($, ' { ').concat(eo, ' }') : eo);
          en.namespace && (el = Oe(el, en.namespace));
          var ec = [];
          return (
            serialize(
              el,
              middleware(
                es.concat(
                  rulesheet(function (w) {
                    return ec.push(w);
                  })
                )
              )
            ),
            ec
          );
        };
        return (
          (p.hash = eo.length
            ? eo
                .reduce(function (w, S) {
                  return S.name || ce(15), k(w, S.name);
                }, 5381)
                .toString()
            : ''),
          p
        );
      }
      var ta = new tr(),
        to = De(),
        ts = el.createContext({ shouldForwardProp: void 0, styleSheet: ta, stylis: to }),
        tl = (ts.Consumer, el.createContext(void 0));
      function Ve() {
        return (0, el.useContext)(ts);
      }
      function Fe(w) {
        var S = (0, el.useState)(w.stylisPlugins),
          C = S[0],
          I = S[1],
          $ = Ve().styleSheet,
          er = (0, el.useMemo)(
            function () {
              var S = $;
              return (
                w.sheet ? (S = w.sheet) : w.target && (S = S.reconstructWithOptions({ target: w.target }, !1)),
                w.disableCSSOMInjection && (S = S.reconstructWithOptions({ useCSSOMInjection: !1 })),
                S
              );
            },
            [w.disableCSSOMInjection, w.sheet, w.target, $]
          ),
          en = (0, el.useMemo)(
            function () {
              return De({ options: { namespace: w.namespace, prefix: w.enableVendorPrefixes }, plugins: C });
            },
            [w.enableVendorPrefixes, w.namespace, C]
          );
        (0, el.useEffect)(
          function () {
            eu()(C, w.stylisPlugins) || I(w.stylisPlugins);
          },
          [w.stylisPlugins]
        );
        var ei = (0, el.useMemo)(
          function () {
            return { shouldForwardProp: w.shouldForwardProp, styleSheet: er, stylis: en };
          },
          [w.shouldForwardProp, er, en]
        );
        return el.createElement(ts.Provider, { value: ei }, el.createElement(tl.Provider, { value: en }, w.children));
      }
      var tc = (function () {
        function e(w, S) {
          var C = this;
          (this.inject = function (w, S) {
            void 0 === S && (S = to);
            var I = C.name + S.hash;
            w.hasNameForId(C.id, I) || w.insertRules(C.id, I, S(C.rules, I, '@keyframes'));
          }),
            (this.name = w),
            (this.id = 'sc-keyframes-'.concat(w)),
            (this.rules = S),
            se(this, function () {
              throw ce(12, String(C.name));
            });
        }
        return (
          (e.prototype.getName = function (w) {
            return void 0 === w && (w = to), this.name + w.hash;
          }),
          e
        );
      })();
      function ze(w) {
        for (var S = '', C = 0; C < w.length; C++) {
          var I = w[C];
          if (1 === C && '-' === I && '-' === w[0]) return w;
          I >= 'A' && I <= 'Z' ? (S += '-' + I.toLowerCase()) : (S += I);
        }
        return S.startsWith('ms-') ? '-' + S : S;
      }
      var Be = function (w) {
          return null == w || !1 === w || '' === w;
        },
        Le = function (w) {
          var S = [];
          for (var C in w) {
            var I = w[C];
            w.hasOwnProperty(C) &&
              !Be(I) &&
              ((Array.isArray(I) && I.isCss) || Q(I)
                ? S.push(''.concat(ze(C), ':'), I, ';')
                : oe(I)
                ? S.push.apply(S, __spreadArray(__spreadArray([''.concat(C, ' {')], Le(I), !1), ['}'], !1))
                : S.push(
                    ''
                      .concat(ze(C), ': ')
                      .concat(
                        null == I || 'boolean' == typeof I || '' === I
                          ? ''
                          : 'number' != typeof I || 0 === I || C in eA.Z || C.startsWith('--')
                          ? String(I).trim()
                          : ''.concat(I, 'px'),
                        ';'
                      )
                  ));
          }
          return S;
        };
      function Ge(w, S, C, I) {
        return Be(w)
          ? []
          : ee(w)
          ? ['.'.concat(w.styledComponentId)]
          : Q(w)
          ? !Q(w) || (w.prototype && w.prototype.isReactComponent) || !S
            ? [w]
            : Ge(w(S), S, C, I)
          : w instanceof tc
          ? C
            ? (w.inject(C, I), [w.getName(I)])
            : [w]
          : oe(w)
          ? Le(w)
          : Array.isArray(w)
          ? Array.prototype.concat.apply(
              eB,
              w.map(function (w) {
                return Ge(w, S, C, I);
              })
            )
          : [w.toString()];
      }
      function Ye(w) {
        for (var S = 0; S < w.length; S += 1) {
          var C = w[S];
          if (Q(C) && !ee(C)) return !1;
        }
        return !0;
      }
      var tu = j('6.1.0'),
        td = (function () {
          function e(w, S, C) {
            (this.rules = w),
              (this.staticRulesId = ''),
              (this.isStatic = (void 0 === C || C.isStatic) && Ye(w)),
              (this.componentId = S),
              (this.baseHash = k(tu, S)),
              (this.baseStyle = C),
              tr.registerId(S);
          }
          return (
            (e.prototype.generateAndInjectStyles = function (w, S, C) {
              var I = this.baseStyle ? this.baseStyle.generateAndInjectStyles(w, S, C) : '';
              if (this.isStatic && !C.hash) {
                if (this.staticRulesId && S.hasNameForId(this.componentId, this.staticRulesId))
                  I = te(I, this.staticRulesId);
                else {
                  var $ = ne(Ge(this.rules, w, S, C)),
                    er = R(k(this.baseHash, $) >>> 0);
                  if (!S.hasNameForId(this.componentId, er)) {
                    var en = C($, '.'.concat(er), void 0, this.componentId);
                    S.insertRules(this.componentId, er, en);
                  }
                  (I = te(I, er)), (this.staticRulesId = er);
                }
              } else {
                for (var ei = k(this.baseHash, C.hash), eo = '', es = 0; es < this.rules.length; es++) {
                  var el = this.rules[es];
                  if ('string' == typeof el) eo += el;
                  else if (el) {
                    var ec = ne(Ge(el, w, S, C));
                    (ei = k(ei, ec + es)), (eo += ec);
                  }
                }
                if (eo) {
                  var eu = R(ei >>> 0);
                  S.hasNameForId(this.componentId, eu) ||
                    S.insertRules(this.componentId, eu, C(eo, '.'.concat(eu), void 0, this.componentId)),
                    (I = te(I, eu));
                }
              }
              return I;
            }),
            e
          );
        })(),
        th = el.createContext(void 0);
      th.Consumer;
      var tf = {};
      function Qe(w, S, C) {
        var I,
          $,
          er,
          en,
          ei = ee(w),
          eo = !F(w),
          es = S.attrs,
          ec = void 0 === es ? eB : es,
          eu = S.componentId,
          ed =
            void 0 === eu
              ? ((I = S.displayName),
                ($ = S.parentComponentId),
                (tf[(er = 'string' != typeof I ? 'sc' : A(I))] = (tf[er] || 0) + 1),
                (en = ''.concat(er, '-').concat(x('6.1.0' + er + tf[er]))),
                $ ? ''.concat($, '-').concat(en) : en)
              : eu,
          eh =
            (void 0 === S.displayName && (F(w) || V(w)),
            S.displayName && S.componentId
              ? ''.concat(A(S.displayName), '-').concat(S.componentId)
              : S.componentId || ed),
          ef = ei && w.attrs ? w.attrs.concat(ec).filter(Boolean) : ec,
          ep = S.shouldForwardProp;
        if (ei && w.shouldForwardProp) {
          var em = w.shouldForwardProp;
          if (S.shouldForwardProp) {
            var eg = S.shouldForwardProp;
            ep = function (w, S) {
              return em(w, S) && eg(w, S);
            };
          } else ep = em;
        }
        var ey = new td(C, eh, ei ? w.componentStyle : void 0);
        function O(w, S) {
          return (function (w, S, C) {
            var I,
              $ = w.attrs,
              er = w.componentStyle,
              en = w.defaultProps,
              ei = w.foldedComponentIds,
              eo = w.styledComponentId,
              es = w.target,
              ec = el.useContext(th),
              eu = Ve(),
              ed = w.shouldForwardProp || eu.shouldForwardProp,
              eh = (function (w, S, C) {
                for (
                  var I, $ = __assign(__assign({}, S), { className: void 0, theme: C }), er = 0;
                  er < w.length;
                  er += 1
                ) {
                  var en = Q((I = w[er])) ? I($) : I;
                  for (var ei in en)
                    $[ei] =
                      'className' === ei
                        ? te($[ei], en[ei])
                        : 'style' === ei
                        ? __assign(__assign({}, $[ei]), en[ei])
                        : en[ei];
                }
                return S.className && ($.className = te($.className, S.className)), $;
              })($, S, P(S, ec, en) || eR),
              ef = eh.as || es,
              ep = {};
            for (var em in eh)
              void 0 === eh[em] ||
                '$' === em[0] ||
                'as' === em ||
                'theme' === em ||
                ('forwardedAs' === em ? (ep.as = eh.forwardedAs) : (ed && !ed(em, ef)) || (ep[em] = eh[em]));
            var eg = ((I = Ve()), er.generateAndInjectStyles(eh, I.styleSheet, I.stylis)),
              ey = te(ei, eo);
            return (
              eg && (ey += ' ' + eg),
              eh.className && (ey += ' ' + eh.className),
              (ep[F(ef) && !eO.has(ef) ? 'class' : 'className'] = ey),
              (ep.ref = C),
              (0, el.createElement)(ef, ep)
            );
          })(ev, w, S);
        }
        var ev = el.forwardRef(O);
        return (
          (ev.attrs = ef),
          (ev.componentStyle = ey),
          (ev.shouldForwardProp = ep),
          (ev.foldedComponentIds = ei ? te(w.foldedComponentIds, w.styledComponentId) : ''),
          (ev.styledComponentId = eh),
          (ev.target = ei ? w.target : w),
          Object.defineProperty(ev, 'defaultProps', {
            get: function () {
              return this._foldedDefaultProps;
            },
            set: function (S) {
              this._foldedDefaultProps = ei
                ? (function (w) {
                    for (var S = [], C = 1; C < arguments.length; C++) S[C - 1] = arguments[C];
                    for (var I = 0; I < S.length; I++) re(w, S[I], !0);
                    return w;
                  })({}, w.defaultProps, S)
                : S;
            }
          }),
          se(ev, function () {
            return '.'.concat(ev.styledComponentId);
          }),
          eo &&
            K(ev, w, {
              attrs: !0,
              componentStyle: !0,
              displayName: !0,
              foldedComponentIds: !0,
              shouldForwardProp: !0,
              styledComponentId: !0,
              target: !0
            }),
          ev
        );
      }
      function et(w, S) {
        for (var C = [w[0]], I = 0, $ = S.length; I < $; I += 1) C.push(S[I], w[I + 1]);
        return C;
      }
      var tt = function (w) {
        return Object.assign(w, { isCss: !0 });
      };
      function nt(w) {
        for (var S = [], C = 1; C < arguments.length; C++) S[C - 1] = arguments[C];
        return Q(w) || oe(w)
          ? tt(Ge(et(eB, __spreadArray([w], S, !0))))
          : 0 === S.length && 1 === w.length && 'string' == typeof w[0]
          ? Ge(w)
          : tt(Ge(et(w, S)));
      }
      function ot(w, S, C) {
        if ((void 0 === C && (C = eR), !S)) throw ce(1, S);
        var s = function (I) {
          for (var $ = [], er = 1; er < arguments.length; er++) $[er - 1] = arguments[er];
          return w(S, C, nt.apply(void 0, __spreadArray([I], $, !1)));
        };
        return (
          (s.attrs = function (I) {
            return ot(w, S, __assign(__assign({}, C), { attrs: Array.prototype.concat(C.attrs, I).filter(Boolean) }));
          }),
          (s.withConfig = function (I) {
            return ot(w, S, __assign(__assign({}, C), I));
          }),
          s
        );
      }
      var rt = function (w) {
        return ot(Qe, w);
      };
      function lt(w) {
        return K(
          el.forwardRef(function (S, C) {
            var I = P(S, el.useContext(th), w.defaultProps);
            return el.createElement(w, __assign({}, S, { theme: I, ref: C }));
          }),
          w
        );
      }
      function asyncGeneratorStep(w, S, C, I, $, er, en) {
        try {
          var ei = w[er](en),
            eo = ei.value;
        } catch (w) {
          C(w);
          return;
        }
        ei.done ? S(eo) : Promise.resolve(eo).then(I, $);
      }
      function _asyncToGenerator(w) {
        return function () {
          var S = this,
            C = arguments;
          return new Promise(function (I, $) {
            var er = w.apply(S, C);
            function _next(w) {
              asyncGeneratorStep(er, I, $, _next, _throw, 'next', w);
            }
            function _throw(w) {
              asyncGeneratorStep(er, I, $, _next, _throw, 'throw', w);
            }
            _next(void 0);
          });
        };
      }
      eO.forEach(function (w) {
        rt[w] = rt(w);
      }),
        (function () {
          function e(w, S) {
            (this.rules = w), (this.componentId = S), (this.isStatic = Ye(w)), tr.registerId(this.componentId + 1);
          }
          (e.prototype.createStyles = function (w, S, C, I) {
            var $ = I(ne(Ge(this.rules, S, C, I)), ''),
              er = this.componentId + w;
            C.insertRules(er, er, $);
          }),
            (e.prototype.removeStyles = function (w, S) {
              S.clearRules(this.componentId + w);
            }),
            (e.prototype.renderStyles = function (w, S, C, I) {
              w > 2 && tr.registerId(this.componentId + w), this.removeStyles(w, C), this.createStyles(w, S, C, I);
            });
        })(),
        (function () {
          function e() {
            var w = this;
            (this._emitSheetCSS = function () {
              var S = w.instance.toString(),
                I = C.nc,
                $ = ne(
                  [
                    I && 'nonce="'.concat(I, '"'),
                    ''.concat(eE, '="true"'),
                    ''.concat('data-styled-version', '="').concat('6.1.0', '"')
                  ].filter(Boolean),
                  ' '
                );
              return '<style '.concat($, '>').concat(S, '</style>');
            }),
              (this.getStyleTags = function () {
                if (w.sealed) throw ce(2);
                return w._emitSheetCSS();
              }),
              (this.getStyleElement = function () {
                if (w.sealed) throw ce(2);
                var S,
                  I =
                    (((S = {})[eE] = ''),
                    (S['data-styled-version'] = '6.1.0'),
                    (S.dangerouslySetInnerHTML = { __html: w.instance.toString() }),
                    S),
                  $ = C.nc;
                return $ && (I.nonce = $), [el.createElement('style', __assign({}, I, { key: 'sc-0-0' }))];
              }),
              (this.seal = function () {
                w.sealed = !0;
              }),
              (this.instance = new tr({ isServer: !0 })),
              (this.sealed = !1);
          }
          (e.prototype.collectStyles = function (w) {
            if (this.sealed) throw ce(2);
            return el.createElement(Fe, { sheet: this.instance }, w);
          }),
            (e.prototype.interleaveWithNodeStream = function (w) {
              throw ce(3);
            });
        })();
      var tp = C(13428);
      function _classCallCheck(w, S) {
        if (!(w instanceof S)) throw TypeError('Cannot call a class as a function');
      }
      function _typeof(w) {
        return (_typeof =
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? function (w) {
                return typeof w;
              }
            : function (w) {
                return w && 'function' == typeof Symbol && w.constructor === Symbol && w !== Symbol.prototype
                  ? 'symbol'
                  : typeof w;
              })(w);
      }
      function _toPrimitive(w, S) {
        if ('object' !== _typeof(w) || null === w) return w;
        var C = w[Symbol.toPrimitive];
        if (void 0 !== C) {
          var I = C.call(w, S || 'default');
          if ('object' !== _typeof(I)) return I;
          throw TypeError('@@toPrimitive must return a primitive value.');
        }
        return ('string' === S ? String : Number)(w);
      }
      function _toPropertyKey(w) {
        var S = _toPrimitive(w, 'string');
        return 'symbol' === _typeof(S) ? S : String(S);
      }
      function _defineProperties(w, S) {
        for (var C = 0; C < S.length; C++) {
          var I = S[C];
          (I.enumerable = I.enumerable || !1),
            (I.configurable = !0),
            'value' in I && (I.writable = !0),
            Object.defineProperty(w, _toPropertyKey(I.key), I);
        }
      }
      function _createClass(w, S, C) {
        return (
          S && _defineProperties(w.prototype, S),
          C && _defineProperties(w, C),
          Object.defineProperty(w, 'prototype', { writable: !1 }),
          w
        );
      }
      function _setPrototypeOf(w, S) {
        return (_setPrototypeOf = Object.setPrototypeOf
          ? Object.setPrototypeOf.bind()
          : function (w, S) {
              return (w.__proto__ = S), w;
            })(w, S);
      }
      function _inherits(w, S) {
        if ('function' != typeof S && null !== S) throw TypeError('Super expression must either be null or a function');
        (w.prototype = Object.create(S && S.prototype, { constructor: { value: w, writable: !0, configurable: !0 } })),
          Object.defineProperty(w, 'prototype', { writable: !1 }),
          S && _setPrototypeOf(w, S);
      }
      function _assertThisInitialized(w) {
        if (void 0 === w) throw ReferenceError("this hasn't been initialised - super() hasn't been called");
        return w;
      }
      function _possibleConstructorReturn(w, S) {
        if (S && ('object' === _typeof(S) || 'function' == typeof S)) return S;
        if (void 0 !== S) throw TypeError('Derived constructors may only return object or undefined');
        return _assertThisInitialized(w);
      }
      function _getPrototypeOf(w) {
        return (_getPrototypeOf = Object.setPrototypeOf
          ? Object.getPrototypeOf.bind()
          : function (w) {
              return w.__proto__ || Object.getPrototypeOf(w);
            })(w);
      }
      function _defineProperty(w, S, C) {
        return (
          (S = _toPropertyKey(S)) in w
            ? Object.defineProperty(w, S, { value: C, enumerable: !0, configurable: !0, writable: !0 })
            : (w[S] = C),
          w
        );
      }
      var tm = C(74001),
        tg = C.n(tm);
      function _objectWithoutPropertiesLoose(w, S) {
        if (null == w) return {};
        var C,
          I,
          $ = {},
          er = Object.keys(w);
        for (I = 0; I < er.length; I++) (C = er[I]), S.indexOf(C) >= 0 || ($[C] = w[C]);
        return $;
      }
      function _objectWithoutProperties(w, S) {
        if (null == w) return {};
        var C,
          I,
          $ = _objectWithoutPropertiesLoose(w, S);
        if (Object.getOwnPropertySymbols) {
          var er = Object.getOwnPropertySymbols(w);
          for (I = 0; I < er.length; I++)
            (C = er[I]), !(S.indexOf(C) >= 0) && Object.prototype.propertyIsEnumerable.call(w, C) && ($[C] = w[C]);
        }
        return $;
      }
      function _arrayLikeToArray(w, S) {
        (null == S || S > w.length) && (S = w.length);
        for (var C = 0, I = Array(S); C < S; C++) I[C] = w[C];
        return I;
      }
      function _arrayWithoutHoles(w) {
        if (Array.isArray(w)) return _arrayLikeToArray(w);
      }
      function _iterableToArray(w) {
        if (('undefined' != typeof Symbol && null != w[Symbol.iterator]) || null != w['@@iterator'])
          return Array.from(w);
      }
      function _unsupportedIterableToArray(w, S) {
        if (w) {
          if ('string' == typeof w) return _arrayLikeToArray(w, S);
          var C = Object.prototype.toString.call(w).slice(8, -1);
          if (('Object' === C && w.constructor && (C = w.constructor.name), 'Map' === C || 'Set' === C))
            return Array.from(w);
          if ('Arguments' === C || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C)) return _arrayLikeToArray(w, S);
        }
      }
      function _nonIterableSpread() {
        throw TypeError(
          'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
        );
      }
      function _toConsumableArray(w) {
        return _arrayWithoutHoles(w) || _iterableToArray(w) || _unsupportedIterableToArray(w) || _nonIterableSpread();
      }
      function ownKeys(w, S) {
        var C = Object.keys(w);
        if (Object.getOwnPropertySymbols) {
          var I = Object.getOwnPropertySymbols(w);
          S &&
            (I = I.filter(function (S) {
              return Object.getOwnPropertyDescriptor(w, S).enumerable;
            })),
            C.push.apply(C, I);
        }
        return C;
      }
      function _objectSpread(w) {
        for (var S = 1; S < arguments.length; S++) {
          var C = null != arguments[S] ? arguments[S] : {};
          S % 2
            ? ownKeys(Object(C), !0).forEach(function (S) {
                _defineProperty(w, S, C[S]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(w, Object.getOwnPropertyDescriptors(C))
            : ownKeys(Object(C)).forEach(function (S) {
                Object.defineProperty(w, S, Object.getOwnPropertyDescriptor(C, S));
              });
        }
        return w;
      }
      function powerSetPermutations(w) {
        var S = w.length;
        return 0 === S || 1 === S
          ? w
          : 2 === S
          ? [w[0], w[1], ''.concat(w[0], '.').concat(w[1]), ''.concat(w[1], '.').concat(w[0])]
          : 3 === S
          ? [
              w[0],
              w[1],
              w[2],
              ''.concat(w[0], '.').concat(w[1]),
              ''.concat(w[0], '.').concat(w[2]),
              ''.concat(w[1], '.').concat(w[0]),
              ''.concat(w[1], '.').concat(w[2]),
              ''.concat(w[2], '.').concat(w[0]),
              ''.concat(w[2], '.').concat(w[1]),
              ''.concat(w[0], '.').concat(w[1], '.').concat(w[2]),
              ''.concat(w[0], '.').concat(w[2], '.').concat(w[1]),
              ''.concat(w[1], '.').concat(w[0], '.').concat(w[2]),
              ''.concat(w[1], '.').concat(w[2], '.').concat(w[0]),
              ''.concat(w[2], '.').concat(w[0], '.').concat(w[1]),
              ''.concat(w[2], '.').concat(w[1], '.').concat(w[0])
            ]
          : S >= 4
          ? [
              w[0],
              w[1],
              w[2],
              w[3],
              ''.concat(w[0], '.').concat(w[1]),
              ''.concat(w[0], '.').concat(w[2]),
              ''.concat(w[0], '.').concat(w[3]),
              ''.concat(w[1], '.').concat(w[0]),
              ''.concat(w[1], '.').concat(w[2]),
              ''.concat(w[1], '.').concat(w[3]),
              ''.concat(w[2], '.').concat(w[0]),
              ''.concat(w[2], '.').concat(w[1]),
              ''.concat(w[2], '.').concat(w[3]),
              ''.concat(w[3], '.').concat(w[0]),
              ''.concat(w[3], '.').concat(w[1]),
              ''.concat(w[3], '.').concat(w[2]),
              ''.concat(w[0], '.').concat(w[1], '.').concat(w[2]),
              ''.concat(w[0], '.').concat(w[1], '.').concat(w[3]),
              ''.concat(w[0], '.').concat(w[2], '.').concat(w[1]),
              ''.concat(w[0], '.').concat(w[2], '.').concat(w[3]),
              ''.concat(w[0], '.').concat(w[3], '.').concat(w[1]),
              ''.concat(w[0], '.').concat(w[3], '.').concat(w[2]),
              ''.concat(w[1], '.').concat(w[0], '.').concat(w[2]),
              ''.concat(w[1], '.').concat(w[0], '.').concat(w[3]),
              ''.concat(w[1], '.').concat(w[2], '.').concat(w[0]),
              ''.concat(w[1], '.').concat(w[2], '.').concat(w[3]),
              ''.concat(w[1], '.').concat(w[3], '.').concat(w[0]),
              ''.concat(w[1], '.').concat(w[3], '.').concat(w[2]),
              ''.concat(w[2], '.').concat(w[0], '.').concat(w[1]),
              ''.concat(w[2], '.').concat(w[0], '.').concat(w[3]),
              ''.concat(w[2], '.').concat(w[1], '.').concat(w[0]),
              ''.concat(w[2], '.').concat(w[1], '.').concat(w[3]),
              ''.concat(w[2], '.').concat(w[3], '.').concat(w[0]),
              ''.concat(w[2], '.').concat(w[3], '.').concat(w[1]),
              ''.concat(w[3], '.').concat(w[0], '.').concat(w[1]),
              ''.concat(w[3], '.').concat(w[0], '.').concat(w[2]),
              ''.concat(w[3], '.').concat(w[1], '.').concat(w[0]),
              ''.concat(w[3], '.').concat(w[1], '.').concat(w[2]),
              ''.concat(w[3], '.').concat(w[2], '.').concat(w[0]),
              ''.concat(w[3], '.').concat(w[2], '.').concat(w[1]),
              ''.concat(w[0], '.').concat(w[1], '.').concat(w[2], '.').concat(w[3]),
              ''.concat(w[0], '.').concat(w[1], '.').concat(w[3], '.').concat(w[2]),
              ''.concat(w[0], '.').concat(w[2], '.').concat(w[1], '.').concat(w[3]),
              ''.concat(w[0], '.').concat(w[2], '.').concat(w[3], '.').concat(w[1]),
              ''.concat(w[0], '.').concat(w[3], '.').concat(w[1], '.').concat(w[2]),
              ''.concat(w[0], '.').concat(w[3], '.').concat(w[2], '.').concat(w[1]),
              ''.concat(w[1], '.').concat(w[0], '.').concat(w[2], '.').concat(w[3]),
              ''.concat(w[1], '.').concat(w[0], '.').concat(w[3], '.').concat(w[2]),
              ''.concat(w[1], '.').concat(w[2], '.').concat(w[0], '.').concat(w[3]),
              ''.concat(w[1], '.').concat(w[2], '.').concat(w[3], '.').concat(w[0]),
              ''.concat(w[1], '.').concat(w[3], '.').concat(w[0], '.').concat(w[2]),
              ''.concat(w[1], '.').concat(w[3], '.').concat(w[2], '.').concat(w[0]),
              ''.concat(w[2], '.').concat(w[0], '.').concat(w[1], '.').concat(w[3]),
              ''.concat(w[2], '.').concat(w[0], '.').concat(w[3], '.').concat(w[1]),
              ''.concat(w[2], '.').concat(w[1], '.').concat(w[0], '.').concat(w[3]),
              ''.concat(w[2], '.').concat(w[1], '.').concat(w[3], '.').concat(w[0]),
              ''.concat(w[2], '.').concat(w[3], '.').concat(w[0], '.').concat(w[1]),
              ''.concat(w[2], '.').concat(w[3], '.').concat(w[1], '.').concat(w[0]),
              ''.concat(w[3], '.').concat(w[0], '.').concat(w[1], '.').concat(w[2]),
              ''.concat(w[3], '.').concat(w[0], '.').concat(w[2], '.').concat(w[1]),
              ''.concat(w[3], '.').concat(w[1], '.').concat(w[0], '.').concat(w[2]),
              ''.concat(w[3], '.').concat(w[1], '.').concat(w[2], '.').concat(w[0]),
              ''.concat(w[3], '.').concat(w[2], '.').concat(w[0], '.').concat(w[1]),
              ''.concat(w[3], '.').concat(w[2], '.').concat(w[1], '.').concat(w[0])
            ]
          : void 0;
      }
      var ty = {};
      function getClassNameCombinations(w) {
        if (0 === w.length || 1 === w.length) return w;
        var S = w.join('.');
        return ty[S] || (ty[S] = powerSetPermutations(w)), ty[S];
      }
      function createStyleObject(w) {
        var S = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          C = arguments.length > 2 ? arguments[2] : void 0;
        return getClassNameCombinations(
          w.filter(function (w) {
            return 'token' !== w;
          })
        ).reduce(function (w, S) {
          return _objectSpread(_objectSpread({}, w), C[S]);
        }, S);
      }
      function createChildren(w, S) {
        var C = 0;
        return function (I) {
          return (
            (C += 1),
            I.map(function (I, $) {
              return createElement({
                node: I,
                stylesheet: w,
                useInlineStyles: S,
                key: 'code-segment-'.concat(C, '-').concat($)
              });
            })
          );
        };
      }
      function createElement(w) {
        var S = w.node,
          C = w.stylesheet,
          I = w.style,
          $ = w.useInlineStyles,
          er = w.key,
          en = S.properties,
          ei = S.type,
          eo = S.tagName,
          es = S.value;
        if ('text' === ei) return es;
        if (eo) {
          var ec,
            eu = createChildren(C, $);
          if ($) {
            var ed = Object.keys(C).reduce(function (w, S) {
                return (
                  S.split('.').forEach(function (S) {
                    w.includes(S) || w.push(S);
                  }),
                  w
                );
              }, []),
              eh = en.className && en.className.includes('token') ? ['token'] : [],
              ef =
                en.className &&
                eh.concat(
                  en.className.filter(function (w) {
                    return !ed.includes(w);
                  })
                );
            ec = _objectSpread(
              _objectSpread({}, en),
              {},
              {
                className: ef.join(' ') || void 0,
                style: createStyleObject(en.className, Object.assign({}, en.style, void 0 === I ? {} : I), C)
              }
            );
          } else ec = _objectSpread(_objectSpread({}, en), {}, { className: en.className.join(' ') });
          var ep = eu(S.children);
          return el.createElement(eo, (0, tp.Z)({ key: er }, ec), ep);
        }
      }
      var tv = [
        'language',
        'children',
        'style',
        'customStyle',
        'codeTagProps',
        'useInlineStyles',
        'showLineNumbers',
        'showInlineLineNumbers',
        'startingLineNumber',
        'lineNumberContainerStyle',
        'lineNumberStyle',
        'wrapLines',
        'wrapLongLines',
        'lineProps',
        'renderer',
        'PreTag',
        'CodeTag',
        'code',
        'astGenerator'
      ];
      function highlight_ownKeys(w, S) {
        var C = Object.keys(w);
        if (Object.getOwnPropertySymbols) {
          var I = Object.getOwnPropertySymbols(w);
          S &&
            (I = I.filter(function (S) {
              return Object.getOwnPropertyDescriptor(w, S).enumerable;
            })),
            C.push.apply(C, I);
        }
        return C;
      }
      function highlight_objectSpread(w) {
        for (var S = 1; S < arguments.length; S++) {
          var C = null != arguments[S] ? arguments[S] : {};
          S % 2
            ? highlight_ownKeys(Object(C), !0).forEach(function (S) {
                _defineProperty(w, S, C[S]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(w, Object.getOwnPropertyDescriptors(C))
            : highlight_ownKeys(Object(C)).forEach(function (S) {
                Object.defineProperty(w, S, Object.getOwnPropertyDescriptor(C, S));
              });
        }
        return w;
      }
      var tb = /\n/g;
      function getNewLines(w) {
        return w.match(tb);
      }
      function getAllLineNumbers(w) {
        var S = w.lines,
          C = w.startingLineNumber,
          I = w.style;
        return S.map(function (w, S) {
          var $ = S + C;
          return el.createElement(
            'span',
            {
              key: 'line-'.concat(S),
              className: 'react-syntax-highlighter-line-number',
              style: 'function' == typeof I ? I($) : I
            },
            ''.concat($, '\n')
          );
        });
      }
      function AllLineNumbers(w) {
        var S = w.codeString,
          C = w.codeStyle,
          I = w.containerStyle,
          $ = void 0 === I ? { float: 'left', paddingRight: '10px' } : I,
          er = w.numberStyle,
          en = w.startingLineNumber;
        return el.createElement(
          'code',
          { style: Object.assign({}, C, $) },
          getAllLineNumbers({
            lines: S.replace(/\n$/, '').split('\n'),
            style: void 0 === er ? {} : er,
            startingLineNumber: en
          })
        );
      }
      function getEmWidthOfNumber(w) {
        return ''.concat(w.toString().length, '.25em');
      }
      function getInlineLineNumber(w, S) {
        return {
          type: 'element',
          tagName: 'span',
          properties: {
            key: 'line-number--'.concat(w),
            className: ['comment', 'linenumber', 'react-syntax-highlighter-line-number'],
            style: S
          },
          children: [{ type: 'text', value: w }]
        };
      }
      function assembleLineNumberStyles(w, S, C) {
        var I = {
            display: 'inline-block',
            minWidth: getEmWidthOfNumber(C),
            paddingRight: '1em',
            textAlign: 'right',
            userSelect: 'none'
          },
          $ = 'function' == typeof w ? w(S) : w;
        return highlight_objectSpread(highlight_objectSpread({}, I), $);
      }
      function createLineElement(w) {
        var S = w.children,
          C = w.lineNumber,
          I = w.lineNumberStyle,
          $ = w.largestLineNumber,
          er = w.showInlineLineNumbers,
          en = w.lineProps,
          ei = void 0 === en ? {} : en,
          eo = w.className,
          es = w.showLineNumbers,
          el = w.wrapLongLines,
          ec = 'function' == typeof ei ? ei(C) : ei;
        if (((ec.className = void 0 === eo ? [] : eo), C && er)) {
          var eu = assembleLineNumberStyles(I, C, $);
          S.unshift(getInlineLineNumber(C, eu));
        }
        return (
          el & es && (ec.style = highlight_objectSpread(highlight_objectSpread({}, ec.style), {}, { display: 'flex' })),
          { type: 'element', tagName: 'span', properties: ec, children: S }
        );
      }
      function flattenCodeTree(w) {
        for (
          var S = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
            C = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
            I = 0;
          I < w.length;
          I++
        ) {
          var $ = w[I];
          if ('text' === $.type)
            C.push(createLineElement({ children: [$], className: _toConsumableArray(new Set(S)) }));
          else if ($.children) {
            var er = S.concat($.properties.className);
            flattenCodeTree($.children, er).forEach(function (w) {
              return C.push(w);
            });
          }
        }
        return C;
      }
      function processLines(w, S, C, I, $, er, en, ei, eo) {
        var es,
          el = flattenCodeTree(w.value),
          ec = [],
          eu = -1,
          ed = 0;
        function createWrappedLine(w, S) {
          var er = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
          return createLineElement({
            children: w,
            lineNumber: S,
            lineNumberStyle: ei,
            largestLineNumber: en,
            showInlineLineNumbers: $,
            lineProps: C,
            className: er,
            showLineNumbers: I,
            wrapLongLines: eo
          });
        }
        function createUnwrappedLine(w, S) {
          if (I && S && $) {
            var C = assembleLineNumberStyles(ei, S, en);
            w.unshift(getInlineLineNumber(S, C));
          }
          return w;
        }
        function createLine(w, C) {
          var I = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
          return S || I.length > 0 ? createWrappedLine(w, C, I) : createUnwrappedLine(w, C);
        }
        for (; ed < el.length; )
          !(function () {
            var w = el[ed],
              S = w.children[0].value;
            if (getNewLines(S)) {
              var C = S.split('\n');
              C.forEach(function (S, $) {
                var en = I && ec.length + er,
                  ei = { type: 'text', value: ''.concat(S, '\n') };
                if (0 === $) {
                  var eo = createLine(
                    el
                      .slice(eu + 1, ed)
                      .concat(createLineElement({ children: [ei], className: w.properties.className })),
                    en
                  );
                  ec.push(eo);
                } else if ($ === C.length - 1) {
                  var es = el[ed + 1] && el[ed + 1].children && el[ed + 1].children[0],
                    eh = { type: 'text', value: ''.concat(S) };
                  if (es) {
                    var ef = createLineElement({ children: [eh], className: w.properties.className });
                    el.splice(ed + 1, 0, ef);
                  } else {
                    var ep = createLine([eh], en, w.properties.className);
                    ec.push(ep);
                  }
                } else {
                  var em = createLine([ei], en, w.properties.className);
                  ec.push(em);
                }
              }),
                (eu = ed);
            }
            ed++;
          })();
        if (eu !== el.length - 1) {
          var eh = el.slice(eu + 1, el.length);
          if (eh && eh.length) {
            var ef = createLine(eh, I && ec.length + er);
            ec.push(ef);
          }
        }
        return S ? ec : (es = []).concat.apply(es, ec);
      }
      function defaultRenderer(w) {
        var S = w.rows,
          C = w.stylesheet,
          I = w.useInlineStyles;
        return S.map(function (w, S) {
          return createElement({ node: w, stylesheet: C, useInlineStyles: I, key: 'code-segement'.concat(S) });
        });
      }
      function isHighlightJs(w) {
        return w && void 0 !== w.highlightAuto;
      }
      function getCodeTree(w) {
        var S = w.astGenerator,
          C = w.language,
          I = w.code,
          $ = w.defaultCodeValue;
        if (isHighlightJs(S)) {
          var er = -1 !== S.listLanguages().indexOf(C);
          return 'text' === C ? { value: $, language: 'text' } : er ? S.highlight(C, I) : S.highlightAuto(I);
        }
        try {
          return C && 'text' !== C ? { value: S.highlight(I, C) } : { value: $ };
        } catch (w) {
          return { value: $ };
        }
      }
      function highlight(w, S) {
        return function (C) {
          var I = C.language,
            $ = C.children,
            er = C.style,
            en = void 0 === er ? S : er,
            ei = C.customStyle,
            eo = void 0 === ei ? {} : ei,
            es = C.codeTagProps,
            ec =
              void 0 === es
                ? {
                    className: I ? 'language-'.concat(I) : void 0,
                    style: highlight_objectSpread(
                      highlight_objectSpread({}, en['code[class*="language-"]']),
                      en['code[class*="language-'.concat(I, '"]')]
                    )
                  }
                : es,
            eu = C.useInlineStyles,
            ed = void 0 === eu || eu,
            eh = C.showLineNumbers,
            ef = void 0 !== eh && eh,
            ep = C.showInlineLineNumbers,
            em = void 0 === ep || ep,
            eg = C.startingLineNumber,
            ey = void 0 === eg ? 1 : eg,
            ev = C.lineNumberContainerStyle,
            eb = C.lineNumberStyle,
            e_ = void 0 === eb ? {} : eb,
            ex = C.wrapLines,
            ew = C.wrapLongLines,
            ek = void 0 !== ew && ew,
            eS = C.lineProps,
            eC = void 0 === eS ? {} : eS,
            eP = C.renderer,
            eA = C.PreTag,
            eT = void 0 === eA ? 'pre' : eA,
            eE = C.CodeTag,
            ez = void 0 === eE ? 'code' : eE,
            eI = C.code,
            eB = void 0 === eI ? (Array.isArray($) ? $[0] : $) || '' : eI,
            eR = C.astGenerator,
            eO = _objectWithoutProperties(C, tv);
          eR = eR || w;
          var eM = ef
              ? el.createElement(AllLineNumbers, {
                  containerStyle: ev,
                  codeStyle: ec.style || {},
                  numberStyle: e_,
                  startingLineNumber: ey,
                  codeString: eB
                })
              : null,
            eD = en.hljs || en['pre[class*="language-"]'] || { backgroundColor: '#fff' },
            ej = isHighlightJs(eR) ? 'hljs' : 'prismjs',
            eL = ed
              ? Object.assign({}, eO, { style: Object.assign({}, eD, eo) })
              : Object.assign({}, eO, {
                  className: eO.className ? ''.concat(ej, ' ').concat(eO.className) : ej,
                  style: Object.assign({}, eo)
                });
          if (
            (ek
              ? (ec.style = highlight_objectSpread(
                  highlight_objectSpread({}, ec.style),
                  {},
                  { whiteSpace: 'pre-wrap' }
                ))
              : (ec.style = highlight_objectSpread(highlight_objectSpread({}, ec.style), {}, { whiteSpace: 'pre' })),
            !eR)
          )
            return el.createElement(eT, eL, eM, el.createElement(ez, ec, eB));
          ((void 0 === ex && eP) || ek) && (ex = !0), (eP = eP || defaultRenderer);
          var eF = [{ type: 'text', value: eB }],
            eV = getCodeTree({ astGenerator: eR, language: I, code: eB, defaultCodeValue: eF });
          null === eV.language && (eV.value = eF);
          var eN = eV.value.length + ey,
            eU = processLines(eV, ex, eC, ef, em, ey, eN, e_, ek);
          return el.createElement(
            eT,
            eL,
            el.createElement(ez, ec, !em && eM, eP({ rows: eU, stylesheet: en, useInlineStyles: ed }))
          );
        };
      }
      function _createSuper(w) {
        var S = _isNativeReflectConstruct();
        return function () {
          var C,
            I = _getPrototypeOf(w);
          if (S) {
            var $ = _getPrototypeOf(this).constructor;
            C = Reflect.construct(I, arguments, $);
          } else C = I.apply(this, arguments);
          return _possibleConstructorReturn(this, C);
        };
      }
      function _isNativeReflectConstruct() {
        if ('undefined' == typeof Reflect || !Reflect.construct || Reflect.construct.sham) return !1;
        if ('function' == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (w) {
          return !1;
        }
      }
      var create_language_async_loader = function (w, S) {
          var C;
          return (
            (C = _asyncToGenerator(
              tg().mark(function _callee(C) {
                var I;
                return tg().wrap(function ($) {
                  for (;;)
                    switch (($.prev = $.next)) {
                      case 0:
                        return ($.next = 2), S();
                      case 2:
                        C(w, (I = $.sent).default || I);
                      case 4:
                      case 'end':
                        return $.stop();
                    }
                }, _callee);
              })
            )),
            function (w) {
              return C.apply(this, arguments);
            }
          );
        },
        t_ =
          (($ = (I = {
            loader: function () {
              return C.e(5082)
                .then(C.t.bind(C, 15209, 23))
                .then(function (w) {
                  return w.default || w;
                });
            },
            isLanguageRegistered: function (w, S) {
              return w.registered(S);
            },
            languageLoaders: {
              abap: create_language_async_loader('abap', function () {
                return C.e(3412).then(C.t.bind(C, 92515, 23));
              }),
              abnf: create_language_async_loader('abnf', function () {
                return C.e(9073).then(C.t.bind(C, 66975, 23));
              }),
              actionscript: create_language_async_loader('actionscript', function () {
                return C.e(3971).then(C.t.bind(C, 99786, 23));
              }),
              ada: create_language_async_loader('ada', function () {
                return C.e(6084).then(C.t.bind(C, 24985, 23));
              }),
              agda: create_language_async_loader('agda', function () {
                return C.e(2883).then(C.t.bind(C, 99688, 23));
              }),
              al: create_language_async_loader('al', function () {
                return C.e(589).then(C.t.bind(C, 69554, 23));
              }),
              antlr4: create_language_async_loader('antlr4', function () {
                return C.e(8142).then(C.t.bind(C, 19272, 23));
              }),
              apacheconf: create_language_async_loader('apacheconf', function () {
                return C.e(5524).then(C.t.bind(C, 22153, 23));
              }),
              apex: create_language_async_loader('apex', function () {
                return C.e(7041).then(C.t.bind(C, 42809, 23));
              }),
              apl: create_language_async_loader('apl', function () {
                return C.e(6670).then(C.t.bind(C, 57346, 23));
              }),
              applescript: create_language_async_loader('applescript', function () {
                return C.e(4098).then(C.t.bind(C, 56532, 23));
              }),
              aql: create_language_async_loader('aql', function () {
                return C.e(2556).then(C.t.bind(C, 90576, 23));
              }),
              arduino: create_language_async_loader('arduino', function () {
                return C.e(3384).then(C.t.bind(C, 65293, 23));
              }),
              arff: create_language_async_loader('arff', function () {
                return C.e(1438).then(C.t.bind(C, 76258, 23));
              }),
              asciidoc: create_language_async_loader('asciidoc', function () {
                return C.e(1554).then(C.t.bind(C, 95410, 23));
              }),
              asm6502: create_language_async_loader('asm6502', function () {
                return C.e(5696).then(C.t.bind(C, 31714, 23));
              }),
              asmatmel: create_language_async_loader('asmatmel', function () {
                return C.e(3361).then(C.t.bind(C, 55051, 23));
              }),
              aspnet: create_language_async_loader('aspnet', function () {
                return C.e(8030).then(C.t.bind(C, 16812, 23));
              }),
              autohotkey: create_language_async_loader('autohotkey', function () {
                return C.e(2065).then(C.t.bind(C, 85995, 23));
              }),
              autoit: create_language_async_loader('autoit', function () {
                return C.e(8333).then(C.t.bind(C, 41843, 23));
              }),
              avisynth: create_language_async_loader('avisynth', function () {
                return C.e(1387).then(C.t.bind(C, 89922, 23));
              }),
              avroIdl: create_language_async_loader('avroIdl', function () {
                return C.e(3933).then(C.t.bind(C, 13197, 23));
              }),
              bash: create_language_async_loader('bash', function () {
                return C.e(8765).then(C.t.bind(C, 4376, 23));
              }),
              basic: create_language_async_loader('basic', function () {
                return C.e(7504).then(C.t.bind(C, 48937, 23));
              }),
              batch: create_language_async_loader('batch', function () {
                return C.e(400).then(C.t.bind(C, 60159, 23));
              }),
              bbcode: create_language_async_loader('bbcode', function () {
                return C.e(7250).then(C.t.bind(C, 13579, 23));
              }),
              bicep: create_language_async_loader('bicep', function () {
                return C.e(470).then(C.t.bind(C, 88616, 23));
              }),
              birb: create_language_async_loader('birb', function () {
                return C.e(8486).then(C.t.bind(C, 51541, 23));
              }),
              bison: create_language_async_loader('bison', function () {
                return C.e(948).then(C.t.bind(C, 55537, 23));
              }),
              bnf: create_language_async_loader('bnf', function () {
                return C.e(8497).then(C.t.bind(C, 29415, 23));
              }),
              brainfuck: create_language_async_loader('brainfuck', function () {
                return C.e(5539).then(C.t.bind(C, 79545, 23));
              }),
              brightscript: create_language_async_loader('brightscript', function () {
                return C.e(1598).then(C.t.bind(C, 579, 23));
              }),
              bro: create_language_async_loader('bro', function () {
                return C.e(3694).then(C.t.bind(C, 89521, 23));
              }),
              bsl: create_language_async_loader('bsl', function () {
                return C.e(282).then(C.t.bind(C, 15369, 23));
              }),
              c: create_language_async_loader('c', function () {
                return C.e(8950).then(C.t.bind(C, 16533, 23));
              }),
              cfscript: create_language_async_loader('cfscript', function () {
                return C.e(8702).then(C.t.bind(C, 33365, 23));
              }),
              chaiscript: create_language_async_loader('chaiscript', function () {
                return C.e(2789).then(C.t.bind(C, 38832, 23));
              }),
              cil: create_language_async_loader('cil', function () {
                return C.e(26).then(C.t.bind(C, 86257, 23));
              }),
              clike: create_language_async_loader('clike', function () {
                return C.e(131).then(C.t.bind(C, 46794, 23));
              }),
              clojure: create_language_async_loader('clojure', function () {
                return C.e(7966).then(C.t.bind(C, 82197, 23));
              }),
              cmake: create_language_async_loader('cmake', function () {
                return C.e(919).then(C.t.bind(C, 27746, 23));
              }),
              cobol: create_language_async_loader('cobol', function () {
                return C.e(9242).then(C.t.bind(C, 11259, 23));
              }),
              coffeescript: create_language_async_loader('coffeescript', function () {
                return C.e(6118).then(C.t.bind(C, 96046, 23));
              }),
              concurnas: create_language_async_loader('concurnas', function () {
                return C.e(2087).then(C.t.bind(C, 70364, 23));
              }),
              coq: create_language_async_loader('coq', function () {
                return C.e(9256).then(C.t.bind(C, 73742, 23));
              }),
              cpp: create_language_async_loader('cpp', function () {
                return C.e(9692).then(C.t.bind(C, 88596, 23));
              }),
              crystal: create_language_async_loader('crystal', function () {
                return C.e(1130).then(C.t.bind(C, 36448, 23));
              }),
              csharp: create_language_async_loader('csharp', function () {
                return C.e(3318).then(C.t.bind(C, 9940, 23));
              }),
              cshtml: create_language_async_loader('cshtml', function () {
                return C.e(2079).then(C.t.bind(C, 15718, 23));
              }),
              csp: create_language_async_loader('csp', function () {
                return C.e(5299).then(C.t.bind(C, 562, 23));
              }),
              cssExtras: create_language_async_loader('cssExtras', function () {
                return C.e(7475).then(C.t.bind(C, 72824, 23));
              }),
              css: create_language_async_loader('css', function () {
                return C.e(5008).then(C.t.bind(C, 63541, 23));
              }),
              csv: create_language_async_loader('csv', function () {
                return C.e(2526).then(C.t.bind(C, 13541, 23));
              }),
              cypher: create_language_async_loader('cypher', function () {
                return C.e(2374).then(C.t.bind(C, 50102, 23));
              }),
              d: create_language_async_loader('d', function () {
                return C.e(3717).then(C.t.bind(C, 34394, 23));
              }),
              dart: create_language_async_loader('dart', function () {
                return C.e(7769).then(C.t.bind(C, 62922, 23));
              }),
              dataweave: create_language_async_loader('dataweave', function () {
                return C.e(348).then(C.t.bind(C, 50637, 23));
              }),
              dax: create_language_async_loader('dax', function () {
                return C.e(8202).then(C.t.bind(C, 16826, 23));
              }),
              dhall: create_language_async_loader('dhall', function () {
                return C.e(4393).then(C.t.bind(C, 47706, 23));
              }),
              diff: create_language_async_loader('diff', function () {
                return C.e(6247).then(C.t.bind(C, 20716, 23));
              }),
              django: create_language_async_loader('django', function () {
                return C.e(7899).then(C.t.bind(C, 65932, 23));
              }),
              dnsZoneFile: create_language_async_loader('dnsZoneFile', function () {
                return C.e(5105).then(C.t.bind(C, 11239, 23));
              }),
              docker: create_language_async_loader('docker', function () {
                return C.e(2051).then(C.t.bind(C, 69135, 23));
              }),
              dot: create_language_async_loader('dot', function () {
                return C.e(8752).then(C.t.bind(C, 70437, 23));
              }),
              ebnf: create_language_async_loader('ebnf', function () {
                return C.e(8614).then(C.t.bind(C, 26875, 23));
              }),
              editorconfig: create_language_async_loader('editorconfig', function () {
                return C.e(1151).then(C.t.bind(C, 54406, 23));
              }),
              eiffel: create_language_async_loader('eiffel', function () {
                return C.e(2182).then(C.t.bind(C, 66255, 23));
              }),
              ejs: create_language_async_loader('ejs', function () {
                return C.e(7176).then(C.t.bind(C, 35371, 23));
              }),
              elixir: create_language_async_loader('elixir', function () {
                return C.e(6343).then(C.t.bind(C, 47037, 23));
              }),
              elm: create_language_async_loader('elm', function () {
                return C.e(7838).then(C.t.bind(C, 43852, 23));
              }),
              erb: create_language_async_loader('erb', function () {
                return C.e(2584).then(C.t.bind(C, 73391, 23));
              }),
              erlang: create_language_async_loader('erlang', function () {
                return C.e(2013).then(C.t.bind(C, 93574, 23));
              }),
              etlua: create_language_async_loader('etlua', function () {
                return C.e(8126).then(C.t.bind(C, 72393, 23));
              }),
              excelFormula: create_language_async_loader('excelFormula', function () {
                return C.e(1201).then(C.t.bind(C, 92935, 23));
              }),
              factor: create_language_async_loader('factor', function () {
                return C.e(4424).then(C.t.bind(C, 74439, 23));
              }),
              falselang: create_language_async_loader('falselang', function () {
                return C.e(6174).then(C.t.bind(C, 43965, 23));
              }),
              firestoreSecurityRules: create_language_async_loader('firestoreSecurityRules', function () {
                return C.e(980).then(C.t.bind(C, 86655, 23));
              }),
              flow: create_language_async_loader('flow', function () {
                return C.e(9742).then(C.t.bind(C, 48786, 23));
              }),
              fortran: create_language_async_loader('fortran', function () {
                return C.e(2044).then(C.t.bind(C, 36032, 23));
              }),
              fsharp: create_language_async_loader('fsharp', function () {
                return C.e(741).then(C.t.bind(C, 7706, 23));
              }),
              ftl: create_language_async_loader('ftl', function () {
                return C.e(8389).then(C.t.bind(C, 33622, 23));
              }),
              gap: create_language_async_loader('gap', function () {
                return C.e(180).then(C.t.bind(C, 22974, 23));
              }),
              gcode: create_language_async_loader('gcode', function () {
                return C.e(9674).then(C.t.bind(C, 36760, 23));
              }),
              gdscript: create_language_async_loader('gdscript', function () {
                return C.e(5905).then(C.t.bind(C, 41393, 23));
              }),
              gedcom: create_language_async_loader('gedcom', function () {
                return C.e(5867).then(C.t.bind(C, 28725, 23));
              }),
              gherkin: create_language_async_loader('gherkin', function () {
                return C.e(6051).then(C.t.bind(C, 53822, 23));
              }),
              git: create_language_async_loader('git', function () {
                return C.e(2564).then(C.t.bind(C, 38729, 23));
              }),
              glsl: create_language_async_loader('glsl', function () {
                return C.e(158).then(C.t.bind(C, 42752, 23));
              }),
              gml: create_language_async_loader('gml', function () {
                return C.e(5611).then(C.t.bind(C, 29914, 23));
              }),
              gn: create_language_async_loader('gn', function () {
                return C.e(9009).then(C.t.bind(C, 25550, 23));
              }),
              goModule: create_language_async_loader('goModule', function () {
                return C.e(3152).then(C.t.bind(C, 36743, 23));
              }),
              go: create_language_async_loader('go', function () {
                return C.e(6626).then(C.t.bind(C, 41314, 23));
              }),
              graphql: create_language_async_loader('graphql', function () {
                return C.e(8921).then(C.t.bind(C, 90717, 23));
              }),
              groovy: create_language_async_loader('groovy', function () {
                return C.e(5259).then(C.t.bind(C, 99382, 23));
              }),
              haml: create_language_async_loader('haml', function () {
                return C.e(6487).then(C.t.bind(C, 82165, 23));
              }),
              handlebars: create_language_async_loader('handlebars', function () {
                return C.e(3846).then(C.t.bind(C, 75198, 23));
              }),
              haskell: create_language_async_loader('haskell', function () {
                return C.e(1007).then(C.t.bind(C, 37470, 23));
              }),
              haxe: create_language_async_loader('haxe', function () {
                return C.e(3224).then(C.t.bind(C, 57530, 23));
              }),
              hcl: create_language_async_loader('hcl', function () {
                return C.e(9292).then(C.t.bind(C, 87398, 23));
              }),
              hlsl: create_language_async_loader('hlsl', function () {
                return C.e(9788).then(C.t.bind(C, 11117, 23));
              }),
              hoon: create_language_async_loader('hoon', function () {
                return C.e(9426).then(C.t.bind(C, 23393, 23));
              }),
              hpkp: create_language_async_loader('hpkp', function () {
                return C.e(6749).then(C.t.bind(C, 42503, 23));
              }),
              hsts: create_language_async_loader('hsts', function () {
                return C.e(3140).then(C.t.bind(C, 86804, 23));
              }),
              http: create_language_async_loader('http', function () {
                return C.e(6508).then(C.t.bind(C, 595, 23));
              }),
              ichigojam: create_language_async_loader('ichigojam', function () {
                return C.e(5056).then(C.t.bind(C, 80181, 23));
              }),
              icon: create_language_async_loader('icon', function () {
                return C.e(2413).then(C.t.bind(C, 62177, 23));
              }),
              icuMessageFormat: create_language_async_loader('icuMessageFormat', function () {
                return C.e(9603).then(C.t.bind(C, 71114, 23));
              }),
              idris: create_language_async_loader('idris', function () {
                return C.e(5733).then(C.t.bind(C, 16262, 23));
              }),
              iecst: create_language_async_loader('iecst', function () {
                return C.e(2335).then(C.t.bind(C, 87886, 23));
              }),
              ignore: create_language_async_loader('ignore', function () {
                return C.e(4576).then(C.t.bind(C, 36591, 23));
              }),
              inform7: create_language_async_loader('inform7', function () {
                return C.e(2996).then(C.t.bind(C, 39439, 23));
              }),
              ini: create_language_async_loader('ini', function () {
                return C.e(6495).then(C.t.bind(C, 23233, 23));
              }),
              io: create_language_async_loader('io', function () {
                return C.e(7801).then(C.t.bind(C, 49748, 23));
              }),
              j: create_language_async_loader('j', function () {
                return C.e(4701).then(C.t.bind(C, 24706, 23));
              }),
              java: create_language_async_loader('java', function () {
                return C.e(3980).then(C.t.bind(C, 86106, 23));
              }),
              javadoc: create_language_async_loader('javadoc', function () {
                return C.e(8947).then(C.t.bind(C, 71973, 23));
              }),
              javadoclike: create_language_async_loader('javadoclike', function () {
                return C.e(902).then(C.t.bind(C, 36859, 23));
              }),
              javascript: create_language_async_loader('javascript', function () {
                return C.e(7279).then(C.t.bind(C, 6742, 23));
              }),
              javastacktrace: create_language_async_loader('javastacktrace', function () {
                return C.e(8619).then(C.t.bind(C, 14504, 23));
              }),
              jexl: create_language_async_loader('jexl', function () {
                return C.e(720).then(C.t.bind(C, 83648, 23));
              }),
              jolie: create_language_async_loader('jolie', function () {
                return C.e(8458).then(C.t.bind(C, 87569, 23));
              }),
              jq: create_language_async_loader('jq', function () {
                return C.e(6818).then(C.t.bind(C, 80030, 23));
              }),
              jsExtras: create_language_async_loader('jsExtras', function () {
                return C.e(2816).then(C.t.bind(C, 2959, 23));
              }),
              jsTemplates: create_language_async_loader('jsTemplates', function () {
                return C.e(7661).then(C.t.bind(C, 17775, 23));
              }),
              jsdoc: create_language_async_loader('jsdoc', function () {
                return C.e(8825).then(C.t.bind(C, 16258, 23));
              }),
              json: create_language_async_loader('json', function () {
                return C.e(3657).then(C.t.bind(C, 35297, 23));
              }),
              json5: create_language_async_loader('json5', function () {
                return C.e(2180).then(C.t.bind(C, 22906, 23));
              }),
              jsonp: create_language_async_loader('jsonp', function () {
                return C.e(7561).then(C.t.bind(C, 34796, 23));
              }),
              jsstacktrace: create_language_async_loader('jsstacktrace', function () {
                return C.e(1019).then(C.t.bind(C, 7022, 23));
              }),
              jsx: create_language_async_loader('jsx', function () {
                return C.e(4657).then(C.t.bind(C, 34043, 23));
              }),
              julia: create_language_async_loader('julia', function () {
                return C.e(5508).then(C.t.bind(C, 11515, 23));
              }),
              keepalived: create_language_async_loader('keepalived', function () {
                return C.e(8680).then(C.t.bind(C, 56719, 23));
              }),
              keyman: create_language_async_loader('keyman', function () {
                return C.e(3819).then(C.t.bind(C, 32344, 23));
              }),
              kotlin: create_language_async_loader('kotlin', function () {
                return C.e(4630).then(C.t.bind(C, 1113, 23));
              }),
              kumir: create_language_async_loader('kumir', function () {
                return C.e(1627).then(C.t.bind(C, 4160, 23));
              }),
              kusto: create_language_async_loader('kusto', function () {
                return C.e(7619).then(C.t.bind(C, 27070, 23));
              }),
              latex: create_language_async_loader('latex', function () {
                return C.e(4732).then(C.t.bind(C, 87622, 23));
              }),
              latte: create_language_async_loader('latte', function () {
                return C.e(2153).then(C.t.bind(C, 7393, 23));
              }),
              less: create_language_async_loader('less', function () {
                return C.e(5951).then(C.t.bind(C, 66458, 23));
              }),
              lilypond: create_language_async_loader('lilypond', function () {
                return C.e(781).then(C.t.bind(C, 29233, 23));
              }),
              liquid: create_language_async_loader('liquid', function () {
                return C.e(1323).then(C.t.bind(C, 62365, 23));
              }),
              lisp: create_language_async_loader('lisp', function () {
                return C.e(3520).then(C.t.bind(C, 65369, 23));
              }),
              livescript: create_language_async_loader('livescript', function () {
                return C.e(4698).then(C.t.bind(C, 20619, 23));
              }),
              llvm: create_language_async_loader('llvm', function () {
                return C.e(3914).then(C.t.bind(C, 36342, 23));
              }),
              log: create_language_async_loader('log', function () {
                return C.e(6179).then(C.t.bind(C, 61881, 23));
              }),
              lolcode: create_language_async_loader('lolcode', function () {
                return C.e(7719).then(C.t.bind(C, 66603, 23));
              }),
              lua: create_language_async_loader('lua', function () {
                return C.e(8119).then(C.t.bind(C, 18332, 23));
              }),
              magma: create_language_async_loader('magma', function () {
                return C.e(7515).then(C.t.bind(C, 16849, 23));
              }),
              makefile: create_language_async_loader('makefile', function () {
                return C.e(7576).then(C.t.bind(C, 64538, 23));
              }),
              markdown: create_language_async_loader('markdown', function () {
                return C.e(9835).then(C.t.bind(C, 33141, 23));
              }),
              markupTemplating: create_language_async_loader('markupTemplating', function () {
                return C.e(3047).then(C.t.bind(C, 92223, 23));
              }),
              markup: create_language_async_loader('markup', function () {
                return C.e(2496).then(C.t.bind(C, 35210, 23));
              }),
              matlab: create_language_async_loader('matlab', function () {
                return C.e(8404).then(C.t.bind(C, 13371, 23));
              }),
              maxscript: create_language_async_loader('maxscript', function () {
                return C.e(8440).then(C.t.bind(C, 46961, 23));
              }),
              mel: create_language_async_loader('mel', function () {
                return C.e(226).then(C.t.bind(C, 82387, 23));
              }),
              mermaid: create_language_async_loader('mermaid', function () {
                return C.e(4325).then(C.t.bind(C, 52289, 23));
              }),
              mizar: create_language_async_loader('mizar', function () {
                return C.e(4069).then(C.t.bind(C, 27400, 23));
              }),
              mongodb: create_language_async_loader('mongodb', function () {
                return C.e(1952).then(C.t.bind(C, 74544, 23));
              }),
              monkey: create_language_async_loader('monkey', function () {
                return C.e(8513).then(C.t.bind(C, 87733, 23));
              }),
              moonscript: create_language_async_loader('moonscript', function () {
                return C.e(68).then(C.t.bind(C, 32373, 23));
              }),
              n1ql: create_language_async_loader('n1ql', function () {
                return C.e(9582).then(C.t.bind(C, 49280, 23));
              }),
              n4js: create_language_async_loader('n4js', function () {
                return C.e(5014).then(C.t.bind(C, 29903, 23));
              }),
              nand2tetrisHdl: create_language_async_loader('nand2tetrisHdl', function () {
                return C.e(224).then(C.t.bind(C, 33398, 23));
              }),
              naniscript: create_language_async_loader('naniscript', function () {
                return C.e(1975).then(C.t.bind(C, 42022, 23));
              }),
              nasm: create_language_async_loader('nasm', function () {
                return C.e(7253).then(C.t.bind(C, 17075, 23));
              }),
              neon: create_language_async_loader('neon', function () {
                return C.e(7996).then(C.t.bind(C, 53912, 23));
              }),
              nevod: create_language_async_loader('nevod', function () {
                return C.e(271).then(C.t.bind(C, 51855, 23));
              }),
              nginx: create_language_async_loader('nginx', function () {
                return C.e(4052).then(C.t.bind(C, 34877, 23));
              }),
              nim: create_language_async_loader('nim', function () {
                return C.e(3025).then(C.t.bind(C, 51810, 23));
              }),
              nix: create_language_async_loader('nix', function () {
                return C.e(3821).then(C.t.bind(C, 86701, 23));
              }),
              nsis: create_language_async_loader('nsis', function () {
                return C.e(3502).then(C.t.bind(C, 49229, 23));
              }),
              objectivec: create_language_async_loader('objectivec', function () {
                return C.e(8336).then(C.t.bind(C, 38249, 23));
              }),
              ocaml: create_language_async_loader('ocaml', function () {
                return C.e(8992).then(C.t.bind(C, 34701, 23));
              }),
              opencl: create_language_async_loader('opencl', function () {
                return C.e(8e3).then(C.t.bind(C, 7570, 23));
              }),
              openqasm: create_language_async_loader('openqasm', function () {
                return C.e(8712).then(C.t.bind(C, 20599, 23));
              }),
              oz: create_language_async_loader('oz', function () {
                return C.e(7658).then(C.t.bind(C, 71221, 23));
              }),
              parigp: create_language_async_loader('parigp', function () {
                return C.e(9979).then(C.t.bind(C, 48253, 23));
              }),
              parser: create_language_async_loader('parser', function () {
                return C.e(672).then(C.t.bind(C, 40085, 23));
              }),
              pascal: create_language_async_loader('pascal', function () {
                return C.e(7833).then(C.t.bind(C, 14886, 23));
              }),
              pascaligo: create_language_async_loader('pascaligo', function () {
                return C.e(3196).then(C.t.bind(C, 55380, 23));
              }),
              pcaxis: create_language_async_loader('pcaxis', function () {
                return C.e(2726).then(C.t.bind(C, 19683, 23));
              }),
              peoplecode: create_language_async_loader('peoplecode', function () {
                return C.e(48).then(C.t.bind(C, 15848, 23));
              }),
              perl: create_language_async_loader('perl', function () {
                return C.e(4157).then(C.t.bind(C, 72184, 23));
              }),
              phpExtras: create_language_async_loader('phpExtras', function () {
                return C.e(5793).then(C.t.bind(C, 17749, 23));
              }),
              php: create_language_async_loader('php', function () {
                return C.e(2227).then(C.t.bind(C, 98431, 23));
              }),
              phpdoc: create_language_async_loader('phpdoc', function () {
                return C.e(4884).then(C.t.bind(C, 34455, 23));
              }),
              plsql: create_language_async_loader('plsql', function () {
                return C.e(8840).then(C.t.bind(C, 99198, 23));
              }),
              powerquery: create_language_async_loader('powerquery', function () {
                return C.e(9311).then(C.t.bind(C, 812, 23));
              }),
              powershell: create_language_async_loader('powershell', function () {
                return C.e(342).then(C.t.bind(C, 4335, 23));
              }),
              processing: create_language_async_loader('processing', function () {
                return C.e(9770).then(C.t.bind(C, 68379, 23));
              }),
              prolog: create_language_async_loader('prolog', function () {
                return C.e(4045).then(C.t.bind(C, 32518, 23));
              }),
              promql: create_language_async_loader('promql', function () {
                return C.e(4879).then(C.t.bind(C, 29420, 23));
              }),
              properties: create_language_async_loader('properties', function () {
                return C.e(81).then(C.t.bind(C, 87504, 23));
              }),
              protobuf: create_language_async_loader('protobuf', function () {
                return C.e(979).then(C.t.bind(C, 99076, 23));
              }),
              psl: create_language_async_loader('psl', function () {
                return C.e(1599).then(C.t.bind(C, 70048, 23));
              }),
              pug: create_language_async_loader('pug', function () {
                return C.e(9851).then(C.t.bind(C, 490, 23));
              }),
              puppet: create_language_async_loader('puppet', function () {
                return C.e(6861).then(C.t.bind(C, 81930, 23));
              }),
              pure: create_language_async_loader('pure', function () {
                return C.e(9315).then(C.t.bind(C, 19494, 23));
              }),
              purebasic: create_language_async_loader('purebasic', function () {
                return C.e(3422).then(C.t.bind(C, 87979, 23));
              }),
              purescript: create_language_async_loader('purescript', function () {
                return C.e(4730).then(C.t.bind(C, 30918, 23));
              }),
              python: create_language_async_loader('python', function () {
                return C.e(2891).then(C.t.bind(C, 18820, 23));
              }),
              q: create_language_async_loader('q', function () {
                return C.e(1751).then(C.t.bind(C, 61873, 23));
              }),
              qml: create_language_async_loader('qml', function () {
                return C.e(2221).then(C.t.bind(C, 12473, 23));
              }),
              qore: create_language_async_loader('qore', function () {
                return C.e(2547).then(C.t.bind(C, 20972, 23));
              }),
              qsharp: create_language_async_loader('qsharp', function () {
                return C.e(8347).then(C.t.bind(C, 44691, 23));
              }),
              r: create_language_async_loader('r', function () {
                return C.e(7882).then(C.t.bind(C, 98825, 23));
              }),
              racket: create_language_async_loader('racket', function () {
                return C.e(4213).then(C.t.bind(C, 79004, 23));
              }),
              reason: create_language_async_loader('reason', function () {
                return C.e(8811).then(C.t.bind(C, 5767, 23));
              }),
              regex: create_language_async_loader('regex', function () {
                return C.e(6963).then(C.t.bind(C, 59316, 23));
              }),
              rego: create_language_async_loader('rego', function () {
                return C.e(869).then(C.t.bind(C, 91551, 23));
              }),
              renpy: create_language_async_loader('renpy', function () {
                return C.e(9291).then(C.t.bind(C, 71401, 23));
              }),
              rest: create_language_async_loader('rest', function () {
                return C.e(2348).then(C.t.bind(C, 1953, 23));
              }),
              rip: create_language_async_loader('rip', function () {
                return C.e(1768).then(C.t.bind(C, 91063, 23));
              }),
              roboconf: create_language_async_loader('roboconf', function () {
                return C.e(3236).then(C.t.bind(C, 95146, 23));
              }),
              robotframework: create_language_async_loader('robotframework', function () {
                return C.e(5755).then(C.t.bind(C, 4506, 23));
              }),
              ruby: create_language_async_loader('ruby', function () {
                return C.e(369).then(C.t.bind(C, 41148, 23));
              }),
              rust: create_language_async_loader('rust', function () {
                return C.e(1001).then(C.t.bind(C, 74545, 23));
              }),
              sas: create_language_async_loader('sas', function () {
                return C.e(8067).then(C.t.bind(C, 15594, 23));
              }),
              sass: create_language_async_loader('sass', function () {
                return C.e(9797).then(C.t.bind(C, 12184, 23));
              }),
              scala: create_language_async_loader('scala', function () {
                return C.e(3818).then(C.t.bind(C, 35560, 23));
              }),
              scheme: create_language_async_loader('scheme', function () {
                return C.e(5085).then(C.t.bind(C, 51979, 23));
              }),
              scss: create_language_async_loader('scss', function () {
                return C.e(7286).then(C.t.bind(C, 90514, 23));
              }),
              shellSession: create_language_async_loader('shellSession', function () {
                return C.e(7976).then(C.t.bind(C, 62429, 23));
              }),
              smali: create_language_async_loader('smali', function () {
                return C.e(5300).then(C.t.bind(C, 2618, 23));
              }),
              smalltalk: create_language_async_loader('smalltalk', function () {
                return C.e(2822).then(C.t.bind(C, 45283, 23));
              }),
              smarty: create_language_async_loader('smarty', function () {
                return C.e(849).then(C.t.bind(C, 61916, 23));
              }),
              sml: create_language_async_loader('sml', function () {
                return C.e(545).then(C.t.bind(C, 14474, 23));
              }),
              solidity: create_language_async_loader('solidity', function () {
                return C.e(4306).then(C.t.bind(C, 25687, 23));
              }),
              solutionFile: create_language_async_loader('solutionFile', function () {
                return C.e(768).then(C.t.bind(C, 50395, 23));
              }),
              soy: create_language_async_loader('soy', function () {
                return C.e(1423).then(C.t.bind(C, 10651, 23));
              }),
              sparql: create_language_async_loader('sparql', function () {
                return C.e(9887).then(C.t.bind(C, 22978, 23));
              }),
              splunkSpl: create_language_async_loader('splunkSpl', function () {
                return C.e(2016).then(C.t.bind(C, 71724, 23));
              }),
              sqf: create_language_async_loader('sqf', function () {
                return C.e(8504).then(C.t.bind(C, 28221, 23));
              }),
              sql: create_language_async_loader('sql', function () {
                return C.e(7055).then(C.t.bind(C, 62969, 23));
              }),
              squirrel: create_language_async_loader('squirrel', function () {
                return C.e(6731).then(C.t.bind(C, 1805, 23));
              }),
              stan: create_language_async_loader('stan', function () {
                return C.e(7842).then(C.t.bind(C, 97983, 23));
              }),
              stylus: create_language_async_loader('stylus', function () {
                return C.e(1621).then(C.t.bind(C, 28853, 23));
              }),
              swift: create_language_async_loader('swift', function () {
                return C.e(3327).then(C.t.bind(C, 9287, 23));
              }),
              systemd: create_language_async_loader('systemd', function () {
                return C.e(4527).then(C.t.bind(C, 99829, 23));
              }),
              t4Cs: create_language_async_loader('t4Cs', function () {
                return C.e(156).then(C.t.bind(C, 46560, 23));
              }),
              t4Templating: create_language_async_loader('t4Templating', function () {
                return C.e(3279).then(C.t.bind(C, 62645, 23));
              }),
              t4Vb: create_language_async_loader('t4Vb', function () {
                return C.e(2355).then(C.t.bind(C, 44899, 23));
              }),
              tap: create_language_async_loader('tap', function () {
                return C.e(6975).then(C.t.bind(C, 35500, 23));
              }),
              tcl: create_language_async_loader('tcl', function () {
                return C.e(5165).then(C.t.bind(C, 21985, 23));
              }),
              textile: create_language_async_loader('textile', function () {
                return C.e(7097).then(C.t.bind(C, 88031, 23));
              }),
              toml: create_language_async_loader('toml', function () {
                return C.e(8817).then(C.t.bind(C, 15924, 23));
              }),
              tremor: create_language_async_loader('tremor', function () {
                return C.e(7417).then(C.t.bind(C, 73550, 23));
              }),
              tsx: create_language_async_loader('tsx', function () {
                return C.e(2509).then(C.t.bind(C, 98844, 23));
              }),
              tt2: create_language_async_loader('tt2', function () {
                return C.e(3444).then(C.t.bind(C, 60502, 23));
              }),
              turtle: create_language_async_loader('turtle', function () {
                return C.e(8244).then(C.t.bind(C, 66445, 23));
              }),
              twig: create_language_async_loader('twig', function () {
                return C.e(8827).then(C.t.bind(C, 53044, 23));
              }),
              typescript: create_language_async_loader('typescript', function () {
                return C.e(9461).then(C.t.bind(C, 29002, 23));
              }),
              typoscript: create_language_async_loader('typoscript', function () {
                return C.e(255).then(C.t.bind(C, 92247, 23));
              }),
              unrealscript: create_language_async_loader('unrealscript', function () {
                return C.e(560).then(C.t.bind(C, 71521, 23));
              }),
              uorazor: create_language_async_loader('uorazor', function () {
                return C.e(5797).then(C.t.bind(C, 79919, 23));
              }),
              uri: create_language_async_loader('uri', function () {
                return C.e(2943).then(C.t.bind(C, 1262, 23));
              }),
              v: create_language_async_loader('v', function () {
                return C.e(171).then(C.t.bind(C, 7808, 23));
              }),
              vala: create_language_async_loader('vala', function () {
                return C.e(8966).then(C.t.bind(C, 91613, 23));
              }),
              vbnet: create_language_async_loader('vbnet', function () {
                return C.e(5896).then(C.t.bind(C, 40272, 23));
              }),
              velocity: create_language_async_loader('velocity', function () {
                return C.e(2980).then(C.t.bind(C, 6058, 23));
              }),
              verilog: create_language_async_loader('verilog', function () {
                return C.e(8819).then(C.t.bind(C, 9004, 23));
              }),
              vhdl: create_language_async_loader('vhdl', function () {
                return C.e(1167).then(C.t.bind(C, 36917, 23));
              }),
              vim: create_language_async_loader('vim', function () {
                return C.e(1929).then(C.t.bind(C, 9627, 23));
              }),
              visualBasic: create_language_async_loader('visualBasic', function () {
                return C.e(6558).then(C.t.bind(C, 75705, 23));
              }),
              warpscript: create_language_async_loader('warpscript', function () {
                return C.e(1362).then(C.t.bind(C, 57259, 23));
              }),
              wasm: create_language_async_loader('wasm', function () {
                return C.e(206).then(C.t.bind(C, 84128, 23));
              }),
              webIdl: create_language_async_loader('webIdl', function () {
                return C.e(8692).then(C.t.bind(C, 81916, 23));
              }),
              wiki: create_language_async_loader('wiki', function () {
                return C.e(1253).then(C.t.bind(C, 40727, 23));
              }),
              wolfram: create_language_async_loader('wolfram', function () {
                return C.e(4372).then(C.t.bind(C, 28257, 23));
              }),
              wren: create_language_async_loader('wren', function () {
                return C.e(7332).then(C.t.bind(C, 20062, 23));
              }),
              xeora: create_language_async_loader('xeora', function () {
                return C.e(6574).then(C.t.bind(C, 47410, 23));
              }),
              xmlDoc: create_language_async_loader('xmlDoc', function () {
                return C.e(9389).then(C.t.bind(C, 78241, 23));
              }),
              xojo: create_language_async_loader('xojo', function () {
                return C.e(3116).then(C.t.bind(C, 45597, 23));
              }),
              xquery: create_language_async_loader('xquery', function () {
                return C.e(982).then(C.t.bind(C, 82420, 23));
              }),
              yaml: create_language_async_loader('yaml', function () {
                return C.e(5983).then(C.t.bind(C, 43837, 23));
              }),
              yang: create_language_async_loader('yang', function () {
                return C.e(7393).then(C.t.bind(C, 39744, 23));
              }),
              zig: create_language_async_loader('zig', function () {
                return C.e(4659).then(C.t.bind(C, 99986, 23));
              })
            },
            registerLanguage: function (w, S, C) {
              return w.register(C);
            }
          }).loader),
          (er = I.isLanguageRegistered),
          (en = I.registerLanguage),
          (ei = I.languageLoaders),
          (eo = I.noAsyncLoadingLanguages),
          _defineProperty(
            (es = (function (w) {
              _inherits(ReactAsyncHighlighter, w);
              var S,
                C = _createSuper(ReactAsyncHighlighter);
              function ReactAsyncHighlighter() {
                return _classCallCheck(this, ReactAsyncHighlighter), C.apply(this, arguments);
              }
              return (
                _createClass(
                  ReactAsyncHighlighter,
                  [
                    {
                      key: 'componentDidUpdate',
                      value: function () {
                        !ReactAsyncHighlighter.isRegistered(this.props.language) && ei && this.loadLanguage();
                      }
                    },
                    {
                      key: 'componentDidMount',
                      value: function () {
                        var w = this;
                        ReactAsyncHighlighter.astGeneratorPromise || ReactAsyncHighlighter.loadAstGenerator(),
                          ReactAsyncHighlighter.astGenerator ||
                            ReactAsyncHighlighter.astGeneratorPromise.then(function () {
                              w.forceUpdate();
                            }),
                          !ReactAsyncHighlighter.isRegistered(this.props.language) && ei && this.loadLanguage();
                      }
                    },
                    {
                      key: 'loadLanguage',
                      value: function () {
                        var w = this,
                          S = this.props.language;
                        'text' !== S &&
                          ReactAsyncHighlighter.loadLanguage(S)
                            .then(function () {
                              return w.forceUpdate();
                            })
                            .catch(function () {});
                      }
                    },
                    {
                      key: 'normalizeLanguage',
                      value: function (w) {
                        return ReactAsyncHighlighter.isSupportedLanguage(w) ? w : 'text';
                      }
                    },
                    {
                      key: 'render',
                      value: function () {
                        return el.createElement(
                          ReactAsyncHighlighter.highlightInstance,
                          (0, tp.Z)({}, this.props, {
                            language: this.normalizeLanguage(this.props.language),
                            astGenerator: ReactAsyncHighlighter.astGenerator
                          })
                        );
                      }
                    }
                  ],
                  [
                    {
                      key: 'preload',
                      value: function () {
                        return ReactAsyncHighlighter.loadAstGenerator();
                      }
                    },
                    {
                      key: 'loadLanguage',
                      value:
                        ((S = _asyncToGenerator(
                          tg().mark(function _callee(w) {
                            var S;
                            return tg().wrap(function (C) {
                              for (;;)
                                switch ((C.prev = C.next)) {
                                  case 0:
                                    if ('function' != typeof (S = ei[w])) {
                                      C.next = 5;
                                      break;
                                    }
                                    return C.abrupt('return', S(ReactAsyncHighlighter.registerLanguage));
                                  case 5:
                                    throw Error('Language '.concat(w, ' not supported'));
                                  case 6:
                                  case 'end':
                                    return C.stop();
                                }
                            }, _callee);
                          })
                        )),
                        function (w) {
                          return S.apply(this, arguments);
                        })
                    },
                    {
                      key: 'isSupportedLanguage',
                      value: function (w) {
                        return ReactAsyncHighlighter.isRegistered(w) || 'function' == typeof ei[w];
                      }
                    },
                    {
                      key: 'loadAstGenerator',
                      value: function () {
                        return (
                          (ReactAsyncHighlighter.astGeneratorPromise = $().then(function (w) {
                            (ReactAsyncHighlighter.astGenerator = w),
                              en &&
                                ReactAsyncHighlighter.languages.forEach(function (S, C) {
                                  return en(w, C, S);
                                });
                          })),
                          ReactAsyncHighlighter.astGeneratorPromise
                        );
                      }
                    }
                  ]
                ),
                ReactAsyncHighlighter
              );
            })(el.PureComponent)),
            'astGenerator',
            null
          ),
          _defineProperty(es, 'highlightInstance', highlight(null, {})),
          _defineProperty(es, 'astGeneratorPromise', null),
          _defineProperty(es, 'languages', new Map()),
          _defineProperty(es, 'supportedLanguages', I.supportedLanguages || Object.keys(ei || {})),
          _defineProperty(es, 'isRegistered', function (w) {
            if (eo) return !0;
            if (!en) throw Error("Current syntax highlighter doesn't support registration of languages");
            return es.astGenerator ? er(es.astGenerator, w) : es.languages.has(w);
          }),
          _defineProperty(es, 'registerLanguage', function (w, S) {
            if (!en) throw Error("Current syntax highlighter doesn't support registration of languages");
            if (es.astGenerator) return en(es.astGenerator, w, S);
            es.languages.set(w, S);
          }),
          es);
      function getTheme(w) {
        return { mode: 'light', ...(null == w ? void 0 : w.theme) };
      }
      function themed(w) {
        return function (S) {
          return w[getTheme(S).mode];
        };
      }
      let defaultColors = (w) => {
          let S = { theme: w };
          return {
            lineNumberColor: themed({ light: '#383a42', dark: '#abb2bf' })(S),
            lineNumberBgColor: themed({ light: '#fafafa', dark: '#282c34' })(S),
            backgroundColor: themed({ light: '#fafafa', dark: '#282c34' })(S),
            textColor: themed({ light: '#383a42', dark: '#abb2bf' })(S),
            substringColor: themed({ light: '#e45649', dark: '#e06c75' })(S),
            keywordColor: themed({ light: '#a626a4', dark: '#c678dd' })(S),
            attributeColor: themed({ light: '#50a14f', dark: '#98c379' })(S),
            selectorAttributeColor: themed({ light: '#e45649', dark: '#e06c75' })(S),
            docTagColor: themed({ light: '#a626a4', dark: '#c678dd' })(S),
            nameColor: themed({ light: '#e45649', dark: '#e06c75' })(S),
            builtInColor: themed({ light: '#c18401', dark: '#e6c07b' })(S),
            literalColor: themed({ light: '#0184bb', dark: '#56b6c2' })(S),
            bulletColor: themed({ light: '#4078f2', dark: '#61aeee' })(S),
            codeColor: themed({ light: '#383a42', dark: '#abb2bf' })(S),
            additionColor: themed({ light: '#50a14f', dark: '#98c379' })(S),
            regexpColor: themed({ light: '#50a14f', dark: '#98c379' })(S),
            symbolColor: themed({ light: '#4078f2', dark: '#61aeee' })(S),
            variableColor: themed({ light: '#986801', dark: '#d19a66' })(S),
            templateVariableColor: themed({ light: '#986801', dark: '#d19a66' })(S),
            linkColor: themed({ light: '#4078f2', dark: '#61aeee' })(S),
            selectorClassColor: themed({ light: '#986801', dark: '#d19a66' })(S),
            typeColor: themed({ light: '#986801', dark: '#d19a66' })(S),
            stringColor: themed({ light: '#50a14f', dark: '#98c379' })(S),
            selectorIdColor: themed({ light: '#4078f2', dark: '#61aeee' })(S),
            quoteColor: themed({ light: '#a0a1a7', dark: '#5c6370' })(S),
            templateTagColor: themed({ light: '#383a42', dark: '#abb2bf' })(S),
            deletionColor: themed({ light: '#e45649', dark: '#e06c75' })(S),
            titleColor: themed({ light: '#4078f2', dark: '#61aeee' })(S),
            sectionColor: themed({ light: '#e45649', dark: '#e06c75' })(S),
            commentColor: themed({ light: '#a0a1a7', dark: '#5c6370' })(S),
            metaKeywordColor: themed({ light: '#383a42', dark: '#abb2bf' })(S),
            metaColor: themed({ light: '#4078f2', dark: '#61aeee' })(S),
            functionColor: themed({ light: '#383a42', dark: '#abb2bf' })(S),
            numberColor: themed({ light: '#986801', dark: '#d19a66' })(S)
          };
        },
        tx = 'inherit',
        tw = 'inherit',
        tk = { fontSize: tw, fontFamily: tx, lineHeight: 20 / 12, padding: 8 },
        lineNumberContainerStyle = (w) => ({
          fontSize: tw,
          lineHeight: 20 / 14,
          color: w.lineNumberColor,
          backgroundColor: w.lineNumberBgColor,
          flexShrink: 0,
          padding: 8,
          textAlign: 'right',
          userSelect: 'none'
        }),
        sharedCodeStyle = (w) => ({
          key: { color: w.keywordColor, fontWeight: 'bolder' },
          keyword: { color: w.keywordColor, fontWeight: 'bolder' },
          'attr-name': { color: w.attributeColor },
          selector: { color: w.selectorTagColor },
          comment: { color: w.commentColor, fontFamily: tx, fontStyle: 'italic' },
          'block-comment': { color: w.commentColor, fontFamily: tx, fontStyle: 'italic' },
          'function-name': { color: w.sectionColor },
          'class-name': { color: w.sectionColor },
          doctype: { color: w.docTagColor },
          substr: { color: w.substringColor },
          namespace: { color: w.nameColor },
          builtin: { color: w.builtInColor },
          entity: { color: w.literalColor },
          bullet: { color: w.bulletColor },
          code: { color: w.codeColor },
          addition: { color: w.additionColor },
          regex: { color: w.regexpColor },
          symbol: { color: w.symbolColor },
          variable: { color: w.variableColor },
          url: { color: w.linkColor },
          'selector-attr': { color: w.selectorAttributeColor },
          'selector-pseudo': { color: w.selectorPseudoColor },
          type: { color: w.typeColor },
          string: { color: w.stringColor },
          quote: { color: w.quoteColor },
          tag: { color: w.templateTagColor },
          deletion: { color: w.deletionColor },
          title: { color: w.titleColor },
          section: { color: w.sectionColor },
          'meta-keyword': { color: w.metaKeywordColor },
          meta: { color: w.metaColor },
          italic: { fontStyle: 'italic' },
          bold: { fontWeight: 'bolder' },
          function: { color: w.functionColor },
          number: { color: w.numberColor }
        }),
        codeStyle = (w) => ({
          fontSize: tw,
          fontFamily: tx,
          background: w.backgroundColor,
          color: w.textColor,
          borderRadius: 3,
          display: 'flex',
          lineHeight: 20 / 14,
          overflowX: 'auto',
          whiteSpace: 'pre'
        }),
        codeBlockStyle = (w) => ({ 'pre[class*="language-"]': codeStyle(w), ...sharedCodeStyle(w) }),
        inlineCodeStyle = (w) => ({
          'pre[class*="language-"]': { ...codeStyle(w), padding: '2px 4px', display: 'inline', whiteSpace: 'pre-wrap' },
          ...sharedCodeStyle(w)
        });
      function applyTheme(w = { mode: 'light' }) {
        let S = { ...defaultColors(w), ...w };
        return {
          lineNumberContainerStyle: lineNumberContainerStyle(S),
          codeBlockStyle: codeBlockStyle(S),
          inlineCodeStyle: inlineCodeStyle(S),
          codeContainerStyle: tk
        };
      }
      let tS = Object.freeze([
          { name: 'PHP', alias: ['php', 'php3', 'php4', 'php5'], value: 'php' },
          { name: 'Java', alias: ['java'], value: 'java' },
          { name: 'CSharp', alias: ['csharp', 'c#', 'cs'], value: 'csharp' },
          { name: 'Python', alias: ['python', 'py'], value: 'python' },
          { name: 'JavaScript', alias: ['javascript', 'js'], value: 'javascript' },
          { name: 'XML', alias: ['xml'], value: 'xml' },
          { name: 'HTML', alias: ['html', 'htm'], value: 'markup' },
          { name: 'C++', alias: ['c++', 'cpp', 'clike'], value: 'cpp' },
          { name: 'Ruby', alias: ['ruby', 'rb', 'duby'], value: 'ruby' },
          { name: 'Objective-C', alias: ['objective-c', 'objectivec', 'obj-c', 'objc'], value: 'objectivec' },
          { name: 'C', alias: ['c'], value: 'cpp' },
          { name: 'Swift', alias: ['swift'], value: 'swift' },
          { name: 'TeX', alias: ['tex', 'latex'], value: 'tex' },
          { name: 'Shell', alias: ['shell', 'sh', 'ksh', 'zsh'], value: 'bash' },
          { name: 'Scala', alias: ['scala'], value: 'scala' },
          { name: 'Go', alias: ['go'], value: 'go' },
          { name: 'ActionScript', alias: ['actionscript', 'actionscript3', 'as'], value: 'actionscript' },
          { name: 'ColdFusion', alias: ['coldfusion'], value: 'xml' },
          { name: 'JavaFX', alias: ['javafx', 'jfx'], value: 'java' },
          { name: 'VbNet', alias: ['vbnet', 'vb.net'], value: 'vbnet' },
          { name: 'JSON', alias: ['json'], value: 'json' },
          { name: 'MATLAB', alias: ['matlab'], value: 'matlab' },
          { name: 'Groovy', alias: ['groovy'], value: 'groovy' },
          {
            name: 'SQL',
            alias: [
              'sql',
              'postgresql',
              'postgres',
              'plpgsql',
              'psql',
              'postgresql-console',
              'postgres-console',
              'tsql',
              't-sql',
              'mysql',
              'sqlite'
            ],
            value: 'sql'
          },
          { name: 'R', alias: ['r'], value: 'r' },
          { name: 'Perl', alias: ['perl', 'pl'], value: 'perl' },
          { name: 'Lua', alias: ['lua'], value: 'lua' },
          { name: 'Delphi', alias: ['delphi', 'pas', 'pascal', 'objectpascal'], value: 'delphi' },
          { name: 'XML', alias: ['xml'], value: 'xml' },
          { name: 'TypeScript', alias: ['typescript', 'ts', 'tsx'], value: 'typescript' },
          { name: 'CoffeeScript', alias: ['coffeescript', 'coffee-script', 'coffee'], value: 'coffeescript' },
          { name: 'Haskell', alias: ['haskell', 'hs'], value: 'haskell' },
          { name: 'Puppet', alias: ['puppet'], value: 'puppet' },
          { name: 'Arduino', alias: ['arduino'], value: 'arduino' },
          { name: 'Fortran', alias: ['fortran'], value: 'fortran' },
          { name: 'Erlang', alias: ['erlang', 'erl'], value: 'erlang' },
          { name: 'PowerShell', alias: ['powershell', 'posh', 'ps1', 'psm1'], value: 'powershell' },
          { name: 'Haxe', alias: ['haxe', 'hx', 'hxsl'], value: 'haxe' },
          { name: 'Elixir', alias: ['elixir', 'ex', 'exs'], value: 'elixir' },
          { name: 'Verilog', alias: ['verilog', 'v'], value: 'verilog' },
          { name: 'Rust', alias: ['rust'], value: 'rust' },
          { name: 'VHDL', alias: ['vhdl'], value: 'vhdl' },
          { name: 'Sass', alias: ['sass'], value: 'less' },
          { name: 'OCaml', alias: ['ocaml'], value: 'ocaml' },
          { name: 'Dart', alias: ['dart'], value: 'dart' },
          { name: 'CSS', alias: ['css'], value: 'css' },
          { name: 'reStructuredText', alias: ['restructuredtext', 'rst', 'rest'], value: 'rest' },
          { name: 'ObjectPascal', alias: ['objectpascal'], value: 'delphi' },
          { name: 'Kotlin', alias: ['kotlin'], value: 'kotlin' },
          { name: 'D', alias: ['d'], value: 'd' },
          { name: 'Octave', alias: ['octave'], value: 'matlab' },
          { name: 'QML', alias: ['qbs', 'qml'], value: 'qml' },
          { name: 'Prolog', alias: ['prolog'], value: 'prolog' },
          { name: 'FoxPro', alias: ['foxpro', 'vfp', 'clipper', 'xbase'], value: 'vbnet' },
          { name: 'Scheme', alias: ['scheme', 'scm'], value: 'scheme' },
          { name: 'CUDA', alias: ['cuda', 'cu'], value: 'cpp' },
          { name: 'Julia', alias: ['julia', 'jl'], value: 'julia' },
          { name: 'Racket', alias: ['racket', 'rkt'], value: 'lisp' },
          { name: 'Ada', alias: ['ada', 'ada95', 'ada2005'], value: 'ada' },
          { name: 'Tcl', alias: ['tcl'], value: 'tcl' },
          { name: 'Mathematica', alias: ['mathematica', 'mma', 'nb'], value: 'mathematica' },
          { name: 'Autoit', alias: ['autoit'], value: 'autoit' },
          { name: 'StandardML', alias: ['standardmL', 'sml', 'standardml'], value: 'sml' },
          { name: 'Objective-J', alias: ['objective-j', 'objectivej', 'obj-j', 'objj'], value: 'objectivec' },
          { name: 'Smalltalk', alias: ['smalltalk', 'squeak', 'st'], value: 'smalltalk' },
          { name: 'Vala', alias: ['vala', 'vapi'], value: 'vala' },
          { name: 'ABAP', alias: ['abap'], value: 'sql' },
          { name: 'LiveScript', alias: ['livescript', 'live-script'], value: 'livescript' },
          { name: 'XQuery', alias: ['xquery', 'xqy', 'xq', 'xql', 'xqm'], value: 'xquery' },
          { name: 'PlainText', alias: ['text', 'plaintext'], value: 'text' },
          { name: 'Yaml', alias: ['yaml', 'yml'], value: 'yaml' },
          { name: 'GraphQL', alias: ['graphql', 'gql'], value: 'graphql' }
        ]),
        normalizeLanguage = (w) => {
          if (!w) return '';
          let S = tS.find((S) => S.name === w || S.alias.includes(w));
          return S ? S.value : w || 'text';
        };
      let Code = class Code extends el.PureComponent {
        constructor() {
          super(...arguments), (this._isMounted = !1);
        }
        componentDidMount() {
          this._isMounted = !0;
        }
        componentWillUnmount() {
          this._isMounted = !1;
        }
        getLineOpacity(w) {
          if (!this.props.highlight) return 1;
          let S = this.props.highlight
            .split(',')
            .map((w) => {
              if (w.indexOf('-') > 0) {
                let [S, C] = w.split('-').map(Number).sort();
                return Array(C + 1)
                  .fill(void 0)
                  .map((w, S) => S)
                  .slice(S, C + 1);
              }
              return Number(w);
            })
            .reduce((w, S) => w.concat(S), []);
          return 0 === S.length || S.includes(w) ? 1 : 0.3;
        }
        render() {
          let { inlineCodeStyle: w } = applyTheme(this.props.theme),
            S = normalizeLanguage(this.props.language),
            C = {
              language: S,
              PreTag: this.props.preTag,
              style: this.props.codeStyle || w,
              showLineNumbers: this.props.showLineNumbers,
              startingLineNumber: this.props.startingLineNumber,
              codeTagProps: this.props.codeTagProps,
              wrapLongLines: this.props.wrapLongLines
            };
          return el.createElement(
            t_,
            Object.assign({}, C, {
              wrapLines: this.props.highlight.length > 0,
              customStyle: this.props.customStyle,
              lineProps: (w) => ({ style: { opacity: this.getLineOpacity(w), ...this.props.lineNumberContainerStyle } })
            }),
            this.props.text
          );
        }
      };
      Code.defaultProps = {
        theme: {},
        showLineNumbers: !1,
        wrapLongLines: !1,
        startingLineNumber: 1,
        lineNumberContainerStyle: {},
        codeTagProps: {},
        preTag: 'span',
        highlight: '',
        customStyle: {}
      };
      let tC = 'text';
      let CodeBlock = class CodeBlock extends el.PureComponent {
        constructor() {
          super(...arguments),
            (this._isMounted = !1),
            (this.handleCopy = (w) => {
              let S = w.nativeEvent.clipboardData;
              if (S) {
                w.preventDefault();
                let C = window.getSelection();
                if (null === C) return;
                let I = C.toString(),
                  $ = `<!doctype html><html><head></head><body><pre>${I}</pre></body></html>`;
                S.clearData(), S.setData('text/html', $), S.setData('text/plain', I);
              }
            });
        }
        componentDidMount() {
          this._isMounted = !0;
        }
        componentWillUnmount() {
          this._isMounted = !1;
        }
        render() {
          var w, S, C, I;
          let {
              lineNumberContainerStyle: $,
              codeBlockStyle: er,
              codeContainerStyle: en
            } = applyTheme(this.props.theme),
            ei = {
              language: this.props.language || tC,
              codeStyle: { ...er, ...(null === (w = this.props) || void 0 === w ? void 0 : w.codeBlockStyle) },
              customStyle: null === (S = this.props) || void 0 === S ? void 0 : S.customStyle,
              showLineNumbers: this.props.showLineNumbers,
              startingLineNumber: this.props.startingLineNumber,
              codeTagProps: {
                style: { ...en, ...(null === (C = this.props) || void 0 === C ? void 0 : C.codeContainerStyle) }
              },
              lineNumberContainerStyle: {
                ...$,
                ...(null === (I = this.props) || void 0 === I ? void 0 : I.lineNumberContainerStyle)
              },
              text: this.props.text.toString(),
              highlight: this.props.highlight,
              wrapLongLines: this.props.wrapLongLines
            };
          return el.createElement(Code, Object.assign({}, ei));
        }
      };
      (CodeBlock.displayName = 'CodeBlock'),
        (CodeBlock.defaultProps = {
          text: '',
          showLineNumbers: !0,
          wrapLongLines: !1,
          startingLineNumber: 1,
          language: tC,
          theme: {},
          highlight: '',
          lineNumberContainerStyle: {},
          customStyle: {},
          codeBlockStyle: {}
        });
      var tP = lt(CodeBlock);
      let ClipboardListIcon = ({ size: w, color: S, ...C }) =>
        el.createElement(
          'svg',
          Object.assign({}, C, { viewBox: '0 0 384 512', width: w, height: w, fill: S }),
          el.createElement('path', {
            d: 'M280 240H168c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zm0 96H168c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zM112 232c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm0 96c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 48c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm144 408c0 4.4-3.6 8-8 8H56c-4.4 0-8-3.6-8-8V120c0-4.4 3.6-8 8-8h40v32c0 8.8 7.2 16 16 16h160c8.8 0 16-7.2 16-16v-32h40c4.4 0 8 3.6 8 8v336z'
          })
        );
      (ClipboardListIcon.displayName = 'ClipboardListIcon'),
        (ClipboardListIcon.defaultProps = { size: '16pt', color: 'currentcolor' });
      let ClipboardCheckIcon = ({ size: w, color: S, ...C }) =>
        el.createElement(
          'svg',
          Object.assign({}, C, { viewBox: '0 0 384 512', width: w, height: w, fill: S }),
          el.createElement('path', {
            d: 'M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm121.2 231.8l-143 141.8c-4.7 4.7-12.3 4.6-17-.1l-82.6-83.3c-4.7-4.7-4.6-12.3.1-17L99.1 285c4.7-4.7 12.3-4.6 17 .1l46 46.4 106-105.2c4.7-4.7 12.3-4.6 17 .1l28.2 28.4c4.7 4.8 4.6 12.3-.1 17z'
          })
        );
      function Copy({ size: w, color: S, copied: C, ...I }) {
        return C
          ? el.createElement(ClipboardCheckIcon, Object.assign({}, { color: S, size: w }, I))
          : el.createElement(ClipboardListIcon, Object.assign({}, { color: S, size: w }, I));
      }
      (ClipboardCheckIcon.displayName = 'ClipboardCheckIcon'),
        (ClipboardCheckIcon.defaultProps = { size: '16pt', color: 'currentcolor' });
      let isBrowser = () => !!('undefined' != typeof window && window.document && window.document.createElement),
        useSSR = () => {
          let [w, S] = (0, el.useState)(!1);
          return (
            (0, el.useEffect)(() => {
              S(isBrowser());
            }, []),
            { isBrowser: w, isServer: !w }
          );
        },
        getId = () => Math.random().toString(32).slice(2, 10),
        react_code_blocks_esm_createElement = (w) => {
          let S = document.createElement('div');
          return S.setAttribute('id', w), S;
        },
        usePortal = (w = getId()) => {
          let S = `zeit-ui-${w}`,
            { isBrowser: C } = useSSR(),
            [I, $] = (0, el.useState)(C ? react_code_blocks_esm_createElement(S) : null);
          return (
            (0, el.useEffect)(() => {
              let w = document.querySelector(`#${S}`),
                C = w || react_code_blocks_esm_createElement(S);
              w || document.body.appendChild(C), $(C);
            }, []),
            I
          );
        },
        tA = {},
        useWarning = (w, S) => {
          let C = S ? ` [${S}]` : ' ',
            I = `[Zeit UI]${C}: ${w}`;
          'undefined' == typeof console || tA[I] || ((tA[I] = !0), console.warn(I));
        },
        tT = { onError: () => useWarning('Failed to copy.', 'use-clipboard') },
        useClipboard = (w = tT) => {
          let S = usePortal('clipboard'),
            copyText = (S, C) => {
              if (!S || !C) return;
              let I = window.getSelection();
              if (!I) return;
              (S.style.whiteSpace = 'pre'), (S.textContent = C);
              let $ = window.document.createRange();
              I.removeAllRanges(), $.selectNode(S), I.addRange($);
              try {
                window.document.execCommand('copy');
              } catch (S) {
                w.onError && w.onError();
              }
              I.removeAllRanges(), S && (S.textContent = '');
            },
            C = (0, el.useCallback)(
              (w) => {
                copyText(S, w);
              },
              [S]
            );
          return { copy: C };
        },
        tE = rt.button`
  position: absolute;
  top: 0.5em;
  right: 0.75em;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  background: ${(w) => w.theme.backgroundColor};
  margin-top: 0.15rem;
  border-radius: 0.25rem;
  max-height: 2rem;
  max-width: 2rem;
  padding: 0.25rem;
  &:hover {
    opacity: ${(w) => (w.copied ? 1 : 0.5)};
  }
  &:focus {
    outline: none;
    opacity: 1;
  }
  .icon {
    width: 1rem;
    height: 1rem;
  }
`,
        tz = rt.div`
  position: relative;
  background: ${(w) => w.theme.backgroundColor};
  border-radius: 0.25rem;
  padding: ${(w) => (w.codeBlock ? '0.25rem 0.5rem 0.25rem 0.25rem' : '0.25rem')};
`;
      var tI = lt(function ({ theme: w, text: S, codeBlock: C = !1, customStyle: I = {}, onCopy: $, ...er }) {
        let [en, ei] = (0, el.useState)(!1),
          { copy: eo } = useClipboard();
        return el.createElement(
          tz,
          Object.assign({}, { codeBlock: C }, { style: I, theme: w }),
          C
            ? el.createElement(CodeBlock, Object.assign({ text: S, theme: w }, er))
            : el.createElement(Code, Object.assign({ text: S, theme: w }, er)),
          el.createElement(
            tE,
            Object.assign(
              {
                type: 'button',
                onClick: (w) => {
                  eo(S), $ ? $(w) : ei(!en);
                }
              },
              { theme: w, copied: en }
            ),
            el.createElement(Copy, {
              color: en ? w.stringColor : w.textColor,
              copied: en,
              className: 'icon',
              size: '16pt'
            })
          )
        );
      });
      rt.div`
    position: relative;
    width: ${({ width: w }) => w || 'auto'};
    max-width: 100%;
    padding: 8pt;
    padding-right: calc(2 * 16pt);
    color: ${({ style: w }) => w.color};
    background-color: ${({ style: w }) => w.bgColor};
    border: 1px solid ${({ style: w }) => w.border};
    border-radius: 5px;
  pre {
    margin: 0;
    padding: 0;
    border: none;
    background-color: transparent;
    color: ${({ style: w }) => w.color};
    font-size: 0.8125rem;
  }
  pre::before {
    content: '$ ';
    user-select: none;
  }
  pre :global(*) {
    margin: 0;
    padding: 0;
    font-size: inherit;
    color: inherit;
  }
  .copy {
    position: absolute;
    right: 0;
    top: -2px;
    transform: translateY(50%);
    background-color: ${({ style: w }) => w.bgColor};
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: calc(2 * 16pt);
    color: inherit;
    transition: opacity 0.2s ease 0s;
    border-radius: 5px;
    cursor: pointer;
    user-select: none;
  }
  .copy:hover {
    opacity: 0.7;
  }
`;
      var tB = {
        lineNumberColor: '#6272a4',
        lineNumberBgColor: '#282a36',
        backgroundColor: '#282a36',
        textColor: '#f8f8f2',
        substringColor: '#f1fa8c',
        keywordColor: '#ff79c6',
        attributeColor: '#50fa7b',
        selectorTagColor: '#8be9fd',
        docTagColor: '#f1fa8c',
        nameColor: '#66d9ef',
        builtInColor: '#50fa7b',
        literalColor: '#FF79C6',
        bulletColor: '#8BE9FD',
        codeColor: '#50FA7B',
        additionColor: '#f1fa8c',
        regexpColor: '#F1FA8C',
        symbolColor: '#F1FA8C',
        variableColor: '#F8F8F2',
        templateVariableColor: '#FF79C6',
        linkColor: '#00bcd4',
        selectorAttributeColor: '#FF79C6',
        selectorPseudoColor: '#FF79C6',
        typeColor: '#8BE9FD',
        stringColor: '#F1FA8C',
        selectorIdColor: '#50FA7B',
        selectorClassColor: '#50FA7B',
        quoteColor: '#E9F284',
        templateTagColor: '#FF79C6',
        deletionColor: '#FF79C6',
        titleColor: '#ff555580',
        sectionColor: '#F8F8F2',
        commentColor: '#6272A4',
        metaKeywordColor: '#50FA7B',
        metaColor: '#50FA7B',
        functionColor: '#50FA7B',
        numberColor: '#bd93f9'
      };
    },
    17966: function (w) {
      var S = 'undefined' != typeof Element,
        C = 'function' == typeof Map,
        I = 'function' == typeof Set,
        $ = 'function' == typeof ArrayBuffer && !!ArrayBuffer.isView;
      function equal(w, er) {
        if (w === er) return !0;
        if (w && er && 'object' == typeof w && 'object' == typeof er) {
          var en, ei, eo, es;
          if (w.constructor !== er.constructor) return !1;
          if (Array.isArray(w)) {
            if ((en = w.length) != er.length) return !1;
            for (ei = en; 0 != ei--; ) if (!equal(w[ei], er[ei])) return !1;
            return !0;
          }
          if (C && w instanceof Map && er instanceof Map) {
            if (w.size !== er.size) return !1;
            for (es = w.entries(); !(ei = es.next()).done; ) if (!er.has(ei.value[0])) return !1;
            for (es = w.entries(); !(ei = es.next()).done; ) if (!equal(ei.value[1], er.get(ei.value[0]))) return !1;
            return !0;
          }
          if (I && w instanceof Set && er instanceof Set) {
            if (w.size !== er.size) return !1;
            for (es = w.entries(); !(ei = es.next()).done; ) if (!er.has(ei.value[0])) return !1;
            return !0;
          }
          if ($ && ArrayBuffer.isView(w) && ArrayBuffer.isView(er)) {
            if ((en = w.length) != er.length) return !1;
            for (ei = en; 0 != ei--; ) if (w[ei] !== er[ei]) return !1;
            return !0;
          }
          if (w.constructor === RegExp) return w.source === er.source && w.flags === er.flags;
          if (
            w.valueOf !== Object.prototype.valueOf &&
            'function' == typeof w.valueOf &&
            'function' == typeof er.valueOf
          )
            return w.valueOf() === er.valueOf();
          if (
            w.toString !== Object.prototype.toString &&
            'function' == typeof w.toString &&
            'function' == typeof er.toString
          )
            return w.toString() === er.toString();
          if ((en = (eo = Object.keys(w)).length) !== Object.keys(er).length) return !1;
          for (ei = en; 0 != ei--; ) if (!Object.prototype.hasOwnProperty.call(er, eo[ei])) return !1;
          if (S && w instanceof Element) return !1;
          for (ei = en; 0 != ei--; )
            if (
              (('_owner' !== eo[ei] && '__v' !== eo[ei] && '__o' !== eo[ei]) || !w.$$typeof) &&
              !equal(w[eo[ei]], er[eo[ei]])
            )
              return !1;
          return !0;
        }
        return w != w && er != er;
      }
      w.exports = function (w, S) {
        try {
          return equal(w, S);
        } catch (w) {
          if ((w.message || '').match(/stack|recursion/i))
            return console.warn('react-fast-compare cannot handle circular refs'), !1;
          throw w;
        }
      };
    },
    8236: function (w, S) {
      'use strict';
      /** @license React v16.13.1
       * react-is.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var C = 'function' == typeof Symbol && Symbol.for,
        I = C ? Symbol.for('react.element') : 60103,
        $ = C ? Symbol.for('react.portal') : 60106,
        er = C ? Symbol.for('react.fragment') : 60107,
        en = C ? Symbol.for('react.strict_mode') : 60108,
        ei = C ? Symbol.for('react.profiler') : 60114,
        eo = C ? Symbol.for('react.provider') : 60109,
        es = C ? Symbol.for('react.context') : 60110,
        el = C ? Symbol.for('react.async_mode') : 60111,
        ec = C ? Symbol.for('react.concurrent_mode') : 60111,
        eu = C ? Symbol.for('react.forward_ref') : 60112,
        ed = C ? Symbol.for('react.suspense') : 60113,
        eh = C ? Symbol.for('react.suspense_list') : 60120,
        ef = C ? Symbol.for('react.memo') : 60115,
        ep = C ? Symbol.for('react.lazy') : 60116,
        em = C ? Symbol.for('react.block') : 60121,
        eg = C ? Symbol.for('react.fundamental') : 60117,
        ey = C ? Symbol.for('react.responder') : 60118,
        ev = C ? Symbol.for('react.scope') : 60119;
      function z(w) {
        if ('object' == typeof w && null !== w) {
          var S = w.$$typeof;
          switch (S) {
            case I:
              switch ((w = w.type)) {
                case el:
                case ec:
                case er:
                case ei:
                case en:
                case ed:
                  return w;
                default:
                  switch ((w = w && w.$$typeof)) {
                    case es:
                    case eu:
                    case ep:
                    case ef:
                    case eo:
                      return w;
                    default:
                      return S;
                  }
              }
            case $:
              return S;
          }
        }
      }
      function A(w) {
        return z(w) === ec;
      }
      (S.AsyncMode = el),
        (S.ConcurrentMode = ec),
        (S.ContextConsumer = es),
        (S.ContextProvider = eo),
        (S.Element = I),
        (S.ForwardRef = eu),
        (S.Fragment = er),
        (S.Lazy = ep),
        (S.Memo = ef),
        (S.Portal = $),
        (S.Profiler = ei),
        (S.StrictMode = en),
        (S.Suspense = ed),
        (S.isAsyncMode = function (w) {
          return A(w) || z(w) === el;
        }),
        (S.isConcurrentMode = A),
        (S.isContextConsumer = function (w) {
          return z(w) === es;
        }),
        (S.isContextProvider = function (w) {
          return z(w) === eo;
        }),
        (S.isElement = function (w) {
          return 'object' == typeof w && null !== w && w.$$typeof === I;
        }),
        (S.isForwardRef = function (w) {
          return z(w) === eu;
        }),
        (S.isFragment = function (w) {
          return z(w) === er;
        }),
        (S.isLazy = function (w) {
          return z(w) === ep;
        }),
        (S.isMemo = function (w) {
          return z(w) === ef;
        }),
        (S.isPortal = function (w) {
          return z(w) === $;
        }),
        (S.isProfiler = function (w) {
          return z(w) === ei;
        }),
        (S.isStrictMode = function (w) {
          return z(w) === en;
        }),
        (S.isSuspense = function (w) {
          return z(w) === ed;
        }),
        (S.isValidElementType = function (w) {
          return (
            'string' == typeof w ||
            'function' == typeof w ||
            w === er ||
            w === ec ||
            w === ei ||
            w === en ||
            w === ed ||
            w === eh ||
            ('object' == typeof w &&
              null !== w &&
              (w.$$typeof === ep ||
                w.$$typeof === ef ||
                w.$$typeof === eo ||
                w.$$typeof === es ||
                w.$$typeof === eu ||
                w.$$typeof === eg ||
                w.$$typeof === ey ||
                w.$$typeof === ev ||
                w.$$typeof === em))
          );
        }),
        (S.typeOf = z);
    },
    9176: function (w, S, C) {
      'use strict';
      w.exports = C(8236);
    },
    64713: function (w, S, C) {
      'use strict';
      C.d(S, {
        NB: function () {
          return ColorRing;
        }
      });
      var I,
        $,
        er,
        en,
        ei,
        eo,
        es,
        el,
        ec,
        eu,
        ed,
        eh = C(2265),
        ef = { 'aria-busy': !0, role: 'status' },
        ep = C(1298),
        em = C(75733),
        eg = C.n(em),
        stylis_browser_esm = function (w) {
          function M(w, I, $, er, en) {
            for (
              var ei,
                ec,
                ed,
                eh,
                ef,
                ep = 0,
                em = 0,
                ex = 0,
                ek = 0,
                eC = 0,
                eP = 0,
                eA = (ed = ei = 0),
                eT = 0,
                eE = 0,
                ez = 0,
                eI = 0,
                eB = $.length,
                eR = eB - 1,
                eO = '',
                eM = '',
                eD = '',
                ej = '';
              eT < eB;

            ) {
              if (
                ((ec = $.charCodeAt(eT)),
                eT === eR &&
                  0 !== em + ek + ex + ep &&
                  (0 !== em && (ec = 47 === em ? 10 : 47), (ek = ex = ep = 0), eB++, eR++),
                0 === em + ek + ex + ep)
              ) {
                if (eT === eR && (0 < eE && (eO = eO.replace(C, '')), 0 < eO.trim().length)) {
                  switch (ec) {
                    case 32:
                    case 9:
                    case 59:
                    case 13:
                    case 10:
                      break;
                    default:
                      eO += $.charAt(eT);
                  }
                  ec = 59;
                }
                switch (ec) {
                  case 123:
                    for (ei = (eO = eO.trim()).charCodeAt(0), ed = 1, eI = ++eT; eT < eB; ) {
                      switch ((ec = $.charCodeAt(eT))) {
                        case 123:
                          ed++;
                          break;
                        case 125:
                          ed--;
                          break;
                        case 47:
                          switch ((ec = $.charCodeAt(eT + 1))) {
                            case 42:
                            case 47:
                              t: {
                                for (eA = eT + 1; eA < eR; ++eA)
                                  switch ($.charCodeAt(eA)) {
                                    case 47:
                                      if (42 === ec && 42 === $.charCodeAt(eA - 1) && eT + 2 !== eA) {
                                        eT = eA + 1;
                                        break t;
                                      }
                                      break;
                                    case 10:
                                      if (47 === ec) {
                                        eT = eA + 1;
                                        break t;
                                      }
                                  }
                                eT = eA;
                              }
                          }
                          break;
                        case 91:
                          ec++;
                        case 40:
                          ec++;
                        case 34:
                        case 39:
                          for (; eT++ < eR && $.charCodeAt(eT) !== ec; );
                      }
                      if (0 === ed) break;
                      eT++;
                    }
                    if (
                      ((ed = $.substring(eI, eT)),
                      0 === ei && (ei = (eO = eO.replace(S, '').trim()).charCodeAt(0)),
                      64 === ei)
                    ) {
                      switch ((0 < eE && (eO = eO.replace(C, '')), (ec = eO.charCodeAt(1)))) {
                        case 100:
                        case 109:
                        case 115:
                        case 45:
                          eE = I;
                          break;
                        default:
                          eE = e_;
                      }
                      if (
                        ((eI = (ed = M(I, eE, ed, ec, en + 1)).length),
                        0 < ew &&
                          ((ef = H(3, ed, (eE = X(e_, eO, ez)), I, ey, eg, eI, ec, en, er)),
                          (eO = eE.join('')),
                          void 0 !== ef && 0 === (eI = (ed = ef.trim()).length) && ((ec = 0), (ed = ''))),
                        0 < eI)
                      )
                        switch (ec) {
                          case 115:
                            eO = eO.replace(eu, ea);
                          case 100:
                          case 109:
                          case 45:
                            ed = eO + '{' + ed + '}';
                            break;
                          case 107:
                            (ed = (eO = eO.replace(eo, '$1 $2')) + '{' + ed + '}'),
                              (ed = 1 === eb || (2 === eb && L('@' + ed, 3)) ? '@-webkit-' + ed + '@' + ed : '@' + ed);
                            break;
                          default:
                            (ed = eO + ed), 112 === er && ((eM += ed), (ed = ''));
                        }
                      else ed = '';
                    } else ed = M(I, X(I, eO, ez), ed, er, en + 1);
                    (eD += ed), (ed = ez = eE = eA = ei = 0), (eO = ''), (ec = $.charCodeAt(++eT));
                    break;
                  case 125:
                  case 59:
                    if (1 < (eI = (eO = (0 < eE ? eO.replace(C, '') : eO).trim()).length))
                      switch (
                        (0 === eA &&
                          (45 === (ei = eO.charCodeAt(0)) || (96 < ei && 123 > ei)) &&
                          (eI = (eO = eO.replace(' ', ':')).length),
                        0 < ew &&
                          void 0 !== (ef = H(1, eO, I, w, ey, eg, eM.length, er, en, er)) &&
                          0 === (eI = (eO = ef.trim()).length) &&
                          (eO = '\x00\x00'),
                        (ei = eO.charCodeAt(0)),
                        (ec = eO.charCodeAt(1)),
                        ei)
                      ) {
                        case 0:
                          break;
                        case 64:
                          if (105 === ec || 99 === ec) {
                            ej += eO + $.charAt(eT);
                            break;
                          }
                        default:
                          58 !== eO.charCodeAt(eI - 1) && (eM += P(eO, ei, ec, eO.charCodeAt(2)));
                      }
                    (ez = eE = eA = ei = 0), (eO = ''), (ec = $.charCodeAt(++eT));
                }
              }
              switch (ec) {
                case 13:
                case 10:
                  47 === em ? (em = 0) : 0 === 1 + ei && 107 !== er && 0 < eO.length && ((eE = 1), (eO += '\x00')),
                    0 < ew * eS && H(0, eO, I, w, ey, eg, eM.length, er, en, er),
                    (eg = 1),
                    ey++;
                  break;
                case 59:
                case 125:
                  if (0 === em + ek + ex + ep) {
                    eg++;
                    break;
                  }
                default:
                  switch ((eg++, (eh = $.charAt(eT)), ec)) {
                    case 9:
                    case 32:
                      if (0 === ek + ep + em)
                        switch (eC) {
                          case 44:
                          case 58:
                          case 9:
                          case 32:
                            eh = '';
                            break;
                          default:
                            32 !== ec && (eh = ' ');
                        }
                      break;
                    case 0:
                      eh = '\\0';
                      break;
                    case 12:
                      eh = '\\f';
                      break;
                    case 11:
                      eh = '\\v';
                      break;
                    case 38:
                      0 === ek + em + ep && ((eE = ez = 1), (eh = '\f' + eh));
                      break;
                    case 108:
                      if (0 === ek + em + ep + ev && 0 < eA)
                        switch (eT - eA) {
                          case 2:
                            112 === eC && 58 === $.charCodeAt(eT - 3) && (ev = eC);
                          case 8:
                            111 === eP && (ev = eP);
                        }
                      break;
                    case 58:
                      0 === ek + em + ep && (eA = eT);
                      break;
                    case 44:
                      0 === em + ex + ek + ep && ((eE = 1), (eh += '\r'));
                      break;
                    case 34:
                    case 39:
                      0 === em && (ek = ek === ec ? 0 : 0 === ek ? ec : ek);
                      break;
                    case 91:
                      0 === ek + em + ex && ep++;
                      break;
                    case 93:
                      0 === ek + em + ex && ep--;
                      break;
                    case 41:
                      0 === ek + em + ep && ex--;
                      break;
                    case 40:
                      0 === ek + em + ep && (0 === ei && (2 * eC + 3 * eP == 533 || (ei = 1)), ex++);
                      break;
                    case 64:
                      0 === em + ex + ek + ep + eA + ed && (ed = 1);
                      break;
                    case 42:
                    case 47:
                      if (!(0 < ek + ep + ex))
                        switch (em) {
                          case 0:
                            switch (2 * ec + 3 * $.charCodeAt(eT + 1)) {
                              case 235:
                                em = 47;
                                break;
                              case 220:
                                (eI = eT), (em = 42);
                            }
                            break;
                          case 42:
                            47 === ec &&
                              42 === eC &&
                              eI + 2 !== eT &&
                              (33 === $.charCodeAt(eI + 2) && (eM += $.substring(eI, eT + 1)), (eh = ''), (em = 0));
                        }
                  }
                  0 === em && (eO += eh);
              }
              (eP = eC), (eC = ec), eT++;
            }
            if (0 < (eI = eM.length)) {
              if (
                ((eE = I),
                0 < ew && void 0 !== (ef = H(2, eM, eE, w, ey, eg, eI, er, en, er)) && 0 === (eM = ef).length)
              )
                return ej + eM + eD;
              if (((eM = eE.join(',') + '{' + eM + '}'), 0 != eb * ev)) {
                switch ((2 !== eb || L(eM, 2) || (ev = 0), ev)) {
                  case 111:
                    eM = eM.replace(el, ':-moz-$1') + eM;
                    break;
                  case 112:
                    eM =
                      eM.replace(es, '::-webkit-input-$1') +
                      eM.replace(es, '::-moz-$1') +
                      eM.replace(es, ':-ms-input-$1') +
                      eM;
                }
                ev = 0;
              }
            }
            return ej + eM + eD;
          }
          function X(w, S, C) {
            var I = S.trim().split(en);
            S = I;
            var $ = I.length,
              er = w.length;
            switch (er) {
              case 0:
              case 1:
                var ei = 0;
                for (w = 0 === er ? '' : w[0] + ' '; ei < $; ++ei) S[ei] = Z(w, S[ei], C).trim();
                break;
              default:
                var eo = (ei = 0);
                for (S = []; ei < $; ++ei) for (var es = 0; es < er; ++es) S[eo++] = Z(w[es] + ' ', I[ei], C).trim();
            }
            return S;
          }
          function Z(w, S, C) {
            var I = S.charCodeAt(0);
            switch ((33 > I && (I = (S = S.trim()).charCodeAt(0)), I)) {
              case 38:
                return S.replace(ei, '$1' + w.trim());
              case 58:
                return w.trim() + S.replace(ei, '$1' + w.trim());
              default:
                if (0 < 1 * C && 0 < S.indexOf('\f'))
                  return S.replace(ei, (58 === w.charCodeAt(0) ? '' : '$1') + w.trim());
            }
            return w + S;
          }
          function P(w, S, C, en) {
            var ei = w + ';',
              eo = 2 * S + 3 * C + 4 * en;
            if (944 === eo) {
              w = ei.indexOf(':', 9) + 1;
              var es = ei.substring(w, ei.length - 1).trim();
              return (
                (es = ei.substring(0, w).trim() + es + ';'),
                1 === eb || (2 === eb && L(es, 1)) ? '-webkit-' + es + es : es
              );
            }
            if (0 === eb || (2 === eb && !L(ei, 1))) return ei;
            switch (eo) {
              case 1015:
                return 97 === ei.charCodeAt(10) ? '-webkit-' + ei + ei : ei;
              case 951:
                return 116 === ei.charCodeAt(3) ? '-webkit-' + ei + ei : ei;
              case 963:
                return 110 === ei.charCodeAt(5) ? '-webkit-' + ei + ei : ei;
              case 1009:
                if (100 !== ei.charCodeAt(4)) break;
              case 969:
              case 942:
                return '-webkit-' + ei + ei;
              case 978:
                return '-webkit-' + ei + '-moz-' + ei + ei;
              case 1019:
              case 983:
                return '-webkit-' + ei + '-moz-' + ei + '-ms-' + ei + ei;
              case 883:
                if (45 === ei.charCodeAt(8)) return '-webkit-' + ei + ei;
                if (0 < ei.indexOf('image-set(', 11)) return ei.replace(em, '$1-webkit-$2') + ei;
                break;
              case 932:
                if (45 === ei.charCodeAt(4))
                  switch (ei.charCodeAt(5)) {
                    case 103:
                      return (
                        '-webkit-box-' +
                        ei.replace('-grow', '') +
                        '-webkit-' +
                        ei +
                        '-ms-' +
                        ei.replace('grow', 'positive') +
                        ei
                      );
                    case 115:
                      return '-webkit-' + ei + '-ms-' + ei.replace('shrink', 'negative') + ei;
                    case 98:
                      return '-webkit-' + ei + '-ms-' + ei.replace('basis', 'preferred-size') + ei;
                  }
                return '-webkit-' + ei + '-ms-' + ei + ei;
              case 964:
                return '-webkit-' + ei + '-ms-flex-' + ei + ei;
              case 1023:
                if (99 !== ei.charCodeAt(8)) break;
                return (
                  '-webkit-box-pack' +
                  (es = ei.substring(ei.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')) +
                  '-webkit-' +
                  ei +
                  '-ms-flex-pack' +
                  es +
                  ei
                );
              case 1005:
                return $.test(ei) ? ei.replace(I, ':-webkit-') + ei.replace(I, ':-moz-') + ei : ei;
              case 1e3:
                switch (((S = (es = ei.substring(13).trim()).indexOf('-') + 1), es.charCodeAt(0) + es.charCodeAt(S))) {
                  case 226:
                    es = ei.replace(ec, 'tb');
                    break;
                  case 232:
                    es = ei.replace(ec, 'tb-rl');
                    break;
                  case 220:
                    es = ei.replace(ec, 'lr');
                    break;
                  default:
                    return ei;
                }
                return '-webkit-' + ei + '-ms-' + es + ei;
              case 1017:
                if (-1 === ei.indexOf('sticky', 9)) break;
              case 975:
                switch (
                  ((S = (ei = w).length - 10),
                  (eo =
                    (es = (33 === ei.charCodeAt(S) ? ei.substring(0, S) : ei)
                      .substring(w.indexOf(':', 7) + 1)
                      .trim()).charCodeAt(0) +
                    (0 | es.charCodeAt(7))))
                ) {
                  case 203:
                    if (111 > es.charCodeAt(8)) break;
                  case 115:
                    ei = ei.replace(es, '-webkit-' + es) + ';' + ei;
                    break;
                  case 207:
                  case 102:
                    ei =
                      ei.replace(es, '-webkit-' + (102 < eo ? 'inline-' : '') + 'box') +
                      ';' +
                      ei.replace(es, '-webkit-' + es) +
                      ';' +
                      ei.replace(es, '-ms-' + es + 'box') +
                      ';' +
                      ei;
                }
                return ei + ';';
              case 938:
                if (45 === ei.charCodeAt(5))
                  switch (ei.charCodeAt(6)) {
                    case 105:
                      return (
                        (es = ei.replace('-items', '')), '-webkit-' + ei + '-webkit-box-' + es + '-ms-flex-' + es + ei
                      );
                    case 115:
                      return '-webkit-' + ei + '-ms-flex-item-' + ei.replace(eh, '') + ei;
                    default:
                      return (
                        '-webkit-' + ei + '-ms-flex-line-pack' + ei.replace('align-content', '').replace(eh, '') + ei
                      );
                  }
                break;
              case 973:
              case 989:
                if (45 !== ei.charCodeAt(3) || 122 === ei.charCodeAt(4)) break;
              case 931:
              case 953:
                if (!0 === ep.test(w))
                  return 115 === (es = w.substring(w.indexOf(':') + 1)).charCodeAt(0)
                    ? P(w.replace('stretch', 'fill-available'), S, C, en).replace(':fill-available', ':stretch')
                    : ei.replace(es, '-webkit-' + es) + ei.replace(es, '-moz-' + es.replace('fill-', '')) + ei;
                break;
              case 962:
                if (
                  ((ei = '-webkit-' + ei + (102 === ei.charCodeAt(5) ? '-ms-' + ei : '') + ei),
                  211 === C + en && 105 === ei.charCodeAt(13) && 0 < ei.indexOf('transform', 10))
                )
                  return ei.substring(0, ei.indexOf(';', 27) + 1).replace(er, '$1-webkit-$2') + ei;
            }
            return ei;
          }
          function L(w, S) {
            var C = w.indexOf(1 === S ? ':' : '{'),
              I = w.substring(0, 3 !== S ? C : 10);
            return (C = w.substring(C + 1, w.length - 1)), ek(2 !== S ? I : I.replace(ef, '$1'), C, S);
          }
          function ea(w, S) {
            var C = P(S, S.charCodeAt(0), S.charCodeAt(1), S.charCodeAt(2));
            return C !== S + ';' ? C.replace(ed, ' or ($1)').substring(4) : '(' + S + ')';
          }
          function H(w, S, C, I, $, er, en, ei, eo, es) {
            for (var el, ec = 0, eu = S; ec < ew; ++ec)
              switch ((el = ex[ec].call(B, w, eu, C, I, $, er, en, ei, eo, es))) {
                case void 0:
                case !1:
                case !0:
                case null:
                  break;
                default:
                  eu = el;
              }
            if (eu !== S) return eu;
          }
          function T(w) {
            switch (w) {
              case void 0:
              case null:
                ew = ex.length = 0;
                break;
              default:
                if ('function' == typeof w) ex[ew++] = w;
                else if ('object' == typeof w) for (var S = 0, C = w.length; S < C; ++S) T(w[S]);
                else eS = 0 | !!w;
            }
            return T;
          }
          function U(w) {
            return (
              void 0 !== (w = w.prefix) &&
                ((ek = null), w ? ('function' != typeof w ? (eb = 1) : ((eb = 2), (ek = w))) : (eb = 0)),
              U
            );
          }
          function B(w, S) {
            var C = w;
            if ((33 > C.charCodeAt(0) && (C = C.trim()), (C = [C]), 0 < ew)) {
              var I = H(-1, S, C, C, ey, eg, 0, 0, 0, 0);
              void 0 !== I && 'string' == typeof I && (S = I);
            }
            var $ = M(e_, C, S, 0, 0);
            return (
              0 < ew && void 0 !== (I = H(-2, $, C, C, ey, eg, $.length, 0, 0, 0)) && ($ = I),
              (ev = 0),
              (eg = ey = 1),
              $
            );
          }
          var S = /^\0+/g,
            C = /[\0\r\f]/g,
            I = /: */g,
            $ = /zoo|gra/,
            er = /([,: ])(transform)/g,
            en = /,\r+?/g,
            ei = /([\t\r\n ])*\f?&/g,
            eo = /@(k\w+)\s*(\S*)\s*/,
            es = /::(place)/g,
            el = /:(read-only)/g,
            ec = /[svh]\w+-[tblr]{2}/,
            eu = /\(\s*(.*)\s*\)/g,
            ed = /([\s\S]*?);/g,
            eh = /-self|flex-/g,
            ef = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
            ep = /stretch|:\s*\w+\-(?:conte|avail)/,
            em = /([^-])(image-set\()/,
            eg = 1,
            ey = 1,
            ev = 0,
            eb = 1,
            e_ = [],
            ex = [],
            ew = 0,
            ek = null,
            eS = 0;
          return (B.use = T), (B.set = U), void 0 !== w && U(w), B;
        },
        ey = {
          animationIterationCount: 1,
          borderImageOutset: 1,
          borderImageSlice: 1,
          borderImageWidth: 1,
          boxFlex: 1,
          boxFlexGroup: 1,
          boxOrdinalGroup: 1,
          columnCount: 1,
          columns: 1,
          flex: 1,
          flexGrow: 1,
          flexPositive: 1,
          flexShrink: 1,
          flexNegative: 1,
          flexOrder: 1,
          gridRow: 1,
          gridRowEnd: 1,
          gridRowSpan: 1,
          gridRowStart: 1,
          gridColumn: 1,
          gridColumnEnd: 1,
          gridColumnSpan: 1,
          gridColumnStart: 1,
          msGridRow: 1,
          msGridRowSpan: 1,
          msGridColumn: 1,
          msGridColumnSpan: 1,
          fontWeight: 1,
          lineHeight: 1,
          opacity: 1,
          order: 1,
          orphans: 1,
          tabSize: 1,
          widows: 1,
          zIndex: 1,
          zoom: 1,
          WebkitLineClamp: 1,
          fillOpacity: 1,
          floodOpacity: 1,
          stopOpacity: 1,
          strokeDasharray: 1,
          strokeDashoffset: 1,
          strokeMiterlimit: 1,
          strokeOpacity: 1,
          strokeWidth: 1
        },
        ev = C(67008),
        eb = C(55487),
        e_ = C.n(eb),
        ex = C(62601);
      function y() {
        return (y =
          Object.assign ||
          function (w) {
            for (var S = 1; S < arguments.length; S++) {
              var C = arguments[S];
              for (var I in C) Object.prototype.hasOwnProperty.call(C, I) && (w[I] = C[I]);
            }
            return w;
          }).apply(this, arguments);
      }
      var v = function (w, S) {
          for (var C = [w[0]], I = 0, $ = S.length; I < $; I += 1) C.push(S[I], w[I + 1]);
          return C;
        },
        g = function (w) {
          return (
            null !== w &&
            'object' == typeof w &&
            '[object Object]' === (w.toString ? w.toString() : Object.prototype.toString.call(w)) &&
            !(0, ep.typeOf)(w)
          );
        },
        ew = Object.freeze([]),
        ek = Object.freeze({});
      function E(w) {
        return 'function' == typeof w;
      }
      function b(w) {
        return w.displayName || w.name || 'Component';
      }
      function _(w) {
        return w && 'string' == typeof w.styledComponentId;
      }
      var eS = (void 0 !== ex && void 0 !== ex.env && (ex.env.REACT_APP_SC_ATTR || ex.env.SC_ATTR)) || 'data-styled',
        eC = 'undefined' != typeof window && 'HTMLElement' in window,
        eP = !!('boolean' == typeof SC_DISABLE_SPEEDY
          ? SC_DISABLE_SPEEDY
          : void 0 !== ex &&
            void 0 !== ex.env &&
            (void 0 !== ex.env.REACT_APP_SC_DISABLE_SPEEDY && '' !== ex.env.REACT_APP_SC_DISABLE_SPEEDY
              ? 'false' !== ex.env.REACT_APP_SC_DISABLE_SPEEDY && ex.env.REACT_APP_SC_DISABLE_SPEEDY
              : void 0 !== ex.env.SC_DISABLE_SPEEDY &&
                '' !== ex.env.SC_DISABLE_SPEEDY &&
                'false' !== ex.env.SC_DISABLE_SPEEDY &&
                ex.env.SC_DISABLE_SPEEDY));
      function D(w) {
        for (var S = arguments.length, C = Array(S > 1 ? S - 1 : 0), I = 1; I < S; I++) C[I - 1] = arguments[I];
        throw Error(
          'An error occurred. See https://git.io/JUIaE#' +
            w +
            ' for more information.' +
            (C.length > 0 ? ' Args: ' + C.join(', ') : '')
        );
      }
      var eA = (function () {
          function e(w) {
            (this.groupSizes = new Uint32Array(512)), (this.length = 512), (this.tag = w);
          }
          var w = e.prototype;
          return (
            (w.indexOfGroup = function (w) {
              for (var S = 0, C = 0; C < w; C++) S += this.groupSizes[C];
              return S;
            }),
            (w.insertRules = function (w, S) {
              if (w >= this.groupSizes.length) {
                for (var C = this.groupSizes, I = C.length, $ = I; w >= $; ) ($ <<= 1) < 0 && D(16, '' + w);
                (this.groupSizes = new Uint32Array($)), this.groupSizes.set(C), (this.length = $);
                for (var er = I; er < $; er++) this.groupSizes[er] = 0;
              }
              for (var en = this.indexOfGroup(w + 1), ei = 0, eo = S.length; ei < eo; ei++)
                this.tag.insertRule(en, S[ei]) && (this.groupSizes[w]++, en++);
            }),
            (w.clearGroup = function (w) {
              if (w < this.length) {
                var S = this.groupSizes[w],
                  C = this.indexOfGroup(w),
                  I = C + S;
                this.groupSizes[w] = 0;
                for (var $ = C; $ < I; $++) this.tag.deleteRule(C);
              }
            }),
            (w.getGroup = function (w) {
              var S = '';
              if (w >= this.length || 0 === this.groupSizes[w]) return S;
              for (var C = this.groupSizes[w], I = this.indexOfGroup(w), $ = I + C, er = I; er < $; er++)
                S += this.tag.getRule(er) + '/*!sc*/\n';
              return S;
            }),
            e
          );
        })(),
        eT = new Map(),
        eE = new Map(),
        ez = 1,
        V = function (w) {
          if (eT.has(w)) return eT.get(w);
          for (; eE.has(ez); ) ez++;
          var S = ez++;
          return eT.set(w, S), eE.set(S, w), S;
        },
        z = function (w, S) {
          S >= ez && (ez = S + 1), eT.set(w, S), eE.set(S, w);
        },
        eI = 'style[' + eS + '][data-styled-version="5.3.11"]',
        eB = RegExp('^' + eS + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),
        L = function (w, S, C) {
          for (var I, $ = C.split(','), er = 0, en = $.length; er < en; er++) (I = $[er]) && w.registerName(S, I);
        },
        F = function (w, S) {
          for (var C = (S.textContent || '').split('/*!sc*/\n'), I = [], $ = 0, er = C.length; $ < er; $++) {
            var en = C[$].trim();
            if (en) {
              var ei = en.match(eB);
              if (ei) {
                var eo = 0 | parseInt(ei[1], 10),
                  es = ei[2];
                0 !== eo && (z(es, eo), L(w, es, ei[3]), w.getTag().insertRules(eo, I)), (I.length = 0);
              } else I.push(en);
            }
          }
        },
        Y = function () {
          return C.nc;
        },
        q = function (w) {
          var S = document.head,
            C = w || S,
            I = document.createElement('style'),
            $ = (function (w) {
              for (var S = w.childNodes, C = S.length; C >= 0; C--) {
                var I = S[C];
                if (I && 1 === I.nodeType && I.hasAttribute(eS)) return I;
              }
            })(C),
            er = void 0 !== $ ? $.nextSibling : null;
          I.setAttribute(eS, 'active'), I.setAttribute('data-styled-version', '5.3.11');
          var en = Y();
          return en && I.setAttribute('nonce', en), C.insertBefore(I, er), I;
        },
        eR = (function () {
          function e(w) {
            var S = (this.element = q(w));
            S.appendChild(document.createTextNode('')),
              (this.sheet = (function (w) {
                if (w.sheet) return w.sheet;
                for (var S = document.styleSheets, C = 0, I = S.length; C < I; C++) {
                  var $ = S[C];
                  if ($.ownerNode === w) return $;
                }
                D(17);
              })(S)),
              (this.length = 0);
          }
          var w = e.prototype;
          return (
            (w.insertRule = function (w, S) {
              try {
                return this.sheet.insertRule(S, w), this.length++, !0;
              } catch (w) {
                return !1;
              }
            }),
            (w.deleteRule = function (w) {
              this.sheet.deleteRule(w), this.length--;
            }),
            (w.getRule = function (w) {
              var S = this.sheet.cssRules[w];
              return void 0 !== S && 'string' == typeof S.cssText ? S.cssText : '';
            }),
            e
          );
        })(),
        eO = (function () {
          function e(w) {
            var S = (this.element = q(w));
            (this.nodes = S.childNodes), (this.length = 0);
          }
          var w = e.prototype;
          return (
            (w.insertRule = function (w, S) {
              if (w <= this.length && w >= 0) {
                var C = document.createTextNode(S),
                  I = this.nodes[w];
                return this.element.insertBefore(C, I || null), this.length++, !0;
              }
              return !1;
            }),
            (w.deleteRule = function (w) {
              this.element.removeChild(this.nodes[w]), this.length--;
            }),
            (w.getRule = function (w) {
              return w < this.length ? this.nodes[w].textContent : '';
            }),
            e
          );
        })(),
        eM = (function () {
          function e(w) {
            (this.rules = []), (this.length = 0);
          }
          var w = e.prototype;
          return (
            (w.insertRule = function (w, S) {
              return w <= this.length && (this.rules.splice(w, 0, S), this.length++, !0);
            }),
            (w.deleteRule = function (w) {
              this.rules.splice(w, 1), this.length--;
            }),
            (w.getRule = function (w) {
              return w < this.length ? this.rules[w] : '';
            }),
            e
          );
        })(),
        eD = eC,
        ej = { isServer: !eC, useCSSOMInjection: !eP },
        eL = (function () {
          function e(w, S, C) {
            void 0 === w && (w = ek),
              void 0 === S && (S = {}),
              (this.options = y({}, ej, {}, w)),
              (this.gs = S),
              (this.names = new Map(C)),
              (this.server = !!w.isServer),
              !this.server &&
                eC &&
                eD &&
                ((eD = !1),
                (function (w) {
                  for (var S = document.querySelectorAll(eI), C = 0, I = S.length; C < I; C++) {
                    var $ = S[C];
                    $ && 'active' !== $.getAttribute(eS) && (F(w, $), $.parentNode && $.parentNode.removeChild($));
                  }
                })(this));
          }
          e.registerId = function (w) {
            return V(w);
          };
          var w = e.prototype;
          return (
            (w.reconstructWithOptions = function (w, S) {
              return void 0 === S && (S = !0), new e(y({}, this.options, {}, w), this.gs, (S && this.names) || void 0);
            }),
            (w.allocateGSInstance = function (w) {
              return (this.gs[w] = (this.gs[w] || 0) + 1);
            }),
            (w.getTag = function () {
              var w, S, C, I;
              return (
                this.tag ||
                (this.tag =
                  ((S = (w = this.options).isServer),
                  (C = w.useCSSOMInjection),
                  (I = w.target),
                  new eA(S ? new eM(I) : C ? new eR(I) : new eO(I))))
              );
            }),
            (w.hasNameForId = function (w, S) {
              return this.names.has(w) && this.names.get(w).has(S);
            }),
            (w.registerName = function (w, S) {
              if ((V(w), this.names.has(w))) this.names.get(w).add(S);
              else {
                var C = new Set();
                C.add(S), this.names.set(w, C);
              }
            }),
            (w.insertRules = function (w, S, C) {
              this.registerName(w, S), this.getTag().insertRules(V(w), C);
            }),
            (w.clearNames = function (w) {
              this.names.has(w) && this.names.get(w).clear();
            }),
            (w.clearRules = function (w) {
              this.getTag().clearGroup(V(w)), this.clearNames(w);
            }),
            (w.clearTag = function () {
              this.tag = void 0;
            }),
            (w.toString = function () {
              return (function (w) {
                for (var S = w.getTag(), C = S.length, I = '', $ = 0; $ < C; $++) {
                  var er,
                    en = ((er = $), eE.get(er));
                  if (void 0 !== en) {
                    var ei = w.names.get(en),
                      eo = S.getGroup($);
                    if (ei && eo && ei.size) {
                      var es = eS + '.g' + $ + '[id="' + en + '"]',
                        el = '';
                      void 0 !== ei &&
                        ei.forEach(function (w) {
                          w.length > 0 && (el += w + ',');
                        }),
                        (I += '' + eo + es + '{content:"' + el + '"}/*!sc*/\n');
                    }
                  }
                }
                return I;
              })(this);
            }),
            e
          );
        })(),
        eF = /(a)(d)/gi,
        K = function (w) {
          return String.fromCharCode(w + (w > 25 ? 39 : 97));
        };
      function Q(w) {
        var S,
          C = '';
        for (S = Math.abs(w); S > 52; S = (S / 52) | 0) C = K(S % 52) + C;
        return (K(S % 52) + C).replace(eF, '$1-$2');
      }
      var ee = function (w, S) {
          for (var C = S.length; C; ) w = (33 * w) ^ S.charCodeAt(--C);
          return w;
        },
        te = function (w) {
          return ee(5381, w);
        };
      function ne(w) {
        for (var S = 0; S < w.length; S += 1) {
          var C = w[S];
          if (E(C) && !_(C)) return !1;
        }
        return !0;
      }
      var eV = te('5.3.11'),
        eN = (function () {
          function e(w, S, C) {
            (this.rules = w),
              (this.staticRulesId = ''),
              (this.isStatic = (void 0 === C || C.isStatic) && ne(w)),
              (this.componentId = S),
              (this.baseHash = ee(eV, S)),
              (this.baseStyle = C),
              eL.registerId(S);
          }
          return (
            (e.prototype.generateAndInjectStyles = function (w, S, C) {
              var I = this.componentId,
                $ = [];
              if (
                (this.baseStyle && $.push(this.baseStyle.generateAndInjectStyles(w, S, C)), this.isStatic && !C.hash)
              ) {
                if (this.staticRulesId && S.hasNameForId(I, this.staticRulesId)) $.push(this.staticRulesId);
                else {
                  var er = _e(this.rules, w, S, C).join(''),
                    en = Q(ee(this.baseHash, er) >>> 0);
                  if (!S.hasNameForId(I, en)) {
                    var ei = C(er, '.' + en, void 0, I);
                    S.insertRules(I, en, ei);
                  }
                  $.push(en), (this.staticRulesId = en);
                }
              } else {
                for (var eo = this.rules.length, es = ee(this.baseHash, C.hash), el = '', ec = 0; ec < eo; ec++) {
                  var eu = this.rules[ec];
                  if ('string' == typeof eu) el += eu;
                  else if (eu) {
                    var ed = _e(eu, w, S, C),
                      eh = Array.isArray(ed) ? ed.join('') : ed;
                    (es = ee(es, eh + ec)), (el += eh);
                  }
                }
                if (el) {
                  var ef = Q(es >>> 0);
                  if (!S.hasNameForId(I, ef)) {
                    var ep = C(el, '.' + ef, void 0, I);
                    S.insertRules(I, ef, ep);
                  }
                  $.push(ef);
                }
              }
              return $.join(' ');
            }),
            e
          );
        })(),
        eU = /^\s*\/\/.*$/gm,
        e$ = [':', '[', '.', '#'];
      function ae(w) {
        var S,
          C,
          I,
          $,
          er = void 0 === w ? ek : w,
          en = er.options,
          ei = void 0 === en ? ek : en,
          eo = er.plugins,
          es = void 0 === eo ? ew : eo,
          el = new stylis_browser_esm(ei),
          ec = [],
          eu = (function (w) {
            function t(S) {
              if (S)
                try {
                  w(S + '}');
                } catch (w) {}
            }
            return function (S, C, I, $, er, en, ei, eo, es, el) {
              switch (S) {
                case 1:
                  if (0 === es && 64 === C.charCodeAt(0)) return w(C + ';'), '';
                  break;
                case 2:
                  if (0 === eo) return C + '/*|*/';
                  break;
                case 3:
                  switch (eo) {
                    case 102:
                    case 112:
                      return w(I[0] + C), '';
                    default:
                      return C + (0 === el ? '/*|*/' : '');
                  }
                case -2:
                  C.split('/*|*/}').forEach(t);
              }
            };
          })(function (w) {
            ec.push(w);
          }),
          f = function (w, I, er) {
            return (0 === I && -1 !== e$.indexOf(er[C.length])) || er.match($) ? w : '.' + S;
          };
        function m(w, er, en, ei) {
          void 0 === ei && (ei = '&');
          var eo = w.replace(eU, ''),
            es = er && en ? en + ' ' + er + ' { ' + eo + ' }' : eo;
          return (
            (S = ei),
            (I = RegExp('\\' + (C = er) + '\\b', 'g')),
            ($ = RegExp('(\\' + C + '\\b){2,}')),
            el(en || !er ? '' : er, es)
          );
        }
        return (
          el.use(
            [].concat(es, [
              function (w, S, $) {
                2 === w && $.length && $[0].lastIndexOf(C) > 0 && ($[0] = $[0].replace(I, f));
              },
              eu,
              function (w) {
                if (-2 === w) {
                  var S = ec;
                  return (ec = []), S;
                }
              }
            ])
          ),
          (m.hash = es.length
            ? es
                .reduce(function (w, S) {
                  return S.name || D(15), ee(w, S.name);
                }, 5381)
                .toString()
            : ''),
          m
        );
      }
      var eW = eh.createContext(),
        eG = (eW.Consumer, eh.createContext()),
        eH = (eG.Consumer, new eL()),
        eZ = ae();
      function pe() {
        return (0, eh.useContext)(eW) || eH;
      }
      function fe() {
        return (0, eh.useContext)(eG) || eZ;
      }
      function me(w) {
        var S = (0, eh.useState)(w.stylisPlugins),
          C = S[0],
          I = S[1],
          $ = pe(),
          er = (0, eh.useMemo)(
            function () {
              var S = $;
              return (
                w.sheet ? (S = w.sheet) : w.target && (S = S.reconstructWithOptions({ target: w.target }, !1)),
                w.disableCSSOMInjection && (S = S.reconstructWithOptions({ useCSSOMInjection: !1 })),
                S
              );
            },
            [w.disableCSSOMInjection, w.sheet, w.target]
          ),
          en = (0, eh.useMemo)(
            function () {
              return ae({ options: { prefix: !w.disableVendorPrefixes }, plugins: C });
            },
            [w.disableVendorPrefixes, C]
          );
        return (
          (0, eh.useEffect)(
            function () {
              eg()(C, w.stylisPlugins) || I(w.stylisPlugins);
            },
            [w.stylisPlugins]
          ),
          eh.createElement(eW.Provider, { value: er }, eh.createElement(eG.Provider, { value: en }, w.children))
        );
      }
      var eY = (function () {
          function e(w, S) {
            var C = this;
            (this.inject = function (w, S) {
              void 0 === S && (S = eZ);
              var I = C.name + S.hash;
              w.hasNameForId(C.id, I) || w.insertRules(C.id, I, S(C.rules, I, '@keyframes'));
            }),
              (this.toString = function () {
                return D(12, String(C.name));
              }),
              (this.name = w),
              (this.id = 'sc-keyframes-' + w),
              (this.rules = S);
          }
          return (
            (e.prototype.getName = function (w) {
              return void 0 === w && (w = eZ), this.name + w.hash;
            }),
            e
          );
        })(),
        eK = /([A-Z])/,
        eX = /([A-Z])/g,
        eJ = /^ms-/,
        we = function (w) {
          return '-' + w.toLowerCase();
        };
      function Ee(w) {
        return eK.test(w) ? w.replace(eX, we).replace(eJ, '-ms-') : w;
      }
      var be = function (w) {
        return null == w || !1 === w || '' === w;
      };
      function _e(w, S, C, I) {
        if (Array.isArray(w)) {
          for (var $, er = [], en = 0, ei = w.length; en < ei; en += 1)
            '' !== ($ = _e(w[en], S, C, I)) && (Array.isArray($) ? er.push.apply(er, $) : er.push($));
          return er;
        }
        return be(w)
          ? ''
          : _(w)
          ? '.' + w.styledComponentId
          : E(w)
          ? 'function' != typeof w || (w.prototype && w.prototype.isReactComponent) || !S
            ? w
            : _e(w(S), S, C, I)
          : w instanceof eY
          ? C
            ? (w.inject(C, I), w.getName(I))
            : w
          : g(w)
          ? (function e(w, S) {
              var C,
                I = [];
              for (var $ in w)
                w.hasOwnProperty($) &&
                  !be(w[$]) &&
                  ((Array.isArray(w[$]) && w[$].isCss) || E(w[$])
                    ? I.push(Ee($) + ':', w[$], ';')
                    : g(w[$])
                    ? I.push.apply(I, e(w[$], $))
                    : I.push(
                        Ee($) +
                          ': ' +
                          (null == (C = w[$]) || 'boolean' == typeof C || '' === C
                            ? ''
                            : 'number' != typeof C || 0 === C || $ in ey || $.startsWith('--')
                            ? String(C).trim()
                            : C + 'px') +
                          ';'
                      ));
              return S ? [S + ' {'].concat(I, ['}']) : I;
            })(w)
          : w.toString();
      }
      var Ne = function (w) {
        return Array.isArray(w) && (w.isCss = !0), w;
      };
      function Ae(w) {
        for (var S = arguments.length, C = Array(S > 1 ? S - 1 : 0), I = 1; I < S; I++) C[I - 1] = arguments[I];
        return E(w) || g(w)
          ? Ne(_e(v(ew, [w].concat(C))))
          : 0 === C.length && 1 === w.length && 'string' == typeof w[0]
          ? w
          : Ne(_e(v(w, C)));
      }
      var eQ = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
        e0 = /(^-|-$)/g;
      function je(w) {
        return w.replace(eQ, '-').replace(e0, '');
      }
      var Te = function (w) {
        return Q(te(w) >>> 0);
      };
      function xe(w) {
        return 'string' == typeof w;
      }
      var ke = function (w) {
        return 'function' == typeof w || ('object' == typeof w && null !== w && !Array.isArray(w));
      };
      function Be(w, S, C) {
        var I = w[C];
        ke(S) && ke(I) ? ze(I, S) : (w[C] = S);
      }
      function ze(w) {
        for (var S = arguments.length, C = Array(S > 1 ? S - 1 : 0), I = 1; I < S; I++) C[I - 1] = arguments[I];
        for (var $ = 0; $ < C.length; $++) {
          var er = C[$];
          if (ke(er))
            for (var en in er) '__proto__' !== en && 'constructor' !== en && 'prototype' !== en && Be(w, er[en], en);
        }
        return w;
      }
      var e1 = eh.createContext();
      e1.Consumer;
      var e2 = {};
      function Ye(w, S, C) {
        var I = _(w),
          $ = !xe(w),
          er = S.attrs,
          en = void 0 === er ? ew : er,
          ei = S.componentId,
          eo =
            void 0 === ei
              ? ((ef = S.displayName),
                (ep = S.parentComponentId),
                (e2[(em = 'string' != typeof ef ? 'sc' : je(ef))] = (e2[em] || 0) + 1),
                (eg = em + '-' + Te('5.3.11' + em + e2[em])),
                ep ? ep + '-' + eg : eg)
              : ei,
          es = S.displayName,
          el = void 0 === es ? (xe(w) ? 'styled.' + w : 'Styled(' + b(w) + ')') : es,
          ec = S.displayName && S.componentId ? je(S.displayName) + '-' + S.componentId : S.componentId || eo,
          eu = I && w.attrs ? Array.prototype.concat(w.attrs, en).filter(Boolean) : en,
          ed = S.shouldForwardProp;
        I &&
          w.shouldForwardProp &&
          (ed = S.shouldForwardProp
            ? function (C, I, $) {
                return w.shouldForwardProp(C, I, $) && S.shouldForwardProp(C, I, $);
              }
            : w.shouldForwardProp);
        var ef,
          ep,
          em,
          eg,
          ey,
          eb = new eN(C, ec, I ? w.componentStyle : void 0),
          ex = eb.isStatic && 0 === en.length,
          P = function (w, S) {
            return (function (w, S, C, I) {
              var $,
                er,
                en,
                ei,
                eo,
                es,
                el,
                ec = w.attrs,
                eu = w.componentStyle,
                ed = w.defaultProps,
                ef = w.foldedComponentIds,
                ep = w.shouldForwardProp,
                em = w.styledComponentId,
                eg = w.target,
                ey =
                  (($ = (0, eh.useContext)(e1)),
                  void 0 === (er = ed) && (er = ek),
                  void 0 === (en = (S.theme !== er.theme && S.theme) || $ || er.theme || ek) && (en = ek),
                  (ei = y({}, S, { theme: en })),
                  (eo = {}),
                  ec.forEach(function (w) {
                    var S,
                      C,
                      I,
                      $ = w;
                    for (S in (E($) && ($ = $(ei)), $))
                      ei[S] = eo[S] =
                        'className' === S ? ((C = eo[S]), (I = $[S]), C && I ? C + ' ' + I : C || I) : $[S];
                  }),
                  [ei, eo]),
                eb = ey[0],
                e_ = ey[1],
                ex =
                  ((es = pe()),
                  (el = fe()),
                  I ? eu.generateAndInjectStyles(ek, es, el) : eu.generateAndInjectStyles(eb, es, el)),
                ew = e_.$as || S.$as || e_.as || S.as || eg,
                eS = xe(ew),
                eC = e_ !== S ? y({}, S, {}, e_) : S,
                eP = {};
              for (var eA in eC)
                '$' !== eA[0] &&
                  'as' !== eA &&
                  ('forwardedAs' === eA
                    ? (eP.as = eC[eA])
                    : (ep ? ep(eA, ev.Z, ew) : !eS || (0, ev.Z)(eA)) && (eP[eA] = eC[eA]));
              return (
                S.style && e_.style !== S.style && (eP.style = y({}, S.style, {}, e_.style)),
                (eP.className = Array.prototype
                  .concat(ef, em, ex !== em ? ex : null, S.className, e_.className)
                  .filter(Boolean)
                  .join(' ')),
                (eP.ref = C),
                (0, eh.createElement)(ew, eP)
              );
            })(ey, w, S, ex);
          };
        return (
          (P.displayName = el),
          ((ey = eh.forwardRef(P)).attrs = eu),
          (ey.componentStyle = eb),
          (ey.displayName = el),
          (ey.shouldForwardProp = ed),
          (ey.foldedComponentIds = I ? Array.prototype.concat(w.foldedComponentIds, w.styledComponentId) : ew),
          (ey.styledComponentId = ec),
          (ey.target = I ? w.target : w),
          (ey.withComponent = function (w) {
            var I = S.componentId,
              $ = (function (w, S) {
                if (null == w) return {};
                var C,
                  I,
                  $ = {},
                  er = Object.keys(w);
                for (I = 0; I < er.length; I++) S.indexOf((C = er[I])) >= 0 || ($[C] = w[C]);
                return $;
              })(S, ['componentId']),
              er = I && I + '-' + (xe(w) ? w : je(b(w)));
            return Ye(w, y({}, $, { attrs: eu, componentId: er }), C);
          }),
          Object.defineProperty(ey, 'defaultProps', {
            get: function () {
              return this._foldedDefaultProps;
            },
            set: function (S) {
              this._foldedDefaultProps = I ? ze({}, w.defaultProps, S) : S;
            }
          }),
          Object.defineProperty(ey, 'toString', {
            value: function () {
              return '.' + ey.styledComponentId;
            }
          }),
          $ &&
            e_()(ey, w, {
              attrs: !0,
              componentStyle: !0,
              displayName: !0,
              foldedComponentIds: !0,
              shouldForwardProp: !0,
              styledComponentId: !0,
              target: !0,
              withComponent: !0
            }),
          ey
        );
      }
      var qe = function (w) {
        return (function e(w, S, C) {
          if ((void 0 === C && (C = ek), !(0, ep.isValidElementType)(S))) return D(1, String(S));
          var s = function () {
            return w(S, C, Ae.apply(void 0, arguments));
          };
          return (
            (s.withConfig = function (I) {
              return e(w, S, y({}, C, {}, I));
            }),
            (s.attrs = function (I) {
              return e(w, S, y({}, C, { attrs: Array.prototype.concat(C.attrs, I).filter(Boolean) }));
            }),
            s
          );
        })(Ye, w);
      };
      function We(w) {
        for (var S = arguments.length, C = Array(S > 1 ? S - 1 : 0), I = 1; I < S; I++) C[I - 1] = arguments[I];
        var $ = Ae.apply(void 0, [w].concat(C)).join('');
        return new eY(Te($), $);
      }
      [
        'a',
        'abbr',
        'address',
        'area',
        'article',
        'aside',
        'audio',
        'b',
        'base',
        'bdi',
        'bdo',
        'big',
        'blockquote',
        'body',
        'br',
        'button',
        'canvas',
        'caption',
        'cite',
        'code',
        'col',
        'colgroup',
        'data',
        'datalist',
        'dd',
        'del',
        'details',
        'dfn',
        'dialog',
        'div',
        'dl',
        'dt',
        'em',
        'embed',
        'fieldset',
        'figcaption',
        'figure',
        'footer',
        'form',
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'head',
        'header',
        'hgroup',
        'hr',
        'html',
        'i',
        'iframe',
        'img',
        'input',
        'ins',
        'kbd',
        'keygen',
        'label',
        'legend',
        'li',
        'link',
        'main',
        'map',
        'mark',
        'marquee',
        'menu',
        'menuitem',
        'meta',
        'meter',
        'nav',
        'noscript',
        'object',
        'ol',
        'optgroup',
        'option',
        'output',
        'p',
        'param',
        'picture',
        'pre',
        'progress',
        'q',
        'rp',
        'rt',
        'ruby',
        's',
        'samp',
        'script',
        'section',
        'select',
        'small',
        'source',
        'span',
        'strong',
        'style',
        'sub',
        'summary',
        'sup',
        'table',
        'tbody',
        'td',
        'textarea',
        'tfoot',
        'th',
        'thead',
        'time',
        'title',
        'tr',
        'track',
        'u',
        'ul',
        'var',
        'video',
        'wbr',
        'circle',
        'clipPath',
        'defs',
        'ellipse',
        'foreignObject',
        'g',
        'image',
        'line',
        'linearGradient',
        'marker',
        'mask',
        'path',
        'pattern',
        'polygon',
        'polyline',
        'radialGradient',
        'rect',
        'stop',
        'svg',
        'text',
        'textPath',
        'tspan'
      ].forEach(function (w) {
        qe[w] = qe(w);
      }),
        ((I = function (w, S) {
          (this.rules = w), (this.componentId = S), (this.isStatic = ne(w)), eL.registerId(this.componentId + 1);
        }.prototype).createStyles = function (w, S, C, I) {
          var $ = I(_e(this.rules, S, C, I).join(''), ''),
            er = this.componentId + w;
          C.insertRules(er, er, $);
        }),
        (I.removeStyles = function (w, S) {
          S.clearRules(this.componentId + w);
        }),
        (I.renderStyles = function (w, S, C, I) {
          w > 2 && eL.registerId(this.componentId + w), this.removeStyles(w, C), this.createStyles(w, S, C, I);
        }),
        (($ = function () {
          var w = this;
          (this._emitSheetCSS = function () {
            var S = w.instance.toString();
            if (!S) return '';
            var C = Y();
            return (
              '<style ' +
              [C && 'nonce="' + C + '"', eS + '="true"', 'data-styled-version="5.3.11"'].filter(Boolean).join(' ') +
              '>' +
              S +
              '</style>'
            );
          }),
            (this.getStyleTags = function () {
              return w.sealed ? D(2) : w._emitSheetCSS();
            }),
            (this.getStyleElement = function () {
              if (w.sealed) return D(2);
              var S,
                C =
                  (((S = {})[eS] = ''),
                  (S['data-styled-version'] = '5.3.11'),
                  (S.dangerouslySetInnerHTML = { __html: w.instance.toString() }),
                  S),
                I = Y();
              return I && (C.nonce = I), [eh.createElement('style', y({}, C, { key: 'sc-0-0' }))];
            }),
            (this.seal = function () {
              w.sealed = !0;
            }),
            (this.instance = new eL({ isServer: !0 })),
            (this.sealed = !1);
        }.prototype).collectStyles = function (w) {
          return this.sealed ? D(2) : eh.createElement(me, { sheet: this.instance }, w);
        }),
        ($.interleaveWithNodeStream = function (w) {
          return D(3);
        });
      var __makeTemplateObject = function (w, S) {
          return Object.defineProperty ? Object.defineProperty(w, 'raw', { value: S }) : (w.raw = S), w;
        },
        e5 = We(
          en ||
            (en = __makeTemplateObject(
              [
                '\n  12.5% {\n    stroke-dasharray: ',
                'px, ',
                'px;\n    stroke-dashoffset: -',
                'px;\n  }\n  43.75% {\n    stroke-dasharray: ',
                'px, ',
                'px;\n    stroke-dashoffset: -',
                'px;\n  }\n  100% {\n    stroke-dasharray: ',
                'px, ',
                'px;\n    stroke-dashoffset: -',
                'px;\n  }\n'
              ],
              [
                '\n  12.5% {\n    stroke-dasharray: ',
                'px, ',
                'px;\n    stroke-dashoffset: -',
                'px;\n  }\n  43.75% {\n    stroke-dasharray: ',
                'px, ',
                'px;\n    stroke-dashoffset: -',
                'px;\n  }\n  100% {\n    stroke-dasharray: ',
                'px, ',
                'px;\n    stroke-dashoffset: -',
                'px;\n  }\n'
              ]
            )),
          33.98873199462888,
          242.776657104492,
          26.70543228149412,
          84.97182998657219,
          242.776657104492,
          84.97182998657219,
          2.42776657104492,
          242.776657104492,
          240.34889053344708
        );
      qe.path(
        ei ||
          (ei = __makeTemplateObject(
            [
              '\n  stroke-dasharray: ',
              'px, ',
              ';\n  stroke-dashoffset: 0;\n  animation: ',
              ' ',
              's linear infinite;\n'
            ],
            ['\n  stroke-dasharray: ', 'px, ', ';\n  stroke-dashoffset: 0;\n  animation: ', ' ', 's linear infinite;\n']
          )),
        2.42776657104492,
        242.776657104492,
        e5,
        1.6
      );
      var RotatingLines_makeTemplateObject = function (w, S) {
          return Object.defineProperty ? Object.defineProperty(w, 'raw', { value: S }) : (w.raw = S), w;
        },
        e3 = We(
          eo ||
            (eo = RotatingLines_makeTemplateObject(
              ['\n to {\n    transform: rotate(360deg);\n  }\n'],
              ['\n to {\n    transform: rotate(360deg);\n  }\n']
            ))
        );
      qe.svg(
        es ||
          (es = RotatingLines_makeTemplateObject(
            ['\n  animation: ', ' 0.75s steps(12, end) infinite;\n  animation-duration: ', 's;\n'],
            ['\n  animation: ', ' 0.75s steps(12, end) infinite;\n  animation-duration: ', 's;\n']
          )),
        e3,
        ((er = 'speed'),
        function () {
          var w = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if (void 0 !== w[er]) return w[er];
          if (er && er.indexOf('.') > 0) {
            for (var S = er.split('.'), C = S.length, I = w[S[0]], $ = 1; null != I && $ < C; ) (I = I[S[$]]), ($ += 1);
            if (void 0 !== I) return I;
          }
          return '0.75';
        })
      ),
        qe.polyline(
          el ||
            (el = RotatingLines_makeTemplateObject(
              [
                '\n  stroke-width: ',
                'px;\n  stroke-linecap: round;\n\n  &:nth-child(12n + 0) {\n    stroke-opacity: 0.08;\n  }\n\n  &:nth-child(12n + 1) {\n    stroke-opacity: 0.17;\n  }\n\n  &:nth-child(12n + 2) {\n    stroke-opacity: 0.25;\n  }\n\n  &:nth-child(12n + 3) {\n    stroke-opacity: 0.33;\n  }\n\n  &:nth-child(12n + 4) {\n    stroke-opacity: 0.42;\n  }\n\n  &:nth-child(12n + 5) {\n    stroke-opacity: 0.5;\n  }\n\n  &:nth-child(12n + 6) {\n    stroke-opacity: 0.58;\n  }\n\n  &:nth-child(12n + 7) {\n    stroke-opacity: 0.66;\n  }\n\n  &:nth-child(12n + 8) {\n    stroke-opacity: 0.75;\n  }\n\n  &:nth-child(12n + 9) {\n    stroke-opacity: 0.83;\n  }\n\n  &:nth-child(12n + 11) {\n    stroke-opacity: 0.92;\n  }\n'
              ],
              [
                '\n  stroke-width: ',
                'px;\n  stroke-linecap: round;\n\n  &:nth-child(12n + 0) {\n    stroke-opacity: 0.08;\n  }\n\n  &:nth-child(12n + 1) {\n    stroke-opacity: 0.17;\n  }\n\n  &:nth-child(12n + 2) {\n    stroke-opacity: 0.25;\n  }\n\n  &:nth-child(12n + 3) {\n    stroke-opacity: 0.33;\n  }\n\n  &:nth-child(12n + 4) {\n    stroke-opacity: 0.42;\n  }\n\n  &:nth-child(12n + 5) {\n    stroke-opacity: 0.5;\n  }\n\n  &:nth-child(12n + 6) {\n    stroke-opacity: 0.58;\n  }\n\n  &:nth-child(12n + 7) {\n    stroke-opacity: 0.66;\n  }\n\n  &:nth-child(12n + 8) {\n    stroke-opacity: 0.75;\n  }\n\n  &:nth-child(12n + 9) {\n    stroke-opacity: 0.83;\n  }\n\n  &:nth-child(12n + 11) {\n    stroke-opacity: 0.92;\n  }\n'
              ]
            )),
          function (w) {
            return w.width;
          }
        );
      var Triangle_makeTemplateObject = function (w, S) {
          return Object.defineProperty ? Object.defineProperty(w, 'raw', { value: S }) : (w.raw = S), w;
        },
        e4 = We(
          ec ||
            (ec = Triangle_makeTemplateObject(
              ['\n to {\n    stroke-dashoffset: 136;\n  }\n'],
              ['\n to {\n    stroke-dashoffset: 136;\n  }\n']
            ))
        );
      qe.polygon(
        eu ||
          (eu = Triangle_makeTemplateObject(
            ['\n  stroke-dasharray: 17;\n  animation: ', ' 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;\n'],
            ['\n  stroke-dasharray: 17;\n  animation: ', ' 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;\n']
          )),
        e4
      ),
        qe.svg(
          ed ||
            (ed = Triangle_makeTemplateObject(
              ['\n  transform-origin: 50% 65%;\n'],
              ['\n  transform-origin: 50% 65%;\n']
            ))
        );
      var ColorRing_assign = function () {
        return (ColorRing_assign =
          Object.assign ||
          function (w) {
            for (var S, C = 1, I = arguments.length; C < I; C++)
              for (var $ in (S = arguments[C])) Object.prototype.hasOwnProperty.call(S, $) && (w[$] = S[$]);
            return w;
          }).apply(this, arguments);
      };
      function ColorRing(w) {
        var S = w.visible,
          C = w.width,
          I = w.height,
          $ = w.colors,
          er = void 0 === $ ? ['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87'] : $,
          en = w.wrapperClass,
          ei = w.wrapperStyle,
          eo = w.ariaLabel;
        return void 0 === S || S
          ? eh.createElement(
              'svg',
              ColorRing_assign(
                {
                  xmlns: 'http://www.w3.org/2000/svg',
                  xmlnsXlink: 'http://www.w3.org/1999/xlink',
                  width: void 0 === C ? '80' : C,
                  height: void 0 === I ? '80' : I,
                  viewBox: '0 0 100 100',
                  preserveAspectRatio: 'xMidYMid',
                  className: void 0 === en ? '' : en,
                  style: void 0 === ei ? {} : ei,
                  'aria-label': void 0 === eo ? 'color-ring-loading' : eo,
                  'data-testid': 'color-ring-svg'
                },
                ef
              ),
              eh.createElement(
                'defs',
                null,
                eh.createElement(
                  'mask',
                  { id: 'ldio-4offds5dlws-mask' },
                  eh.createElement(
                    'circle',
                    {
                      cx: '50',
                      cy: '50',
                      r: '26',
                      stroke: '#fff',
                      strokeLinecap: 'round',
                      strokeDasharray: '122.52211349000194 40.840704496667314',
                      strokeWidth: '9',
                      transform: 'rotate(198.018 50 50)'
                    },
                    eh.createElement('animateTransform', {
                      attributeName: 'transform',
                      type: 'rotate',
                      values: '0 50 50;360 50 50',
                      keyTimes: '0;1',
                      dur: '1s',
                      repeatCount: 'indefinite'
                    })
                  )
                )
              ),
              eh.createElement(
                'g',
                { mask: 'url(#ldio-4offds5dlws-mask)' },
                eh.createElement(
                  'rect',
                  { x: '14.5', y: '0', width: '15', height: '100', fill: er[0] },
                  eh.createElement('animate', {
                    attributeName: 'fill',
                    values: er.join(';').toString(),
                    keyTimes: '0;0.25;0.5;0.75;1',
                    dur: '1s',
                    repeatCount: 'indefinite',
                    begin: '-0.8s'
                  })
                ),
                eh.createElement(
                  'rect',
                  { x: '28.5', y: '0', width: '15', height: '100', fill: er[1] },
                  eh.createElement('animate', {
                    attributeName: 'fill',
                    values: er.join(';').toString(),
                    keyTimes: '0;0.25;0.5;0.75;1',
                    dur: '1s',
                    repeatCount: 'indefinite',
                    begin: '-0.6s'
                  })
                ),
                eh.createElement(
                  'rect',
                  { x: '42.5', y: '0', width: '15', height: '100', fill: er[2] },
                  eh.createElement('animate', {
                    attributeName: 'fill',
                    values: er.join(';').toString(),
                    keyTimes: '0;0.25;0.5;0.75;1',
                    dur: '1s',
                    repeatCount: 'indefinite',
                    begin: '-0.4s'
                  })
                ),
                eh.createElement(
                  'rect',
                  { x: '56.5', y: '0', width: '15', height: '100', fill: er[3] },
                  eh.createElement('animate', {
                    attributeName: 'fill',
                    values: er.join(';').toString(),
                    keyTimes: '0;0.25;0.5;0.75;1',
                    dur: '1s',
                    repeatCount: 'indefinite',
                    begin: '-0.2s'
                  })
                ),
                eh.createElement(
                  'rect',
                  { x: '70.5', y: '0', width: '15', height: '100', fill: er[4] },
                  eh.createElement('animate', {
                    attributeName: 'fill',
                    values: er.join(';').toString(),
                    keyTimes: '0;0.25;0.5;0.75;1',
                    dur: '1s',
                    repeatCount: 'indefinite',
                    begin: '0s'
                  })
                )
              )
            )
          : null;
      }
    },
    11637: function (w, S) {
      'use strict';
      /**
       * @license React
       * react-is.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var C,
        I = Symbol.for('react.element'),
        $ = Symbol.for('react.portal'),
        er = Symbol.for('react.fragment'),
        en = Symbol.for('react.strict_mode'),
        ei = Symbol.for('react.profiler'),
        eo = Symbol.for('react.provider'),
        es = Symbol.for('react.context'),
        el = Symbol.for('react.server_context'),
        ec = Symbol.for('react.forward_ref'),
        eu = Symbol.for('react.suspense'),
        ed = Symbol.for('react.suspense_list'),
        eh = Symbol.for('react.memo'),
        ef = Symbol.for('react.lazy'),
        ep = Symbol.for('react.offscreen');
      function v(w) {
        if ('object' == typeof w && null !== w) {
          var S = w.$$typeof;
          switch (S) {
            case I:
              switch ((w = w.type)) {
                case er:
                case ei:
                case en:
                case eu:
                case ed:
                  return w;
                default:
                  switch ((w = w && w.$$typeof)) {
                    case el:
                    case es:
                    case ec:
                    case ef:
                    case eh:
                    case eo:
                      return w;
                    default:
                      return S;
                  }
              }
            case $:
              return S;
          }
        }
      }
      (C = Symbol.for('react.module.reference')),
        (S.isValidElementType = function (w) {
          return (
            'string' == typeof w ||
            'function' == typeof w ||
            w === er ||
            w === ei ||
            w === en ||
            w === eu ||
            w === ed ||
            w === ep ||
            ('object' == typeof w &&
              null !== w &&
              (w.$$typeof === ef ||
                w.$$typeof === eh ||
                w.$$typeof === eo ||
                w.$$typeof === es ||
                w.$$typeof === ec ||
                w.$$typeof === C ||
                void 0 !== w.getModuleId))
          );
        }),
        (S.typeOf = v);
    },
    1298: function (w, S, C) {
      'use strict';
      w.exports = C(11637);
    },
    44623: function (w, S, C) {
      'use strict';
      C.d(S, {
        Z: function () {
          return en;
        }
      });
      var I = C(2265),
        $ = C(40617);
      let isObject = (w) => 'object' == typeof w && null !== w;
      function deepCompare(w, S, C = () => !1) {
        if (!isObject(w) || !isObject(S)) return w === S;
        let I = Object.keys(w).filter((w) => !C(w)),
          $ = Object.keys(S).filter((w) => !C(w));
        if (I.length !== $.length) return !1;
        for (let $ of I) {
          let I = w[$],
            er = S[$];
          if (isObject(I) && isObject(er)) {
            if (I === S && er === w) continue;
            if (!deepCompare(I, er, C)) return !1;
          } else if (Array.isArray(I) && Array.isArray(er)) {
            if (!deepCompareArrays(I, er, C)) return !1;
          } else if (I !== er) return !1;
        }
        return !0;
      }
      function deepCompareArrays(w, S, C) {
        if (w.length !== S.length) return !1;
        for (let I = 0; I < w.length; I++) {
          let $ = w[I],
            er = S[I];
          if (Array.isArray($) && Array.isArray(er)) {
            if (!deepCompareArrays($, er, C)) return !1;
          } else if (isObject($) && isObject(er)) {
            if (!deepCompare($, er, C)) return !1;
          } else if ($ !== er) return !1;
        }
        return !0;
      }
      let er = 'tsparticles';
      let Particles = class Particles extends I.Component {
        constructor(w) {
          super(w), (this.state = { init: !1, library: void 0 });
        }
        destroy() {
          this.state.library && (this.state.library.destroy(), this.setState({ library: void 0 }));
        }
        shouldComponentUpdate(w) {
          let S = w.options ?? w.params,
            C = this.props.options ?? this.props.params;
          return (
            w.url !== this.props.url ||
            w.id !== this.props.id ||
            w.canvasClassName !== this.props.canvasClassName ||
            w.className !== this.props.className ||
            w.height !== this.props.height ||
            w.width !== this.props.width ||
            !deepCompare(w.style, this.props.style) ||
            w.init !== this.props.init ||
            w.loaded !== this.props.loaded ||
            !deepCompare(S, C, (w) => w.startsWith('_'))
          );
        }
        componentDidUpdate() {
          this.refresh();
        }
        forceUpdate() {
          this.refresh().then(() => {
            super.forceUpdate();
          });
        }
        componentDidMount() {
          (async () => {
            this.props.init && (await this.props.init($.S6)),
              this.setState({ init: !0 }, async () => {
                await this.loadParticles();
              });
          })();
        }
        componentWillUnmount() {
          this.destroy();
        }
        render() {
          let { width: w, height: S, className: C, canvasClassName: $, id: er } = this.props;
          return I.createElement(
            'div',
            { className: C, id: er },
            I.createElement('canvas', { className: $, style: { ...this.props.style, width: w, height: S } })
          );
        }
        async refresh() {
          this.destroy(), await this.loadParticles();
        }
        async loadParticles() {
          if (!this.state.init) return;
          let w = this.props.id ?? Particles.defaultProps.id ?? er,
            S = await $.S6.load({ url: this.props.url, id: w, options: this.props.options ?? this.props.params });
          this.props.container && (this.props.container.current = S),
            this.setState({ library: S }),
            this.props.loaded && (await this.props.loaded(S));
        }
      };
      Particles.defaultProps = { width: '100%', height: '100%', options: {}, style: {}, url: void 0, id: er };
      var en = Particles;
    },
    75733: function (w) {
      w.exports = function (w, S, C, I) {
        var $ = C ? C.call(I, w, S) : void 0;
        if (void 0 !== $) return !!$;
        if (w === S) return !0;
        if ('object' != typeof w || !w || 'object' != typeof S || !S) return !1;
        var er = Object.keys(w),
          en = Object.keys(S);
        if (er.length !== en.length) return !1;
        for (var ei = Object.prototype.hasOwnProperty.bind(S), eo = 0; eo < er.length; eo++) {
          var es = er[eo];
          if (!ei(es)) return !1;
          var el = w[es],
            ec = S[es];
          if (!1 === ($ = C ? C.call(I, el, ec, es) : void 0) || (void 0 === $ && el !== ec)) return !1;
        }
        return !0;
      };
    },
    72836: function (w, S, C) {
      'use strict';
      C.d(S, {
        C: function () {
          return Circle;
        }
      });
      var I = C(36708),
        $ = C(1995),
        er = C(83201);
      let Circle = class Circle extends I.e {
        constructor(w, S, C) {
          super(w, S), (this.radius = C);
        }
        contains(w) {
          return (0, er.Sp)(w, this.position) <= this.radius;
        }
        intersects(w) {
          let S = this.position,
            C = w.position,
            I = { x: Math.abs(C.x - S.x), y: Math.abs(C.y - S.y) },
            er = this.radius;
          if (w instanceof Circle) {
            let S = er + w.radius,
              C = Math.sqrt(I.x ** 2 + I.y ** 2);
            return S > C;
          }
          if (w instanceof $.A) {
            let { width: S, height: C } = w.size,
              $ = Math.pow(I.x - S, 2) + Math.pow(I.y - C, 2);
            return $ <= er ** 2 || (I.x <= er + S && I.y <= er + C) || I.x <= S || I.y <= C;
          }
          return !1;
        }
      };
    },
    78026: function (w, S, C) {
      'use strict';
      C.d(S, {
        $o: function () {
          return el;
        },
        G1: function () {
          return ei;
        },
        QL: function () {
          return eh;
        },
        Re: function () {
          return es;
        },
        VH: function () {
          return eu;
        },
        Wt: function () {
          return eo;
        },
        YU: function () {
          return I;
        },
        ZL: function () {
          return $;
        },
        aM: function () {
          return en;
        },
        gK: function () {
          return ef;
        },
        rR: function () {
          return ed;
        },
        zX: function () {
          return ec;
        },
        zw: function () {
          return er;
        }
      });
      let I = 'generated',
        $ = 'pointerdown',
        er = 'pointerup',
        en = 'pointerleave',
        ei = 'pointerout',
        eo = 'pointermove',
        es = 'touchstart',
        el = 'touchend',
        ec = 'touchmove',
        eu = 'touchcancel',
        ed = 'resize',
        eh = 'visibilitychange',
        ef = 'tsParticles - Error';
    },
    36708: function (w, S, C) {
      'use strict';
      C.d(S, {
        e: function () {
          return Range;
        }
      });
      let Range = class Range {
        constructor(w, S) {
          this.position = { x: w, y: S };
        }
      };
    },
    1995: function (w, S, C) {
      'use strict';
      C.d(S, {
        A: function () {
          return Rectangle;
        }
      });
      var I = C(72836),
        $ = C(36708);
      let Rectangle = class Rectangle extends $.e {
        constructor(w, S, C, I) {
          super(w, S), (this.size = { height: I, width: C });
        }
        contains(w) {
          let S = this.size.width,
            C = this.size.height,
            I = this.position;
          return w.x >= I.x && w.x <= I.x + S && w.y >= I.y && w.y <= I.y + C;
        }
        intersects(w) {
          w instanceof I.C && w.intersects(this);
          let S = this.size.width,
            C = this.size.height,
            $ = this.position,
            er = w.position,
            en = w instanceof Rectangle ? w.size : { width: 0, height: 0 },
            ei = en.width,
            eo = en.height;
          return er.x < $.x + S && er.x + ei > $.x && er.y < $.y + C && er.y + eo > $.y;
        }
      };
    },
    66290: function (w, S, C) {
      'use strict';
      C.d(S, {
        O: function () {
          return Vector;
        }
      });
      var I = C(91190);
      let Vector = class Vector extends I.U {
        constructor(w, S) {
          super(w, S, 0);
        }
        static get origin() {
          return Vector.create(0, 0);
        }
        static clone(w) {
          return Vector.create(w.x, w.y);
        }
        static create(w, S) {
          return new Vector(w, S);
        }
      };
    },
    91190: function (w, S, C) {
      'use strict';
      C.d(S, {
        U: function () {
          return Vector3d;
        }
      });
      var I = C(78026),
        $ = C(3226);
      let Vector3d = class Vector3d {
        constructor(w, S, C) {
          if (
            ((this._updateFromAngle = (w, S) => {
              (this.x = Math.cos(w) * S), (this.y = Math.sin(w) * S);
            }),
            !(0, $.hj)(w) && w)
          )
            (this.x = w.x), (this.y = w.y), (this.z = w.z ? w.z : 0);
          else if (void 0 !== w && void 0 !== S) (this.x = w), (this.y = S), (this.z = C ?? 0);
          else throw Error(`${I.gK} Vector3d not initialized correctly`);
        }
        static get origin() {
          return Vector3d.create(0, 0, 0);
        }
        get angle() {
          return Math.atan2(this.y, this.x);
        }
        set angle(w) {
          this._updateFromAngle(w, this.length);
        }
        get length() {
          return Math.sqrt(this.getLengthSq());
        }
        set length(w) {
          this._updateFromAngle(this.angle, w);
        }
        static clone(w) {
          return Vector3d.create(w.x, w.y, w.z);
        }
        static create(w, S, C) {
          return new Vector3d(w, S, C);
        }
        add(w) {
          return Vector3d.create(this.x + w.x, this.y + w.y, this.z + w.z);
        }
        addTo(w) {
          (this.x += w.x), (this.y += w.y), (this.z += w.z);
        }
        copy() {
          return Vector3d.clone(this);
        }
        distanceTo(w) {
          return this.sub(w).length;
        }
        distanceToSq(w) {
          return this.sub(w).getLengthSq();
        }
        div(w) {
          return Vector3d.create(this.x / w, this.y / w, this.z / w);
        }
        divTo(w) {
          (this.x /= w), (this.y /= w), (this.z /= w);
        }
        getLengthSq() {
          return this.x ** 2 + this.y ** 2;
        }
        mult(w) {
          return Vector3d.create(this.x * w, this.y * w, this.z * w);
        }
        multTo(w) {
          (this.x *= w), (this.y *= w), (this.z *= w);
        }
        normalize() {
          let w = this.length;
          0 != w && this.multTo(1 / w);
        }
        rotate(w) {
          return Vector3d.create(
            this.x * Math.cos(w) - this.y * Math.sin(w),
            this.x * Math.sin(w) + this.y * Math.cos(w),
            0
          );
        }
        setTo(w) {
          (this.x = w.x), (this.y = w.y), (this.z = w.z ? w.z : 0);
        }
        sub(w) {
          return Vector3d.create(this.x - w.x, this.y - w.y, this.z - w.z);
        }
        subFrom(w) {
          (this.x -= w.x), (this.y -= w.y), (this.z -= w.z);
        }
      };
    },
    42665: function (w, S, C) {
      'use strict';
      C.d(S, {
        O: function () {
          return OptionsColor;
        }
      });
      var I = C(3226);
      let OptionsColor = class OptionsColor {
        constructor() {
          this.value = '';
        }
        static create(w, S) {
          let C = new OptionsColor();
          return C.load(w), void 0 !== S && ((0, I.HD)(S) || (0, I.kJ)(S) ? C.load({ value: S }) : C.load(S)), C;
        }
        load(w) {
          w?.value !== void 0 && (this.value = w.value);
        }
      };
    },
    61050: function (w, S, C) {
      'use strict';
      C.d(S, {
        SW: function () {
          return ValueWithRandom;
        }
      });
      let Random = class Random {
        constructor() {
          (this.enable = !1), (this.minimumValue = 0);
        }
        load(w) {
          w &&
            (void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.minimumValue && (this.minimumValue = w.minimumValue));
        }
      };
      var I = C(3226),
        $ = C(83201);
      let ValueWithRandom = class ValueWithRandom {
        constructor() {
          (this.random = new Random()), (this.value = 0);
        }
        load(w) {
          w &&
            ((0, I.jn)(w.random) ? (this.random.enable = w.random) : this.random.load(w.random),
            void 0 !== w.value &&
              (this.value = (0, $.Cs)(w.value, this.random.enable ? this.random.minimumValue : void 0)));
        }
      };
    },
    91425: function (w, S, C) {
      'use strict';
      C.d(S, {
        $F: function () {
          return drawParticlePlugin;
        },
        C3: function () {
          return paintImage;
        },
        PL: function () {
          return alterHsl;
        },
        TQ: function () {
          return paintBase;
        },
        Wd: function () {
          return drawTriangle;
        },
        ZH: function () {
          return clear;
        },
        Zw: function () {
          return drawPlugin;
        },
        pS: function () {
          return drawLine;
        },
        zv: function () {
          return drawParticle;
        }
      });
      var I = C(30481);
      function drawLine(w, S, C) {
        w.beginPath(), w.moveTo(S.x, S.y), w.lineTo(C.x, C.y), w.closePath();
      }
      function drawTriangle(w, S, C, I) {
        w.beginPath(), w.moveTo(S.x, S.y), w.lineTo(C.x, C.y), w.lineTo(I.x, I.y), w.closePath();
      }
      function paintBase(w, S, C) {
        (w.fillStyle = C ?? 'rgba(0,0,0,0)'), w.fillRect(0, 0, S.width, S.height);
      }
      function paintImage(w, S, C, I) {
        C && ((w.globalAlpha = I), w.drawImage(C, 0, 0, S.width, S.height), (w.globalAlpha = 1));
      }
      function clear(w, S) {
        w.clearRect(0, 0, S.width, S.height);
      }
      function drawParticle(w) {
        let {
            container: S,
            context: C,
            particle: $,
            delta: er,
            colorStyles: en,
            backgroundMask: ei,
            composite: eo,
            radius: es,
            opacity: el,
            shadow: ec,
            transform: eu
          } = w,
          ed = $.getPosition(),
          eh = $.rotation + ($.pathRotation ? $.velocity.angle : 0),
          ef = { sin: Math.sin(eh), cos: Math.cos(eh) },
          ep = { a: ef.cos * (eu.a ?? 1), b: ef.sin * (eu.b ?? 1), c: -ef.sin * (eu.c ?? 1), d: ef.cos * (eu.d ?? 1) };
        C.setTransform(ep.a, ep.b, ep.c, ep.d, ed.x, ed.y), C.beginPath(), ei && (C.globalCompositeOperation = eo);
        let em = $.shadowColor;
        ec.enable &&
          em &&
          ((C.shadowBlur = ec.blur),
          (C.shadowColor = (0, I.iz)(em)),
          (C.shadowOffsetX = ec.offset.x),
          (C.shadowOffsetY = ec.offset.y)),
          en.fill && (C.fillStyle = en.fill);
        let eg = $.strokeWidth ?? 0;
        (C.lineWidth = eg),
          en.stroke && (C.strokeStyle = en.stroke),
          drawShape(S, C, $, es, el, er),
          eg > 0 && C.stroke(),
          $.close && C.closePath(),
          $.fill && C.fill(),
          drawShapeAfterEffect(S, C, $, es, el, er),
          (C.globalCompositeOperation = 'source-over'),
          C.setTransform(1, 0, 0, 1, 0, 0);
      }
      function drawShape(w, S, C, I, $, er) {
        if (!C.shape) return;
        let en = w.drawers.get(C.shape);
        en && en.draw(S, C, I, $, er, w.retina.pixelRatio);
      }
      function drawShapeAfterEffect(w, S, C, I, $, er) {
        if (!C.shape) return;
        let en = w.drawers.get(C.shape);
        en && en.afterEffect && en.afterEffect(S, C, I, $, er, w.retina.pixelRatio);
      }
      function drawPlugin(w, S, C) {
        S.draw && S.draw(w, C);
      }
      function drawParticlePlugin(w, S, C, I) {
        S.drawParticle && S.drawParticle(w, C, I);
      }
      function alterHsl(w, S, C) {
        return { h: w.h, s: w.s, l: w.l + ('darken' === S ? -1 : 1) * C };
      }
    },
    30481: function (w, S, C) {
      'use strict';
      C.d(S, {
        BE: function () {
          return getLinkColor;
        },
        Dt: function () {
          return getLinkRandomColor;
        },
        VI: function () {
          return addColorManager;
        },
        Y6: function () {
          return hslaToRgba;
        },
        bS: function () {
          return getHslAnimationFromHsl;
        },
        gW: function () {
          return getHslFromAnimation;
        },
        iz: function () {
          return getStyleFromRgb;
        },
        lC: function () {
          return rgbToHsl;
        },
        lN: function () {
          return rangeColorToHsl;
        },
        oc: function () {
          return colorMix;
        },
        tX: function () {
          return rangeColorToRgb;
        },
        ve: function () {
          return hslToRgb;
        },
        vz: function () {
          return getStyleFromHsl;
        }
      });
      var I = C(83201),
        $ = C(3226);
      let er = 'random',
        en = new Map();
      function addColorManager(w) {
        en.set(w.key, w);
      }
      function hue2rgb(w, S, C) {
        return (C < 0 && (C += 1), C > 1 && (C -= 1), C < 1 / 6)
          ? w + (S - w) * 6 * C
          : C < 0.5
          ? S
          : C < 2 / 3
          ? w + (S - w) * (2 / 3 - C) * 6
          : w;
      }
      function stringToRgba(w) {
        for (let [, S] of en) if (w.startsWith(S.stringPrefix)) return S.parseString(w);
        let S = w.replace(
            /^#?([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i,
            (w, S, C, I, $) => S + S + C + C + I + I + (void 0 !== $ ? $ + $ : '')
          ),
          C = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i.exec(S);
        return C
          ? {
              a: void 0 !== C[4] ? parseInt(C[4], 16) / 255 : 1,
              b: parseInt(C[3], 16),
              g: parseInt(C[2], 16),
              r: parseInt(C[1], 16)
            }
          : void 0;
      }
      function rangeColorToRgb(w, S, C = !0) {
        if (!w) return;
        let I = (0, $.HD)(w) ? { value: w } : w;
        if ((0, $.HD)(I.value)) return colorToRgb(I.value, S, C);
        if ((0, $.kJ)(I.value)) return rangeColorToRgb({ value: (0, $.c8)(I.value, S, C) });
        for (let [, w] of en) {
          let S = w.handleRangeColor(I);
          if (S) return S;
        }
      }
      function colorToRgb(w, S, C = !0) {
        if (!w) return;
        let I = (0, $.HD)(w) ? { value: w } : w;
        if ((0, $.HD)(I.value)) return I.value === er ? getRandomRgbColor() : stringToRgb(I.value);
        if ((0, $.kJ)(I.value)) return colorToRgb({ value: (0, $.c8)(I.value, S, C) });
        for (let [, w] of en) {
          let S = w.handleColor(I);
          if (S) return S;
        }
      }
      function rangeColorToHsl(w, S, C = !0) {
        let I = rangeColorToRgb(w, S, C);
        return I ? rgbToHsl(I) : void 0;
      }
      function rgbToHsl(w) {
        let S = w.r / 255,
          C = w.g / 255,
          I = w.b / 255,
          $ = Math.max(S, C, I),
          er = Math.min(S, C, I),
          en = { h: 0, l: ($ + er) / 2, s: 0 };
        return (
          $ !== er &&
            ((en.s = en.l < 0.5 ? ($ - er) / ($ + er) : ($ - er) / (2 - $ - er)),
            (en.h = S === $ ? (C - I) / ($ - er) : (en.h = C === $ ? 2 + (I - S) / ($ - er) : 4 + (S - C) / ($ - er)))),
          (en.l *= 100),
          (en.s *= 100),
          (en.h *= 60),
          en.h < 0 && (en.h += 360),
          en.h >= 360 && (en.h -= 360),
          en
        );
      }
      function stringToRgb(w) {
        return stringToRgba(w);
      }
      function hslToRgb(w) {
        let S = { b: 0, g: 0, r: 0 },
          C = { h: w.h / 360, l: w.l / 100, s: w.s / 100 };
        if (C.s) {
          let w = C.l < 0.5 ? C.l * (1 + C.s) : C.l + C.s - C.l * C.s,
            I = 2 * C.l - w;
          (S.r = hue2rgb(I, w, C.h + 1 / 3)), (S.g = hue2rgb(I, w, C.h)), (S.b = hue2rgb(I, w, C.h - 1 / 3));
        } else S.r = S.g = S.b = C.l;
        return (S.r = Math.floor(255 * S.r)), (S.g = Math.floor(255 * S.g)), (S.b = Math.floor(255 * S.b)), S;
      }
      function hslaToRgba(w) {
        let S = hslToRgb(w);
        return { a: w.a, b: S.b, g: S.g, r: S.r };
      }
      function getRandomRgbColor(w) {
        let S = w ?? 0;
        return {
          b: Math.floor((0, I.vd)((0, I.Cs)(S, 256))),
          g: Math.floor((0, I.vd)((0, I.Cs)(S, 256))),
          r: Math.floor((0, I.vd)((0, I.Cs)(S, 256)))
        };
      }
      function getStyleFromRgb(w, S) {
        return `rgba(${w.r}, ${w.g}, ${w.b}, ${S ?? 1})`;
      }
      function getStyleFromHsl(w, S) {
        return `hsla(${w.h}, ${w.s}%, ${w.l}%, ${S ?? 1})`;
      }
      function colorMix(w, S, C, $) {
        let er = w,
          en = S;
        return (
          void 0 === er.r && (er = hslToRgb(w)),
          void 0 === en.r && (en = hslToRgb(S)),
          { b: (0, I.CD)(er.b, en.b, C, $), g: (0, I.CD)(er.g, en.g, C, $), r: (0, I.CD)(er.r, en.r, C, $) }
        );
      }
      function getLinkColor(w, S, C) {
        if (C === er) return getRandomRgbColor();
        if ('mid' !== C) return C;
        {
          let C = w.getFillColor() ?? w.getStrokeColor(),
            I = S?.getFillColor() ?? S?.getStrokeColor();
          if (C && I && S) return colorMix(C, I, w.getRadius(), S.getRadius());
          {
            let w = C ?? I;
            if (w) return hslToRgb(w);
          }
        }
      }
      function getLinkRandomColor(w, S, C) {
        let I = (0, $.HD)(w) ? w : w.value;
        return I === er
          ? C
            ? rangeColorToRgb({ value: I })
            : S
            ? er
            : 'mid'
          : 'mid' === I
          ? 'mid'
          : rangeColorToRgb({ value: I });
      }
      function getHslFromAnimation(w) {
        return void 0 !== w ? { h: w.h.value, s: w.s.value, l: w.l.value } : void 0;
      }
      function getHslAnimationFromHsl(w, S, C) {
        let I = { h: { enable: !1, value: w.h }, s: { enable: !1, value: w.s }, l: { enable: !1, value: w.l } };
        return S && (setColorAnimation(I.h, S.h, C), setColorAnimation(I.s, S.s, C), setColorAnimation(I.l, S.l, C)), I;
      }
      function setColorAnimation(w, S, C) {
        (w.enable = S.enable),
          w.enable
            ? ((w.velocity = ((0, I.Gu)(S.speed) / 100) * C),
              (w.decay = 1 - (0, I.Gu)(S.decay)),
              (w.status = 'increasing'),
              (w.loops = 0),
              (w.maxLoops = (0, I.Gu)(S.count)),
              (w.time = 0),
              (w.delayTime = 1e3 * (0, I.Gu)(S.delay)),
              S.sync || ((w.velocity *= (0, I.sZ)()), (w.value *= (0, I.sZ)())),
              (w.initialValue = w.value))
            : (w.velocity = 0);
      }
    },
    83201: function (w, S, C) {
      'use strict';
      C.d(S, {
        BV: function () {
          return parseAlpha;
        },
        CD: function () {
          return mix;
        },
        Cs: function () {
          return setRangeValue;
        },
        Gk: function () {
          return getParticleDirectionAngle;
        },
        Gu: function () {
          return getRangeValue;
        },
        KI: function () {
          return getRangeMax;
        },
        NA: function () {
          return getValue;
        },
        Sp: function () {
          return getDistance;
        },
        Uv: function () {
          return getRangeMin;
        },
        _X: function () {
          return getEasing;
        },
        bx: function () {
          return addEasing;
        },
        hA: function () {
          return collisionVelocity;
        },
        lQ: function () {
          return getParticleBaseVelocity;
        },
        mC: function () {
          return calcExactPositionOrRandomFromSize;
        },
        oW: function () {
          return getDistances;
        },
        sZ: function () {
          return getRandom;
        },
        uZ: function () {
          return clamp;
        },
        vd: function () {
          return randomInRange;
        }
      });
      var I = C(3226),
        $ = C(66290);
      let er = Math.random,
        en = new Map();
      function addEasing(w, S) {
        en.get(w) || en.set(w, S);
      }
      function getEasing(w) {
        return en.get(w) || ((w) => w);
      }
      function getRandom() {
        return clamp(er(), 0, 1 - 1e-16);
      }
      function clamp(w, S, C) {
        return Math.min(Math.max(w, S), C);
      }
      function mix(w, S, C, I) {
        return Math.floor((w * C + S * I) / (C + I));
      }
      function randomInRange(w) {
        let S = getRangeMax(w),
          C = getRangeMin(w);
        return S === C && (C = 0), getRandom() * (S - C) + C;
      }
      function getRangeValue(w) {
        return (0, I.hj)(w) ? w : randomInRange(w);
      }
      function getRangeMin(w) {
        return (0, I.hj)(w) ? w : w.min;
      }
      function getRangeMax(w) {
        return (0, I.hj)(w) ? w : w.max;
      }
      function setRangeValue(w, S) {
        if (w === S || (void 0 === S && (0, I.hj)(w))) return w;
        let C = getRangeMin(w),
          $ = getRangeMax(w);
        return void 0 !== S ? { min: Math.min(C, S), max: Math.max($, S) } : setRangeValue(C, $);
      }
      function getValue(w) {
        let S = w.random,
          { enable: C, minimumValue: $ } = (0, I.jn)(S) ? { enable: S, minimumValue: 0 } : S;
        return C ? getRangeValue(setRangeValue(w.value, $)) : getRangeValue(w.value);
      }
      function getDistances(w, S) {
        let C = w.x - S.x,
          I = w.y - S.y;
        return { dx: C, dy: I, distance: Math.sqrt(C ** 2 + I ** 2) };
      }
      function getDistance(w, S) {
        return getDistances(w, S).distance;
      }
      function getParticleDirectionAngle(w, S, C) {
        if ((0, I.hj)(w)) return (w * Math.PI) / 180;
        switch (w) {
          case 'top':
            return -Math.PI / 2;
          case 'top-right':
            return -Math.PI / 4;
          case 'right':
            return 0;
          case 'bottom-right':
            return Math.PI / 4;
          case 'bottom':
            return Math.PI / 2;
          case 'bottom-left':
            return (3 * Math.PI) / 4;
          case 'left':
            return Math.PI;
          case 'top-left':
            return (-3 * Math.PI) / 4;
          case 'inside':
            return Math.atan2(C.y - S.y, C.x - S.x);
          case 'outside':
            return Math.atan2(S.y - C.y, S.x - C.x);
          default:
            return getRandom() * Math.PI * 2;
        }
      }
      function getParticleBaseVelocity(w) {
        let S = $.O.origin;
        return (S.length = 1), (S.angle = w), S;
      }
      function collisionVelocity(w, S, C, I) {
        return $.O.create((w.x * (C - I)) / (C + I) + (2 * S.x * I) / (C + I), w.y);
      }
      function calcExactPositionOrRandomFromSize(w) {
        return { x: w.position?.x ?? getRandom() * w.size.width, y: w.position?.y ?? getRandom() * w.size.height };
      }
      function parseAlpha(w) {
        return w ? (w.endsWith('%') ? parseFloat(w) / 100 : parseFloat(w)) : 1;
      }
    },
    3226: function (w, S, C) {
      'use strict';
      C.d(S, {
        Ac: function () {
          return isPointInside;
        },
        HD: function () {
          return isString;
        },
        HY: function () {
          return safeMatchMedia;
        },
        KH: function () {
          return executeOnSingleOrMultiple;
        },
        Kn: function () {
          return isObject;
        },
        Kr: function () {
          return isSsr;
        },
        M_: function () {
          return calculateBounds;
        },
        V0: function () {
          return initParticleNumericAnimationValue;
        },
        XD: function () {
          return divModeExecute;
        },
        ZB: function () {
          return deepExtend;
        },
        bt: function () {
          return getPosition;
        },
        c8: function () {
          return itemFromArray;
        },
        dB: function () {
          return isInArray;
        },
        dp: function () {
          return rectBounce;
        },
        gy: function () {
          return circleBounceDataFromParticle;
        },
        hj: function () {
          return isNumber;
        },
        iC: function () {
          return divMode;
        },
        jl: function () {
          return getLogger;
        },
        jn: function () {
          return isBoolean;
        },
        kJ: function () {
          return isArray;
        },
        kR: function () {
          return circleBounce;
        },
        mf: function () {
          return isFunction;
        },
        mx: function () {
          return loadFont;
        },
        wA: function () {
          return itemFromSingleOrMultiple;
        },
        wm: function () {
          return isDivModeEnabled;
        },
        yf: function () {
          return safeMutationObserver;
        }
      });
      var I = C(83201),
        $ = C(66290);
      let er = {
        debug: console.debug,
        error: console.error,
        info: console.info,
        log: console.log,
        verbose: console.log,
        warning: console.warn
      };
      function getLogger() {
        return er;
      }
      function rectSideBounce(w) {
        let S = { bounced: !1 },
          { pSide: C, pOtherSide: I, rectSide: $, rectOtherSide: er, velocity: en, factor: ei } = w;
        return (
          I.min < er.min ||
            I.min > er.max ||
            I.max < er.min ||
            I.max > er.max ||
            (((C.max >= $.min && C.max <= ($.max + $.min) / 2 && en > 0) ||
              (C.min <= $.max && C.min > ($.max + $.min) / 2 && en < 0)) &&
              ((S.velocity = -(en * ei)), (S.bounced = !0))),
          S
        );
      }
      function checkSelector(w, S) {
        let C = executeOnSingleOrMultiple(S, (S) => w.matches(S));
        return isArray(C) ? C.some((w) => w) : C;
      }
      function isSsr() {
        return 'undefined' == typeof window || !window || void 0 === window.document || !window.document;
      }
      function hasMatchMedia() {
        return !isSsr() && 'undefined' != typeof matchMedia;
      }
      function safeMatchMedia(w) {
        if (hasMatchMedia()) return matchMedia(w);
      }
      function safeMutationObserver(w) {
        if (!isSsr() && 'undefined' != typeof MutationObserver) return new MutationObserver(w);
      }
      function isInArray(w, S) {
        return w === S || (isArray(S) && S.indexOf(w) > -1);
      }
      async function loadFont(w, S) {
        try {
          await document.fonts.load(`${S ?? '400'} 36px '${w ?? 'Verdana'}'`);
        } catch {}
      }
      function arrayRandomIndex(w) {
        return Math.floor((0, I.sZ)() * w.length);
      }
      function itemFromArray(w, S, C = !0) {
        return w[void 0 !== S && C ? S % w.length : arrayRandomIndex(w)];
      }
      function isPointInside(w, S, C, I, $) {
        return areBoundsInside(calculateBounds(w, I ?? 0), S, C, $);
      }
      function areBoundsInside(w, S, C, I) {
        let $ = !0;
        return (
          (I && 'bottom' !== I) || ($ = w.top < S.height + C.x),
          $ && (!I || 'left' === I) && ($ = w.right > C.x),
          $ && (!I || 'right' === I) && ($ = w.left < S.width + C.y),
          $ && (!I || 'top' === I) && ($ = w.bottom > C.y),
          $
        );
      }
      function calculateBounds(w, S) {
        return { bottom: w.y + S, left: w.x - S, right: w.x + S, top: w.y - S };
      }
      function deepExtend(w, ...S) {
        for (let C of S) {
          if (null == C) continue;
          if (!isObject(C)) {
            w = C;
            continue;
          }
          let S = Array.isArray(C);
          for (let I in (S && (isObject(w) || !w || !Array.isArray(w))
            ? (w = [])
            : !S && (isObject(w) || !w || Array.isArray(w)) && (w = {}),
          C)) {
            if ('__proto__' === I) continue;
            let S = C[I],
              $ = w;
            $[I] = isObject(S) && Array.isArray(S) ? S.map((w) => deepExtend($[I], w)) : deepExtend($[I], S);
          }
        }
        return w;
      }
      function isDivModeEnabled(w, S) {
        return !!findItemFromSingleOrMultiple(S, (S) => S.enable && isInArray(w, S.mode));
      }
      function divModeExecute(w, S, C) {
        executeOnSingleOrMultiple(S, (S) => {
          let I = S.mode,
            $ = S.enable;
          $ && isInArray(w, I) && singleDivModeExecute(S, C);
        });
      }
      function singleDivModeExecute(w, S) {
        let C = w.selectors;
        executeOnSingleOrMultiple(C, (C) => {
          S(C, w);
        });
      }
      function divMode(w, S) {
        if (S && w) return findItemFromSingleOrMultiple(w, (w) => checkSelector(S, w.selectors));
      }
      function circleBounceDataFromParticle(w) {
        return {
          position: w.getPosition(),
          radius: w.getRadius(),
          mass: w.getMass(),
          velocity: w.velocity,
          factor: $.O.create((0, I.NA)(w.options.bounce.horizontal), (0, I.NA)(w.options.bounce.vertical))
        };
      }
      function circleBounce(w, S) {
        let { x: C, y: $ } = w.velocity.sub(S.velocity),
          [er, en] = [w.position, S.position],
          { dx: ei, dy: eo } = (0, I.oW)(en, er);
        if (C * ei + $ * eo < 0) return;
        let es = -Math.atan2(eo, ei),
          el = w.mass,
          ec = S.mass,
          eu = w.velocity.rotate(es),
          ed = S.velocity.rotate(es),
          eh = (0, I.hA)(eu, ed, el, ec),
          ef = (0, I.hA)(ed, eu, el, ec),
          ep = eh.rotate(-es),
          em = ef.rotate(-es);
        (w.velocity.x = ep.x * w.factor.x),
          (w.velocity.y = ep.y * w.factor.y),
          (S.velocity.x = em.x * S.factor.x),
          (S.velocity.y = em.y * S.factor.y);
      }
      function rectBounce(w, S) {
        let C = w.getPosition(),
          $ = w.getRadius(),
          er = calculateBounds(C, $),
          en = rectSideBounce({
            pSide: { min: er.left, max: er.right },
            pOtherSide: { min: er.top, max: er.bottom },
            rectSide: { min: S.left, max: S.right },
            rectOtherSide: { min: S.top, max: S.bottom },
            velocity: w.velocity.x,
            factor: (0, I.NA)(w.options.bounce.horizontal)
          });
        en.bounced &&
          (void 0 !== en.velocity && (w.velocity.x = en.velocity),
          void 0 !== en.position && (w.position.x = en.position));
        let ei = rectSideBounce({
          pSide: { min: er.top, max: er.bottom },
          pOtherSide: { min: er.left, max: er.right },
          rectSide: { min: S.top, max: S.bottom },
          rectOtherSide: { min: S.left, max: S.right },
          velocity: w.velocity.y,
          factor: (0, I.NA)(w.options.bounce.vertical)
        });
        ei.bounced &&
          (void 0 !== ei.velocity && (w.velocity.y = ei.velocity),
          void 0 !== ei.position && (w.position.y = ei.position));
      }
      function executeOnSingleOrMultiple(w, S) {
        return isArray(w) ? w.map((w, C) => S(w, C)) : S(w, 0);
      }
      function itemFromSingleOrMultiple(w, S, C) {
        return isArray(w) ? itemFromArray(w, S, C) : w;
      }
      function findItemFromSingleOrMultiple(w, S) {
        return isArray(w) ? w.find((w, C) => S(w, C)) : S(w, 0) ? w : void 0;
      }
      function initParticleNumericAnimationValue(w, S) {
        let C = w.value,
          $ = w.animation,
          er = {
            delayTime: 1e3 * (0, I.Gu)($.delay),
            enable: $.enable,
            value: (0, I.Gu)(w.value) * S,
            max: (0, I.KI)(C) * S,
            min: (0, I.Uv)(C) * S,
            loops: 0,
            maxLoops: (0, I.Gu)($.count),
            time: 0
          };
        if ($.enable) {
          switch (((er.decay = 1 - (0, I.Gu)($.decay)), $.mode)) {
            case 'increase':
              er.status = 'increasing';
              break;
            case 'decrease':
              er.status = 'decreasing';
              break;
            case 'random':
              er.status = (0, I.sZ)() >= 0.5 ? 'increasing' : 'decreasing';
          }
          let w = 'auto' === $.mode;
          switch ($.startValue) {
            case 'min':
              (er.value = er.min), w && (er.status = 'increasing');
              break;
            case 'max':
              (er.value = er.max), w && (er.status = 'decreasing');
              break;
            default:
              (er.value = (0, I.vd)(er)), w && (er.status = (0, I.sZ)() >= 0.5 ? 'increasing' : 'decreasing');
          }
        }
        return (er.initialValue = er.value), er;
      }
      function getPositionOrSize(w, S) {
        let C = 'percent' === w.mode;
        if (!C) {
          let { mode: S, ...C } = w;
          return C;
        }
        return 'x' in w
          ? { x: (w.x / 100) * S.width, y: (w.y / 100) * S.height }
          : { width: (w.width / 100) * S.width, height: (w.height / 100) * S.height };
      }
      function getPosition(w, S) {
        return getPositionOrSize(w, S);
      }
      function isBoolean(w) {
        return 'boolean' == typeof w;
      }
      function isString(w) {
        return 'string' == typeof w;
      }
      function isNumber(w) {
        return 'number' == typeof w;
      }
      function isFunction(w) {
        return 'function' == typeof w;
      }
      function isObject(w) {
        return 'object' == typeof w && null !== w;
      }
      function isArray(w) {
        return Array.isArray(w);
      }
    },
    40617: function (w, S, C) {
      'use strict';
      C.d(S, {
        S6: function () {
          return eb;
        }
      });
      var I = C(78026),
        $ = C(3226),
        er = C(91425),
        en = C(30481);
      function setTransformValue(w, S, C) {
        let I = S[C];
        void 0 !== I && (w[C] = (w[C] ?? 1) * I);
      }
      let Canvas = class Canvas {
        constructor(w) {
          (this.container = w),
            (this._applyPostDrawUpdaters = (w) => {
              for (let S of this._postDrawUpdaters) S.afterDraw && S.afterDraw(w);
            }),
            (this._applyPreDrawUpdaters = (w, S, C, I, $, er) => {
              for (let en of this._preDrawUpdaters) {
                if (en.getColorStyles) {
                  let { fill: er, stroke: ei } = en.getColorStyles(S, w, C, I);
                  er && ($.fill = er), ei && ($.stroke = ei);
                }
                if (en.getTransformValues) {
                  let w = en.getTransformValues(S);
                  for (let S in w) setTransformValue(er, w, S);
                }
                en.beforeDraw && en.beforeDraw(S);
              }
            }),
            (this._applyResizePlugins = () => {
              for (let w of this._resizePlugins) w.resize && w.resize();
            }),
            (this._getPluginParticleColors = (w) => {
              let S, C;
              for (let I of this._colorPlugins)
                if (
                  (!S && I.particleFillColor && (S = (0, en.lN)(I.particleFillColor(w))),
                  !C && I.particleStrokeColor && (C = (0, en.lN)(I.particleStrokeColor(w))),
                  S && C)
                )
                  break;
              return [S, C];
            }),
            (this._initCover = () => {
              let w = this.container.actualOptions,
                S = w.backgroundMask.cover,
                C = S.color,
                I = (0, en.tX)(C);
              if (I) {
                let w = { ...I, a: S.opacity };
                this._coverColorStyle = (0, en.iz)(w, w.a);
              }
            }),
            (this._initStyle = () => {
              let w = this.element,
                S = this.container.actualOptions;
              if (w)
                for (let C in (this._fullScreen
                  ? ((this._originalStyle = (0, $.ZB)({}, w.style)), this._setFullScreenStyle())
                  : this._resetOriginalStyle(),
                S.style)) {
                  if (!C || !S.style) continue;
                  let I = S.style[C];
                  I && w.style.setProperty(C, I, 'important');
                }
            }),
            (this._initTrail = async () => {
              let w = this.container.actualOptions,
                S = w.particles.move.trail,
                C = S.fill;
              if (S.enable) {
                if (C.color) {
                  let S = (0, en.tX)(C.color);
                  if (!S) return;
                  let I = w.particles.move.trail;
                  this._trailFill = { color: { ...S }, opacity: 1 / I.length };
                } else
                  await new Promise((w, I) => {
                    if (!C.image) return;
                    let $ = document.createElement('img');
                    $.addEventListener('load', () => {
                      (this._trailFill = { image: $, opacity: 1 / S.length }), w();
                    }),
                      $.addEventListener('error', (w) => {
                        I(w.error);
                      }),
                      ($.src = C.image);
                  });
              }
            }),
            (this._paintBase = (w) => {
              this.draw((S) => (0, er.TQ)(S, this.size, w));
            }),
            (this._paintImage = (w, S) => {
              this.draw((C) => (0, er.C3)(C, this.size, w, S));
            }),
            (this._repairStyle = () => {
              let w = this.element;
              w &&
                (this._safeMutationObserver((w) => w.disconnect()),
                this._initStyle(),
                this.initBackground(),
                this._safeMutationObserver((S) => S.observe(w, { attributes: !0 })));
            }),
            (this._resetOriginalStyle = () => {
              let w = this.element,
                S = this._originalStyle;
              if (!(w && S)) return;
              let C = w.style;
              (C.position = S.position),
                (C.zIndex = S.zIndex),
                (C.top = S.top),
                (C.left = S.left),
                (C.width = S.width),
                (C.height = S.height);
            }),
            (this._safeMutationObserver = (w) => {
              this._mutationObserver && w(this._mutationObserver);
            }),
            (this._setFullScreenStyle = () => {
              let w = this.element;
              if (!w) return;
              let S = 'important',
                C = w.style;
              C.setProperty('position', 'fixed', S),
                C.setProperty('z-index', this.container.actualOptions.fullScreen.zIndex.toString(10), S),
                C.setProperty('top', '0', S),
                C.setProperty('left', '0', S),
                C.setProperty('width', '100%', S),
                C.setProperty('height', '100%', S);
            }),
            (this.size = { height: 0, width: 0 }),
            (this._context = null),
            (this._generated = !1),
            (this._preDrawUpdaters = []),
            (this._postDrawUpdaters = []),
            (this._resizePlugins = []),
            (this._colorPlugins = []);
        }
        get _fullScreen() {
          return this.container.actualOptions.fullScreen.enable;
        }
        clear() {
          let w = this.container.actualOptions,
            S = w.particles.move.trail,
            C = this._trailFill;
          w.backgroundMask.enable
            ? this.paint()
            : S.enable && S.length > 0 && C
            ? C.color
              ? this._paintBase((0, en.iz)(C.color, C.opacity))
              : C.image && this._paintImage(C.image, C.opacity)
            : this.draw((w) => {
                (0, er.ZH)(w, this.size);
              });
        }
        destroy() {
          if ((this.stop(), this._generated)) {
            let w = this.element;
            w && w.remove();
          } else this._resetOriginalStyle();
          (this._preDrawUpdaters = []),
            (this._postDrawUpdaters = []),
            (this._resizePlugins = []),
            (this._colorPlugins = []);
        }
        draw(w) {
          let S = this._context;
          if (S) return w(S);
        }
        drawParticle(w, S) {
          if (w.spawning || w.destroyed) return;
          let C = w.getRadius();
          if (C <= 0) return;
          let I = w.getFillColor(),
            $ = w.getStrokeColor() ?? I,
            [ei, eo] = this._getPluginParticleColors(w);
          ei || (ei = I),
            eo || (eo = $),
            (ei || eo) &&
              this.draw((I) => {
                let $ = this.container,
                  es = $.actualOptions,
                  el = w.options.zIndex,
                  ec = (1 - w.zIndexFactor) ** el.opacityRate,
                  eu = w.bubble.opacity ?? w.opacity?.value ?? 1,
                  ed = w.strokeOpacity ?? eu,
                  eh = eu * ec,
                  ef = {},
                  ep = { fill: ei ? (0, en.vz)(ei, eh) : void 0 };
                (ep.stroke = eo ? (0, en.vz)(eo, ed * ec) : ep.fill),
                  this._applyPreDrawUpdaters(I, w, C, eh, ep, ef),
                  (0, er.zv)({
                    container: $,
                    context: I,
                    particle: w,
                    delta: S,
                    colorStyles: ep,
                    backgroundMask: es.backgroundMask.enable,
                    composite: es.backgroundMask.composite,
                    radius: C * (1 - w.zIndexFactor) ** el.sizeRate,
                    opacity: eh,
                    shadow: w.options.shadow,
                    transform: ef
                  }),
                  this._applyPostDrawUpdaters(w);
              });
        }
        drawParticlePlugin(w, S, C) {
          this.draw((I) => (0, er.$F)(I, w, S, C));
        }
        drawPlugin(w, S) {
          this.draw((C) => (0, er.Zw)(C, w, S));
        }
        async init() {
          this._safeMutationObserver((w) => w.disconnect()),
            (this._mutationObserver = (0, $.yf)((w) => {
              for (let S of w) 'attributes' === S.type && 'style' === S.attributeName && this._repairStyle();
            })),
            this.resize(),
            this._initStyle(),
            this._initCover();
          try {
            await this._initTrail();
          } catch (w) {
            (0, $.jl)().error(w);
          }
          this.initBackground(),
            this._safeMutationObserver((w) => {
              this.element && w.observe(this.element, { attributes: !0 });
            }),
            this.initUpdaters(),
            this.initPlugins(),
            this.paint();
        }
        initBackground() {
          let w = this.container.actualOptions,
            S = w.background,
            C = this.element;
          if (!C) return;
          let I = C.style;
          if (I) {
            if (S.color) {
              let w = (0, en.tX)(S.color);
              I.backgroundColor = w ? (0, en.iz)(w, S.opacity) : '';
            } else I.backgroundColor = '';
            (I.backgroundImage = S.image || ''),
              (I.backgroundPosition = S.position || ''),
              (I.backgroundRepeat = S.repeat || ''),
              (I.backgroundSize = S.size || '');
          }
        }
        initPlugins() {
          for (let [, w] of ((this._resizePlugins = []), this.container.plugins))
            w.resize && this._resizePlugins.push(w),
              (w.particleFillColor || w.particleStrokeColor) && this._colorPlugins.push(w);
        }
        initUpdaters() {
          for (let w of ((this._preDrawUpdaters = []),
          (this._postDrawUpdaters = []),
          this.container.particles.updaters))
            w.afterDraw && this._postDrawUpdaters.push(w),
              (w.getColorStyles || w.getTransformValues || w.beforeDraw) && this._preDrawUpdaters.push(w);
        }
        loadCanvas(w) {
          this._generated && this.element && this.element.remove(),
            (this._generated = w.dataset && I.YU in w.dataset ? 'true' === w.dataset[I.YU] : this._generated),
            (this.element = w),
            (this.element.ariaHidden = 'true'),
            (this._originalStyle = (0, $.ZB)({}, this.element.style)),
            (this.size.height = w.offsetHeight),
            (this.size.width = w.offsetWidth),
            (this._context = this.element.getContext('2d')),
            this._safeMutationObserver((w) => {
              this.element && w.observe(this.element, { attributes: !0 });
            }),
            this.container.retina.init(),
            this.initBackground();
        }
        paint() {
          let w = this.container.actualOptions;
          this.draw((S) => {
            w.backgroundMask.enable && w.backgroundMask.cover
              ? ((0, er.ZH)(S, this.size), this._paintBase(this._coverColorStyle))
              : this._paintBase();
          });
        }
        resize() {
          if (!this.element) return !1;
          let w = this.container,
            S = w.retina.pixelRatio,
            C = w.canvas.size,
            I = { width: this.element.offsetWidth * S, height: this.element.offsetHeight * S };
          if (
            I.height === C.height &&
            I.width === C.width &&
            I.height === this.element.height &&
            I.width === this.element.width
          )
            return !1;
          let $ = { ...C };
          return (
            (this.element.width = C.width = this.element.offsetWidth * S),
            (this.element.height = C.height = this.element.offsetHeight * S),
            this.container.started && (this.resizeFactor = { width: C.width / $.width, height: C.height / $.height }),
            !0
          );
        }
        stop() {
          this._safeMutationObserver((w) => w.disconnect()),
            (this._mutationObserver = void 0),
            this.draw((w) => (0, er.ZH)(w, this.size));
        }
        async windowResize() {
          if (!this.element || !this.resize()) return;
          let w = this.container,
            S = w.updateActualOptions();
          w.particles.setDensity(), this._applyResizePlugins(), S && (await w.refresh());
        }
      };
      function manageListener(w, S, C, I, er) {
        if (I) {
          let I = { passive: !0 };
          (0, $.jn)(er) ? (I.capture = er) : void 0 !== er && (I = er), w.addEventListener(S, C, I);
        } else w.removeEventListener(S, C, er);
      }
      let EventListeners = class EventListeners {
        constructor(w) {
          (this.container = w),
            (this._doMouseTouchClick = (w) => {
              let S = this.container,
                C = S.actualOptions;
              if (this._canPush) {
                let w = S.interactivity.mouse,
                  I = w.position;
                if (!I) return;
                (w.clickPosition = { ...I }), (w.clickTime = new Date().getTime());
                let er = C.interactivity.events.onClick;
                (0, $.KH)(er.mode, (w) => this.container.handleClickMode(w));
              }
              'touchend' === w.type && setTimeout(() => this._mouseTouchFinish(), 500);
            }),
            (this._handleThemeChange = (w) => {
              let S = this.container,
                C = S.options,
                I = C.defaultThemes,
                $ = w.matches ? I.dark : I.light,
                er = C.themes.find((w) => w.name === $);
              er && er.default.auto && S.loadTheme($);
            }),
            (this._handleVisibilityChange = () => {
              let w = this.container,
                S = w.actualOptions;
              this._mouseTouchFinish(),
                S.pauseOnBlur &&
                  (document && document.hidden
                    ? ((w.pageHidden = !0), w.pause())
                    : ((w.pageHidden = !1), w.getAnimationStatus() ? w.play(!0) : w.draw(!0)));
            }),
            (this._handleWindowResize = async () => {
              this._resizeTimeout && (clearTimeout(this._resizeTimeout), delete this._resizeTimeout),
                (this._resizeTimeout = setTimeout(async () => {
                  let w = this.container.canvas;
                  w && (await w.windowResize());
                }, 1e3 * this.container.actualOptions.interactivity.events.resize.delay));
            }),
            (this._manageInteractivityListeners = (w, S) => {
              let C = this._handlers,
                $ = this.container,
                er = $.actualOptions,
                en = $.interactivity.element;
              if (!en) return;
              let ei = $.canvas.element;
              ei && (ei.style.pointerEvents = en === ei ? 'initial' : 'none'),
                (er.interactivity.events.onHover.enable || er.interactivity.events.onClick.enable) &&
                  (manageListener(en, I.Wt, C.mouseMove, S),
                  manageListener(en, I.Re, C.touchStart, S),
                  manageListener(en, I.zX, C.touchMove, S),
                  er.interactivity.events.onClick.enable
                    ? (manageListener(en, I.$o, C.touchEndClick, S),
                      manageListener(en, I.zw, C.mouseUp, S),
                      manageListener(en, I.ZL, C.mouseDown, S))
                    : manageListener(en, I.$o, C.touchEnd, S),
                  manageListener(en, w, C.mouseLeave, S),
                  manageListener(en, I.VH, C.touchCancel, S));
            }),
            (this._manageListeners = (w) => {
              let S = this._handlers,
                C = this.container,
                $ = C.actualOptions,
                er = $.interactivity.detectsOn,
                en = C.canvas.element,
                ei = I.aM;
              'window' === er
                ? ((C.interactivity.element = window), (ei = I.G1))
                : 'parent' === er && en
                ? (C.interactivity.element = en.parentElement ?? en.parentNode)
                : (C.interactivity.element = en),
                this._manageMediaMatch(w),
                this._manageResize(w),
                this._manageInteractivityListeners(ei, w),
                document && manageListener(document, I.QL, S.visibilityChange, w, !1);
            }),
            (this._manageMediaMatch = (w) => {
              let S = this._handlers,
                C = (0, $.HY)('(prefers-color-scheme: dark)');
              if (C) {
                if (void 0 !== C.addEventListener) {
                  manageListener(C, 'change', S.themeChange, w);
                  return;
                }
                void 0 !== C.addListener && (w ? C.addListener(S.oldThemeChange) : C.removeListener(S.oldThemeChange));
              }
            }),
            (this._manageResize = (w) => {
              let S = this._handlers,
                C = this.container,
                $ = C.actualOptions;
              if (!$.interactivity.events.resize) return;
              if ('undefined' == typeof ResizeObserver) {
                manageListener(window, I.rR, S.resize, w);
                return;
              }
              let er = C.canvas.element;
              this._resizeObserver && !w
                ? (er && this._resizeObserver.unobserve(er),
                  this._resizeObserver.disconnect(),
                  delete this._resizeObserver)
                : !this._resizeObserver &&
                  w &&
                  er &&
                  ((this._resizeObserver = new ResizeObserver(async (w) => {
                    let S = w.find((w) => w.target === er);
                    S && (await this._handleWindowResize());
                  })),
                  this._resizeObserver.observe(er));
            }),
            (this._mouseDown = () => {
              let { interactivity: w } = this.container;
              if (!w) return;
              let { mouse: S } = w;
              (S.clicking = !0), (S.downPosition = S.position);
            }),
            (this._mouseTouchClick = (w) => {
              let S = this.container,
                C = S.actualOptions,
                { mouse: I } = S.interactivity;
              I.inside = !0;
              let $ = !1,
                er = I.position;
              if (er && C.interactivity.events.onClick.enable) {
                for (let [, w] of S.plugins) if (w.clickPositionValid && ($ = w.clickPositionValid(er))) break;
                $ || this._doMouseTouchClick(w), (I.clicking = !1);
              }
            }),
            (this._mouseTouchFinish = () => {
              let w = this.container.interactivity;
              if (!w) return;
              let S = w.mouse;
              delete S.position,
                delete S.clickPosition,
                delete S.downPosition,
                (w.status = I.aM),
                (S.inside = !1),
                (S.clicking = !1);
            }),
            (this._mouseTouchMove = (w) => {
              let S;
              let C = this.container,
                $ = C.actualOptions,
                er = C.interactivity,
                en = C.canvas.element;
              if (!er || !er.element) return;
              if (((er.mouse.inside = !0), w.type.startsWith('pointer'))) {
                if (((this._canPush = !0), er.element === window)) {
                  if (en) {
                    let C = en.getBoundingClientRect();
                    S = { x: w.clientX - C.left, y: w.clientY - C.top };
                  }
                } else if ('parent' === $.interactivity.detectsOn) {
                  let C = w.target,
                    I = w.currentTarget;
                  if (C && I && en) {
                    let $ = C.getBoundingClientRect(),
                      er = I.getBoundingClientRect(),
                      ei = en.getBoundingClientRect();
                    S = {
                      x: w.offsetX + 2 * $.left - (er.left + ei.left),
                      y: w.offsetY + 2 * $.top - (er.top + ei.top)
                    };
                  } else S = { x: w.offsetX ?? w.clientX, y: w.offsetY ?? w.clientY };
                } else w.target === en && (S = { x: w.offsetX ?? w.clientX, y: w.offsetY ?? w.clientY });
              } else if (((this._canPush = 'touchmove' !== w.type), en)) {
                let C = w.touches[w.touches.length - 1],
                  I = en.getBoundingClientRect();
                S = { x: C.clientX - (I.left ?? 0), y: C.clientY - (I.top ?? 0) };
              }
              let ei = C.retina.pixelRatio;
              S && ((S.x *= ei), (S.y *= ei)), (er.mouse.position = S), (er.status = I.Wt);
            }),
            (this._touchEnd = (w) => {
              let S = Array.from(w.changedTouches);
              for (let w of S) this._touches.delete(w.identifier);
              this._mouseTouchFinish();
            }),
            (this._touchEndClick = (w) => {
              let S = Array.from(w.changedTouches);
              for (let w of S) this._touches.delete(w.identifier);
              this._mouseTouchClick(w);
            }),
            (this._touchStart = (w) => {
              let S = Array.from(w.changedTouches);
              for (let w of S) this._touches.set(w.identifier, performance.now());
              this._mouseTouchMove(w);
            }),
            (this._canPush = !0),
            (this._touches = new Map()),
            (this._handlers = {
              mouseDown: () => this._mouseDown(),
              mouseLeave: () => this._mouseTouchFinish(),
              mouseMove: (w) => this._mouseTouchMove(w),
              mouseUp: (w) => this._mouseTouchClick(w),
              touchStart: (w) => this._touchStart(w),
              touchMove: (w) => this._mouseTouchMove(w),
              touchEnd: (w) => this._touchEnd(w),
              touchCancel: (w) => this._touchEnd(w),
              touchEndClick: (w) => this._touchEndClick(w),
              visibilityChange: () => this._handleVisibilityChange(),
              themeChange: (w) => this._handleThemeChange(w),
              oldThemeChange: (w) => this._handleThemeChange(w),
              resize: () => {
                this._handleWindowResize();
              }
            });
        }
        addListeners() {
          this._manageListeners(!0);
        }
        removeListeners() {
          this._manageListeners(!1);
        }
      };
      var ei = C(42665);
      let Background = class Background {
        constructor() {
          (this.color = new ei.O()),
            (this.color.value = ''),
            (this.image = ''),
            (this.position = ''),
            (this.repeat = ''),
            (this.size = ''),
            (this.opacity = 1);
        }
        load(w) {
          w &&
            (void 0 !== w.color && (this.color = ei.O.create(this.color, w.color)),
            void 0 !== w.image && (this.image = w.image),
            void 0 !== w.position && (this.position = w.position),
            void 0 !== w.repeat && (this.repeat = w.repeat),
            void 0 !== w.size && (this.size = w.size),
            void 0 !== w.opacity && (this.opacity = w.opacity));
        }
      };
      let BackgroundMaskCover = class BackgroundMaskCover {
        constructor() {
          (this.color = new ei.O()), (this.color.value = '#fff'), (this.opacity = 1);
        }
        load(w) {
          w &&
            (void 0 !== w.color && (this.color = ei.O.create(this.color, w.color)),
            void 0 !== w.opacity && (this.opacity = w.opacity));
        }
      };
      let BackgroundMask = class BackgroundMask {
        constructor() {
          (this.composite = 'destination-out'), (this.cover = new BackgroundMaskCover()), (this.enable = !1);
        }
        load(w) {
          if (w) {
            if ((void 0 !== w.composite && (this.composite = w.composite), void 0 !== w.cover)) {
              let S = w.cover,
                C = (0, $.HD)(w.cover) ? { color: w.cover } : w.cover;
              this.cover.load(void 0 !== S.color ? S : { color: C });
            }
            void 0 !== w.enable && (this.enable = w.enable);
          }
        }
      };
      let FullScreen = class FullScreen {
        constructor() {
          (this.enable = !0), (this.zIndex = 0);
        }
        load(w) {
          w && (void 0 !== w.enable && (this.enable = w.enable), void 0 !== w.zIndex && (this.zIndex = w.zIndex));
        }
      };
      let ClickEvent = class ClickEvent {
        constructor() {
          (this.enable = !1), (this.mode = []);
        }
        load(w) {
          w && (void 0 !== w.enable && (this.enable = w.enable), void 0 !== w.mode && (this.mode = w.mode));
        }
      };
      let DivEvent = class DivEvent {
        constructor() {
          (this.selectors = []), (this.enable = !1), (this.mode = []), (this.type = 'circle');
        }
        get el() {
          return this.elementId;
        }
        set el(w) {
          this.elementId = w;
        }
        get elementId() {
          return this.ids;
        }
        set elementId(w) {
          this.ids = w;
        }
        get ids() {
          return (0, $.KH)(this.selectors, (w) => w.replace('#', ''));
        }
        set ids(w) {
          this.selectors = (0, $.KH)(w, (w) => `#${w}`);
        }
        load(w) {
          if (!w) return;
          let S = w.ids ?? w.elementId ?? w.el;
          void 0 !== S && (this.ids = S),
            void 0 !== w.selectors && (this.selectors = w.selectors),
            void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.mode && (this.mode = w.mode),
            void 0 !== w.type && (this.type = w.type);
        }
      };
      let Parallax = class Parallax {
        constructor() {
          (this.enable = !1), (this.force = 2), (this.smooth = 10);
        }
        load(w) {
          w &&
            (void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.force && (this.force = w.force),
            void 0 !== w.smooth && (this.smooth = w.smooth));
        }
      };
      let HoverEvent = class HoverEvent {
        constructor() {
          (this.enable = !1), (this.mode = []), (this.parallax = new Parallax());
        }
        load(w) {
          w &&
            (void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.mode && (this.mode = w.mode),
            this.parallax.load(w.parallax));
        }
      };
      let ResizeEvent = class ResizeEvent {
        constructor() {
          (this.delay = 0.5), (this.enable = !0);
        }
        load(w) {
          void 0 !== w &&
            (void 0 !== w.delay && (this.delay = w.delay), void 0 !== w.enable && (this.enable = w.enable));
        }
      };
      let Events = class Events {
        constructor() {
          (this.onClick = new ClickEvent()),
            (this.onDiv = new DivEvent()),
            (this.onHover = new HoverEvent()),
            (this.resize = new ResizeEvent());
        }
        get onclick() {
          return this.onClick;
        }
        set onclick(w) {
          this.onClick = w;
        }
        get ondiv() {
          return this.onDiv;
        }
        set ondiv(w) {
          this.onDiv = w;
        }
        get onhover() {
          return this.onHover;
        }
        set onhover(w) {
          this.onHover = w;
        }
        load(w) {
          if (!w) return;
          this.onClick.load(w.onClick ?? w.onclick);
          let S = w.onDiv ?? w.ondiv;
          void 0 !== S &&
            (this.onDiv = (0, $.KH)(S, (w) => {
              let S = new DivEvent();
              return S.load(w), S;
            })),
            this.onHover.load(w.onHover ?? w.onhover),
            (0, $.jn)(w.resize) ? (this.resize.enable = w.resize) : this.resize.load(w.resize);
        }
      };
      let Modes = class Modes {
        constructor(w, S) {
          (this._engine = w), (this._container = S);
        }
        load(w) {
          if (!w || !this._container) return;
          let S = this._engine.plugins.interactors.get(this._container);
          if (S) for (let C of S) C.loadModeOptions && C.loadModeOptions(this, w);
        }
      };
      let Interactivity = class Interactivity {
        constructor(w, S) {
          (this.detectsOn = 'window'), (this.events = new Events()), (this.modes = new Modes(w, S));
        }
        get detect_on() {
          return this.detectsOn;
        }
        set detect_on(w) {
          this.detectsOn = w;
        }
        load(w) {
          if (!w) return;
          let S = w.detectsOn ?? w.detect_on;
          void 0 !== S && (this.detectsOn = S), this.events.load(w.events), this.modes.load(w.modes);
        }
      };
      let ManualParticle = class ManualParticle {
        load(w) {
          w &&
            (w.position &&
              (this.position = { x: w.position.x ?? 50, y: w.position.y ?? 50, mode: w.position.mode ?? 'percent' }),
            w.options && (this.options = (0, $.ZB)({}, w.options)));
        }
      };
      let Responsive = class Responsive {
        constructor() {
          (this.maxWidth = 1 / 0), (this.options = {}), (this.mode = 'canvas');
        }
        load(w) {
          w &&
            (void 0 !== w.maxWidth && (this.maxWidth = w.maxWidth),
            void 0 !== w.mode && ('screen' === w.mode ? (this.mode = 'screen') : (this.mode = 'canvas')),
            void 0 !== w.options && (this.options = (0, $.ZB)({}, w.options)));
        }
      };
      let ThemeDefault = class ThemeDefault {
        constructor() {
          (this.auto = !1), (this.mode = 'any'), (this.value = !1);
        }
        load(w) {
          w &&
            (void 0 !== w.auto && (this.auto = w.auto),
            void 0 !== w.mode && (this.mode = w.mode),
            void 0 !== w.value && (this.value = w.value));
        }
      };
      let Theme = class Theme {
        constructor() {
          (this.name = ''), (this.default = new ThemeDefault());
        }
        load(w) {
          w &&
            (void 0 !== w.name && (this.name = w.name),
            this.default.load(w.default),
            void 0 !== w.options && (this.options = (0, $.ZB)({}, w.options)));
        }
      };
      var eo = C(83201);
      let ColorAnimation = class ColorAnimation {
        constructor() {
          (this.count = 0),
            (this.enable = !1),
            (this.offset = 0),
            (this.speed = 1),
            (this.delay = 0),
            (this.decay = 0),
            (this.sync = !0);
        }
        load(w) {
          w &&
            (void 0 !== w.count && (this.count = (0, eo.Cs)(w.count)),
            void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.offset && (this.offset = (0, eo.Cs)(w.offset)),
            void 0 !== w.speed && (this.speed = (0, eo.Cs)(w.speed)),
            void 0 !== w.decay && (this.decay = (0, eo.Cs)(w.decay)),
            void 0 !== w.delay && (this.delay = (0, eo.Cs)(w.delay)),
            void 0 !== w.sync && (this.sync = w.sync));
        }
      };
      let HslAnimation = class HslAnimation {
        constructor() {
          (this.h = new ColorAnimation()), (this.s = new ColorAnimation()), (this.l = new ColorAnimation());
        }
        load(w) {
          w && (this.h.load(w.h), this.s.load(w.s), this.l.load(w.l));
        }
      };
      let AnimatableColor = class AnimatableColor extends ei.O {
        constructor() {
          super(), (this.animation = new HslAnimation());
        }
        static create(w, S) {
          let C = new AnimatableColor();
          return C.load(w), void 0 !== S && ((0, $.HD)(S) || (0, $.kJ)(S) ? C.load({ value: S }) : C.load(S)), C;
        }
        load(w) {
          if ((super.load(w), !w)) return;
          let S = w.animation;
          void 0 !== S && (void 0 !== S.enable ? this.animation.h.load(S) : this.animation.load(w.animation));
        }
      };
      let CollisionsAbsorb = class CollisionsAbsorb {
        constructor() {
          this.speed = 2;
        }
        load(w) {
          w && void 0 !== w.speed && (this.speed = w.speed);
        }
      };
      let CollisionsOverlap = class CollisionsOverlap {
        constructor() {
          (this.enable = !0), (this.retries = 0);
        }
        load(w) {
          w && (void 0 !== w.enable && (this.enable = w.enable), void 0 !== w.retries && (this.retries = w.retries));
        }
      };
      var es = C(61050);
      let ParticlesBounceFactor = class ParticlesBounceFactor extends es.SW {
        constructor() {
          super(), (this.random.minimumValue = 0.1), (this.value = 1);
        }
      };
      let ParticlesBounce = class ParticlesBounce {
        constructor() {
          (this.horizontal = new ParticlesBounceFactor()), (this.vertical = new ParticlesBounceFactor());
        }
        load(w) {
          w && (this.horizontal.load(w.horizontal), this.vertical.load(w.vertical));
        }
      };
      let Collisions = class Collisions {
        constructor() {
          (this.absorb = new CollisionsAbsorb()),
            (this.bounce = new ParticlesBounce()),
            (this.enable = !1),
            (this.maxSpeed = 50),
            (this.mode = 'bounce'),
            (this.overlap = new CollisionsOverlap());
        }
        load(w) {
          w &&
            (this.absorb.load(w.absorb),
            this.bounce.load(w.bounce),
            void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.maxSpeed && (this.maxSpeed = (0, eo.Cs)(w.maxSpeed)),
            void 0 !== w.mode && (this.mode = w.mode),
            this.overlap.load(w.overlap));
        }
      };
      let MoveAngle = class MoveAngle {
        constructor() {
          (this.offset = 0), (this.value = 90);
        }
        load(w) {
          w &&
            (void 0 !== w.offset && (this.offset = (0, eo.Cs)(w.offset)),
            void 0 !== w.value && (this.value = (0, eo.Cs)(w.value)));
        }
      };
      let MoveAttract = class MoveAttract {
        constructor() {
          (this.distance = 200), (this.enable = !1), (this.rotate = { x: 3e3, y: 3e3 });
        }
        get rotateX() {
          return this.rotate.x;
        }
        set rotateX(w) {
          this.rotate.x = w;
        }
        get rotateY() {
          return this.rotate.y;
        }
        set rotateY(w) {
          this.rotate.y = w;
        }
        load(w) {
          if (!w) return;
          void 0 !== w.distance && (this.distance = (0, eo.Cs)(w.distance)),
            void 0 !== w.enable && (this.enable = w.enable);
          let S = w.rotate?.x ?? w.rotateX;
          void 0 !== S && (this.rotate.x = S);
          let C = w.rotate?.y ?? w.rotateY;
          void 0 !== C && (this.rotate.y = C);
        }
      };
      let MoveCenter = class MoveCenter {
        constructor() {
          (this.x = 50), (this.y = 50), (this.mode = 'percent'), (this.radius = 0);
        }
        load(w) {
          w &&
            (void 0 !== w.x && (this.x = w.x),
            void 0 !== w.y && (this.y = w.y),
            void 0 !== w.mode && (this.mode = w.mode),
            void 0 !== w.radius && (this.radius = w.radius));
        }
      };
      let MoveGravity = class MoveGravity {
        constructor() {
          (this.acceleration = 9.81), (this.enable = !1), (this.inverse = !1), (this.maxSpeed = 50);
        }
        load(w) {
          w &&
            (void 0 !== w.acceleration && (this.acceleration = (0, eo.Cs)(w.acceleration)),
            void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.inverse && (this.inverse = w.inverse),
            void 0 !== w.maxSpeed && (this.maxSpeed = (0, eo.Cs)(w.maxSpeed)));
        }
      };
      let MovePath = class MovePath {
        constructor() {
          (this.clamp = !0), (this.delay = new es.SW()), (this.enable = !1), (this.options = {});
        }
        load(w) {
          w &&
            (void 0 !== w.clamp && (this.clamp = w.clamp),
            this.delay.load(w.delay),
            void 0 !== w.enable && (this.enable = w.enable),
            (this.generator = w.generator),
            w.options && (this.options = (0, $.ZB)(this.options, w.options)));
        }
      };
      let MoveTrailFill = class MoveTrailFill {
        load(w) {
          w &&
            (void 0 !== w.color && (this.color = ei.O.create(this.color, w.color)),
            void 0 !== w.image && (this.image = w.image));
        }
      };
      let MoveTrail = class MoveTrail {
        constructor() {
          (this.enable = !1), (this.length = 10), (this.fill = new MoveTrailFill());
        }
        get fillColor() {
          return this.fill.color;
        }
        set fillColor(w) {
          this.fill.load({ color: w });
        }
        load(w) {
          w &&
            (void 0 !== w.enable && (this.enable = w.enable),
            (void 0 !== w.fill || void 0 !== w.fillColor) && this.fill.load(w.fill || { color: w.fillColor }),
            void 0 !== w.length && (this.length = w.length));
        }
      };
      let OutModes = class OutModes {
        constructor() {
          this.default = 'out';
        }
        load(w) {
          w &&
            (void 0 !== w.default && (this.default = w.default),
            (this.bottom = w.bottom ?? w.default),
            (this.left = w.left ?? w.default),
            (this.right = w.right ?? w.default),
            (this.top = w.top ?? w.default));
        }
      };
      let Spin = class Spin {
        constructor() {
          (this.acceleration = 0), (this.enable = !1);
        }
        load(w) {
          w &&
            (void 0 !== w.acceleration && (this.acceleration = (0, eo.Cs)(w.acceleration)),
            void 0 !== w.enable && (this.enable = w.enable),
            w.position && (this.position = (0, $.ZB)({}, w.position)));
        }
      };
      let Move = class Move {
        constructor() {
          (this.angle = new MoveAngle()),
            (this.attract = new MoveAttract()),
            (this.center = new MoveCenter()),
            (this.decay = 0),
            (this.distance = {}),
            (this.direction = 'none'),
            (this.drift = 0),
            (this.enable = !1),
            (this.gravity = new MoveGravity()),
            (this.path = new MovePath()),
            (this.outModes = new OutModes()),
            (this.random = !1),
            (this.size = !1),
            (this.speed = 2),
            (this.spin = new Spin()),
            (this.straight = !1),
            (this.trail = new MoveTrail()),
            (this.vibrate = !1),
            (this.warp = !1);
        }
        get bounce() {
          return this.collisions;
        }
        set bounce(w) {
          this.collisions = w;
        }
        get collisions() {
          return !1;
        }
        set collisions(w) {}
        get noise() {
          return this.path;
        }
        set noise(w) {
          this.path = w;
        }
        get outMode() {
          return this.outModes.default;
        }
        set outMode(w) {
          this.outModes.default = w;
        }
        get out_mode() {
          return this.outMode;
        }
        set out_mode(w) {
          this.outMode = w;
        }
        load(w) {
          if (!w) return;
          this.angle.load((0, $.hj)(w.angle) ? { value: w.angle } : w.angle),
            this.attract.load(w.attract),
            this.center.load(w.center),
            void 0 !== w.decay && (this.decay = (0, eo.Cs)(w.decay)),
            void 0 !== w.direction && (this.direction = w.direction),
            void 0 !== w.distance &&
              (this.distance = (0, $.hj)(w.distance)
                ? { horizontal: w.distance, vertical: w.distance }
                : { ...w.distance }),
            void 0 !== w.drift && (this.drift = (0, eo.Cs)(w.drift)),
            void 0 !== w.enable && (this.enable = w.enable),
            this.gravity.load(w.gravity);
          let S = w.outModes ?? w.outMode ?? w.out_mode;
          void 0 !== S && ((0, $.Kn)(S) ? this.outModes.load(S) : this.outModes.load({ default: S })),
            this.path.load(w.path ?? w.noise),
            void 0 !== w.random && (this.random = w.random),
            void 0 !== w.size && (this.size = w.size),
            void 0 !== w.speed && (this.speed = (0, eo.Cs)(w.speed)),
            this.spin.load(w.spin),
            void 0 !== w.straight && (this.straight = w.straight),
            this.trail.load(w.trail),
            void 0 !== w.vibrate && (this.vibrate = w.vibrate),
            void 0 !== w.warp && (this.warp = w.warp);
        }
      };
      let AnimationOptions = class AnimationOptions {
        constructor() {
          (this.count = 0), (this.enable = !1), (this.speed = 1), (this.decay = 0), (this.delay = 0), (this.sync = !1);
        }
        load(w) {
          w &&
            (void 0 !== w.count && (this.count = (0, eo.Cs)(w.count)),
            void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.speed && (this.speed = (0, eo.Cs)(w.speed)),
            void 0 !== w.decay && (this.decay = (0, eo.Cs)(w.decay)),
            void 0 !== w.delay && (this.delay = (0, eo.Cs)(w.delay)),
            void 0 !== w.sync && (this.sync = w.sync));
        }
      };
      let RangedAnimationOptions = class RangedAnimationOptions extends AnimationOptions {
        constructor() {
          super(), (this.mode = 'auto'), (this.startValue = 'random');
        }
        load(w) {
          super.load(w),
            w &&
              (void 0 !== w.minimumValue && (this.minimumValue = w.minimumValue),
              void 0 !== w.mode && (this.mode = w.mode),
              void 0 !== w.startValue && (this.startValue = w.startValue));
        }
      };
      let OpacityAnimation = class OpacityAnimation extends RangedAnimationOptions {
        constructor() {
          super(), (this.destroy = 'none'), (this.speed = 2);
        }
        get opacity_min() {
          return this.minimumValue;
        }
        set opacity_min(w) {
          this.minimumValue = w;
        }
        load(w) {
          w?.opacity_min !== void 0 && void 0 === w.minimumValue && (w.minimumValue = w.opacity_min),
            super.load(w),
            w && void 0 !== w.destroy && (this.destroy = w.destroy);
        }
      };
      let Opacity = class Opacity extends es.SW {
        constructor() {
          super(), (this.animation = new OpacityAnimation()), (this.random.minimumValue = 0.1), (this.value = 1);
        }
        get anim() {
          return this.animation;
        }
        set anim(w) {
          this.animation = w;
        }
        load(w) {
          if (!w) return;
          super.load(w);
          let S = w.animation ?? w.anim;
          void 0 !== S &&
            (this.animation.load(S),
            (this.value = (0, eo.Cs)(this.value, this.animation.enable ? this.animation.minimumValue : void 0)));
        }
      };
      let ParticlesDensity = class ParticlesDensity {
        constructor() {
          (this.enable = !1), (this.width = 1920), (this.height = 1080);
        }
        get area() {
          return this.width;
        }
        set area(w) {
          this.width = w;
        }
        get factor() {
          return this.height;
        }
        set factor(w) {
          this.height = w;
        }
        get value_area() {
          return this.area;
        }
        set value_area(w) {
          this.area = w;
        }
        load(w) {
          if (!w) return;
          void 0 !== w.enable && (this.enable = w.enable);
          let S = w.width ?? w.area ?? w.value_area;
          void 0 !== S && (this.width = S);
          let C = w.height ?? w.factor;
          void 0 !== C && (this.height = C);
        }
      };
      let ParticlesNumber = class ParticlesNumber {
        constructor() {
          (this.density = new ParticlesDensity()), (this.limit = 0), (this.value = 0);
        }
        get max() {
          return this.limit;
        }
        set max(w) {
          this.limit = w;
        }
        load(w) {
          if (!w) return;
          this.density.load(w.density);
          let S = w.limit ?? w.max;
          void 0 !== S && (this.limit = S), void 0 !== w.value && (this.value = w.value);
        }
      };
      let Shadow = class Shadow {
        constructor() {
          (this.blur = 0),
            (this.color = new ei.O()),
            (this.enable = !1),
            (this.offset = { x: 0, y: 0 }),
            (this.color.value = '#000');
        }
        load(w) {
          w &&
            (void 0 !== w.blur && (this.blur = w.blur),
            (this.color = ei.O.create(this.color, w.color)),
            void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.offset &&
              (void 0 !== w.offset.x && (this.offset.x = w.offset.x),
              void 0 !== w.offset.y && (this.offset.y = w.offset.y)));
        }
      };
      let el = 'character',
        ec = 'char',
        eu = 'image',
        ed = 'images',
        eh = 'polygon',
        ef = 'star';
      let Shape = class Shape {
        constructor() {
          (this.loadShape = (w, S, C, I) => {
            if (!w) return;
            let er = (0, $.kJ)(w),
              en = er ? [] : {},
              ei = er !== (0, $.kJ)(this.options[S]),
              eo = er !== (0, $.kJ)(this.options[C]);
            ei && (this.options[S] = en),
              eo && I && (this.options[C] = en),
              (this.options[S] = (0, $.ZB)(this.options[S] ?? en, w)),
              (!this.options[C] || I) && (this.options[C] = (0, $.ZB)(this.options[C] ?? en, w));
          }),
            (this.close = !0),
            (this.fill = !0),
            (this.options = {}),
            (this.type = 'circle');
        }
        get character() {
          return this.options[el] ?? this.options[ec];
        }
        set character(w) {
          this.options[ec] = this.options[el] = w;
        }
        get custom() {
          return this.options;
        }
        set custom(w) {
          this.options = w;
        }
        get image() {
          return this.options[eu] ?? this.options[ed];
        }
        set image(w) {
          this.options[ed] = this.options[eu] = w;
        }
        get images() {
          return this.image;
        }
        set images(w) {
          this.image = w;
        }
        get polygon() {
          return this.options[eh] ?? this.options[ef];
        }
        set polygon(w) {
          this.options[ef] = this.options[eh] = w;
        }
        get stroke() {
          return [];
        }
        set stroke(w) {}
        load(w) {
          if (!w) return;
          let S = w.options ?? w.custom;
          if (void 0 !== S)
            for (let w in S) {
              let C = S[w];
              C && (this.options[w] = (0, $.ZB)(this.options[w] ?? {}, C));
            }
          this.loadShape(w.character, el, ec, !0),
            this.loadShape(w.polygon, eh, ef, !1),
            this.loadShape(w.image ?? w.images, eu, ed, !0),
            void 0 !== w.close && (this.close = w.close),
            void 0 !== w.fill && (this.fill = w.fill),
            void 0 !== w.type && (this.type = w.type);
        }
      };
      let SizeAnimation = class SizeAnimation extends RangedAnimationOptions {
        constructor() {
          super(), (this.destroy = 'none'), (this.speed = 5);
        }
        get size_min() {
          return this.minimumValue;
        }
        set size_min(w) {
          this.minimumValue = w;
        }
        load(w) {
          w?.size_min !== void 0 && void 0 === w.minimumValue && (w.minimumValue = w.size_min),
            super.load(w),
            w && void 0 !== w.destroy && (this.destroy = w.destroy);
        }
      };
      let Size = class Size extends es.SW {
        constructor() {
          super(), (this.animation = new SizeAnimation()), (this.random.minimumValue = 1), (this.value = 3);
        }
        get anim() {
          return this.animation;
        }
        set anim(w) {
          this.animation = w;
        }
        load(w) {
          if ((super.load(w), !w)) return;
          let S = w.animation ?? w.anim;
          void 0 !== S &&
            (this.animation.load(S),
            (this.value = (0, eo.Cs)(this.value, this.animation.enable ? this.animation.minimumValue : void 0)));
        }
      };
      let Stroke = class Stroke {
        constructor() {
          this.width = 0;
        }
        load(w) {
          w &&
            (void 0 !== w.color && (this.color = AnimatableColor.create(this.color, w.color)),
            void 0 !== w.width && (this.width = (0, eo.Cs)(w.width)),
            void 0 !== w.opacity && (this.opacity = (0, eo.Cs)(w.opacity)));
        }
      };
      let ZIndex = class ZIndex extends es.SW {
        constructor() {
          super(), (this.opacityRate = 1), (this.sizeRate = 1), (this.velocityRate = 1);
        }
        load(w) {
          super.load(w),
            w &&
              (void 0 !== w.opacityRate && (this.opacityRate = w.opacityRate),
              void 0 !== w.sizeRate && (this.sizeRate = w.sizeRate),
              void 0 !== w.velocityRate && (this.velocityRate = w.velocityRate));
        }
      };
      let ParticlesOptions = class ParticlesOptions {
        constructor(w, S) {
          (this._engine = w),
            (this._container = S),
            (this.bounce = new ParticlesBounce()),
            (this.collisions = new Collisions()),
            (this.color = new AnimatableColor()),
            (this.color.value = '#fff'),
            (this.groups = {}),
            (this.move = new Move()),
            (this.number = new ParticlesNumber()),
            (this.opacity = new Opacity()),
            (this.reduceDuplicates = !1),
            (this.shadow = new Shadow()),
            (this.shape = new Shape()),
            (this.size = new Size()),
            (this.stroke = new Stroke()),
            (this.zIndex = new ZIndex());
        }
        load(w) {
          if (!w) return;
          if (
            (this.bounce.load(w.bounce),
            this.color.load(AnimatableColor.create(this.color, w.color)),
            void 0 !== w.groups)
          )
            for (let S in w.groups) {
              let C = w.groups[S];
              void 0 !== C && (this.groups[S] = (0, $.ZB)(this.groups[S] ?? {}, C));
            }
          this.move.load(w.move),
            this.number.load(w.number),
            this.opacity.load(w.opacity),
            void 0 !== w.reduceDuplicates && (this.reduceDuplicates = w.reduceDuplicates),
            this.shape.load(w.shape),
            this.size.load(w.size),
            this.shadow.load(w.shadow),
            this.zIndex.load(w.zIndex);
          let S = w.move?.collisions ?? w.move?.bounce;
          void 0 !== S && (this.collisions.enable = S),
            this.collisions.load(w.collisions),
            void 0 !== w.interactivity && (this.interactivity = (0, $.ZB)({}, w.interactivity));
          let C = w.stroke ?? w.shape?.stroke;
          if (
            (C &&
              (this.stroke = (0, $.KH)(C, (w) => {
                let S = new Stroke();
                return S.load(w), S;
              })),
            this._container)
          ) {
            let S = this._engine.plugins.updaters.get(this._container);
            if (S) for (let C of S) C.loadOptions && C.loadOptions(this, w);
            let C = this._engine.plugins.interactors.get(this._container);
            if (C) for (let S of C) S.loadParticlesOptions && S.loadParticlesOptions(this, w);
          }
        }
      };
      function loadOptions(w, ...S) {
        for (let C of S) w.load(C);
      }
      function loadParticlesOptions(w, S, ...C) {
        let I = new ParticlesOptions(w, S);
        return loadOptions(I, ...C), I;
      }
      let Options = class Options {
        constructor(w, S) {
          (this._findDefaultTheme = (w) =>
            this.themes.find((S) => S.default.value && S.default.mode === w) ??
            this.themes.find((w) => w.default.value && 'any' === w.default.mode)),
            (this._importPreset = (w) => {
              this.load(this._engine.plugins.getPreset(w));
            }),
            (this._engine = w),
            (this._container = S),
            (this.autoPlay = !0),
            (this.background = new Background()),
            (this.backgroundMask = new BackgroundMask()),
            (this.defaultThemes = {}),
            (this.delay = 0),
            (this.fullScreen = new FullScreen()),
            (this.detectRetina = !0),
            (this.duration = 0),
            (this.fpsLimit = 120),
            (this.interactivity = new Interactivity(w, S)),
            (this.manualParticles = []),
            (this.particles = loadParticlesOptions(this._engine, this._container)),
            (this.pauseOnBlur = !0),
            (this.pauseOnOutsideViewport = !0),
            (this.responsive = []),
            (this.smooth = !1),
            (this.style = {}),
            (this.themes = []),
            (this.zLayers = 100);
        }
        get backgroundMode() {
          return this.fullScreen;
        }
        set backgroundMode(w) {
          this.fullScreen.load(w);
        }
        get fps_limit() {
          return this.fpsLimit;
        }
        set fps_limit(w) {
          this.fpsLimit = w;
        }
        get retina_detect() {
          return this.detectRetina;
        }
        set retina_detect(w) {
          this.detectRetina = w;
        }
        load(w) {
          if (!w) return;
          void 0 !== w.preset && (0, $.KH)(w.preset, (w) => this._importPreset(w)),
            void 0 !== w.autoPlay && (this.autoPlay = w.autoPlay),
            void 0 !== w.delay && (this.delay = (0, eo.Cs)(w.delay));
          let S = w.detectRetina ?? w.retina_detect;
          void 0 !== S && (this.detectRetina = S), void 0 !== w.duration && (this.duration = (0, eo.Cs)(w.duration));
          let C = w.fpsLimit ?? w.fps_limit;
          void 0 !== C && (this.fpsLimit = C),
            void 0 !== w.pauseOnBlur && (this.pauseOnBlur = w.pauseOnBlur),
            void 0 !== w.pauseOnOutsideViewport && (this.pauseOnOutsideViewport = w.pauseOnOutsideViewport),
            void 0 !== w.zLayers && (this.zLayers = w.zLayers),
            this.background.load(w.background);
          let I = w.fullScreen ?? w.backgroundMode;
          (0, $.jn)(I) ? (this.fullScreen.enable = I) : this.fullScreen.load(I),
            this.backgroundMask.load(w.backgroundMask),
            this.interactivity.load(w.interactivity),
            w.manualParticles &&
              (this.manualParticles = w.manualParticles.map((w) => {
                let S = new ManualParticle();
                return S.load(w), S;
              })),
            this.particles.load(w.particles),
            (this.style = (0, $.ZB)(this.style, w.style)),
            this._engine.plugins.loadOptions(this, w),
            void 0 !== w.smooth && (this.smooth = w.smooth);
          let er = this._engine.plugins.interactors.get(this._container);
          if (er) for (let S of er) S.loadOptions && S.loadOptions(this, w);
          if (void 0 !== w.responsive)
            for (let S of w.responsive) {
              let w = new Responsive();
              w.load(S), this.responsive.push(w);
            }
          if ((this.responsive.sort((w, S) => w.maxWidth - S.maxWidth), void 0 !== w.themes))
            for (let S of w.themes) {
              let w = this.themes.find((w) => w.name === S.name);
              if (w) w.load(S);
              else {
                let w = new Theme();
                w.load(S), this.themes.push(w);
              }
            }
          (this.defaultThemes.dark = this._findDefaultTheme('dark')?.name),
            (this.defaultThemes.light = this._findDefaultTheme('light')?.name);
        }
        setResponsive(w, S, C) {
          this.load(C);
          let I = this.responsive.find((C) =>
            'screen' === C.mode && screen ? C.maxWidth > screen.availWidth : C.maxWidth * S > w
          );
          return this.load(I?.options), I?.maxWidth;
        }
        setTheme(w) {
          if (w) {
            let S = this.themes.find((S) => S.name === w);
            S && this.load(S.options);
          } else {
            let w = (0, $.HY)('(prefers-color-scheme: dark)'),
              S = w && w.matches,
              C = this._findDefaultTheme(S ? 'dark' : 'light');
            C && this.load(C.options);
          }
        }
      };
      let InteractionManager = class InteractionManager {
        constructor(w, S) {
          (this.container = S),
            (this._engine = w),
            (this._interactors = w.plugins.getInteractors(this.container, !0)),
            (this._externalInteractors = []),
            (this._particleInteractors = []);
        }
        async externalInteract(w) {
          for (let S of this._externalInteractors) S.isEnabled() && (await S.interact(w));
        }
        handleClickMode(w) {
          for (let S of this._externalInteractors) S.handleClickMode && S.handleClickMode(w);
        }
        init() {
          for (let w of ((this._externalInteractors = []), (this._particleInteractors = []), this._interactors)) {
            switch (w.type) {
              case 'external':
                this._externalInteractors.push(w);
                break;
              case 'particles':
                this._particleInteractors.push(w);
            }
            w.init();
          }
        }
        async particlesInteract(w, S) {
          for (let C of this._externalInteractors) C.clear(w, S);
          for (let C of this._particleInteractors) C.isEnabled(w) && (await C.interact(w, S));
        }
        async reset(w) {
          for (let S of this._externalInteractors) S.isEnabled() && S.reset(w);
          for (let S of this._particleInteractors) S.isEnabled(w) && S.reset(w);
        }
      };
      var ep = C(66290),
        em = C(91190);
      let fixOutMode = (w) => {
        if (!(0, $.dB)(w.outMode, w.checkModes)) return;
        let S = 2 * w.radius;
        w.coord > w.maxCoord - S ? w.setCb(-w.radius) : w.coord < S && w.setCb(w.radius);
      };
      let Particle = class Particle {
        constructor(w, S, C, en, ei, es) {
          (this.container = C),
            (this._calcPosition = (w, S, C, I = 0) => {
              for (let [, I] of w.plugins) {
                let w = void 0 !== I.particlePosition ? I.particlePosition(S, this) : void 0;
                if (w) return em.U.create(w.x, w.y, C);
              }
              let $ = w.canvas.size,
                er = (0, eo.mC)({ size: $, position: S }),
                en = em.U.create(er.x, er.y, C),
                ei = this.getRadius(),
                es = this.options.move.outModes,
                fixHorizontal = (S) => {
                  fixOutMode({
                    outMode: S,
                    checkModes: ['bounce', 'bounce-horizontal'],
                    coord: en.x,
                    maxCoord: w.canvas.size.width,
                    setCb: (w) => (en.x += w),
                    radius: ei
                  });
                },
                fixVertical = (S) => {
                  fixOutMode({
                    outMode: S,
                    checkModes: ['bounce', 'bounce-vertical'],
                    coord: en.y,
                    maxCoord: w.canvas.size.height,
                    setCb: (w) => (en.y += w),
                    radius: ei
                  });
                };
              return (fixHorizontal(es.left ?? es.default),
              fixHorizontal(es.right ?? es.default),
              fixVertical(es.top ?? es.default),
              fixVertical(es.bottom ?? es.default),
              this._checkOverlap(en, I))
                ? this._calcPosition(w, void 0, C, I + 1)
                : en;
            }),
            (this._calculateVelocity = () => {
              let w = (0, eo.lQ)(this.direction),
                S = w.copy(),
                C = this.options.move;
              if ('inside' === C.direction || 'outside' === C.direction) return S;
              let I = (Math.PI / 180) * (0, eo.Gu)(C.angle.value),
                $ = (Math.PI / 180) * (0, eo.Gu)(C.angle.offset),
                er = { left: $ - I / 2, right: $ + I / 2 };
              return (
                C.straight || (S.angle += (0, eo.vd)((0, eo.Cs)(er.left, er.right))),
                C.random && 'number' == typeof C.speed && (S.length *= (0, eo.sZ)()),
                S
              );
            }),
            (this._checkOverlap = (w, S = 0) => {
              let C = this.options.collisions,
                $ = this.getRadius();
              if (!C.enable) return !1;
              let er = C.overlap;
              if (er.enable) return !1;
              let en = er.retries;
              if (en >= 0 && S > en) throw Error(`${I.gK} particle is overlapping and can't be placed`);
              return !!this.container.particles.find((S) => (0, eo.Sp)(w, S.position) < $ + S.getRadius());
            }),
            (this._getRollColor = (w) => {
              if (!w || !this.roll || (!this.backColor && !this.roll.alter)) return w;
              let S = this.roll.horizontal && this.roll.vertical ? 2 : 1,
                C = this.roll.horizontal ? Math.PI / 2 : 0,
                I = Math.floor(((this.roll.angle ?? 0) + C) / (Math.PI / S)) % 2;
              return I
                ? this.backColor
                  ? this.backColor
                  : this.roll.alter
                  ? (0, er.PL)(w, this.roll.alter.type, this.roll.alter.value)
                  : w
                : w;
            }),
            (this._initPosition = (w) => {
              let S = this.container,
                C = (0, eo.Gu)(this.options.zIndex.value);
              (this.position = this._calcPosition(S, w, (0, eo.uZ)(C, 0, S.zLayers))),
                (this.initialPosition = this.position.copy());
              let I = S.canvas.size;
              switch (
                ((this.moveCenter = {
                  ...(0, $.bt)(this.options.move.center, I),
                  radius: this.options.move.center.radius ?? 0,
                  mode: this.options.move.center.mode ?? 'percent'
                }),
                (this.direction = (0, eo.Gk)(this.options.move.direction, this.position, this.moveCenter)),
                this.options.move.direction)
              ) {
                case 'inside':
                  this.outType = 'inside';
                  break;
                case 'outside':
                  this.outType = 'outside';
              }
              this.offset = ep.O.origin;
            }),
            (this._loadShapeData = (w, S) => {
              let C = w.options[this.shape];
              if (C) return (0, $.ZB)({ close: w.close, fill: w.fill }, (0, $.wA)(C, this.id, S));
            }),
            (this._engine = w),
            this.init(S, en, ei, es);
        }
        destroy(w) {
          if (this.unbreakable || this.destroyed) return;
          (this.destroyed = !0), (this.bubble.inRange = !1), (this.slow.inRange = !1);
          let S = this.container,
            C = this.pathGenerator;
          for (let [, C] of S.plugins) C.particleDestroyed && C.particleDestroyed(this, w);
          for (let C of S.particles.updaters) C.particleDestroyed && C.particleDestroyed(this, w);
          C && C.reset(this);
        }
        draw(w) {
          let S = this.container;
          for (let [, C] of S.plugins) S.canvas.drawParticlePlugin(C, this, w);
          S.canvas.drawParticle(this, w);
        }
        getFillColor() {
          return this._getRollColor(this.bubble.color ?? (0, en.gW)(this.color));
        }
        getMass() {
          return (this.getRadius() ** 2 * Math.PI) / 2;
        }
        getPosition() {
          return { x: this.position.x + this.offset.x, y: this.position.y + this.offset.y, z: this.position.z };
        }
        getRadius() {
          return this.bubble.radius ?? this.size.value;
        }
        getStrokeColor() {
          return this._getRollColor(this.bubble.color ?? (0, en.gW)(this.strokeColor));
        }
        init(w, S, C, I) {
          let er = this.container,
            ei = this._engine;
          (this.id = w),
            (this.group = I),
            (this.fill = !0),
            (this.pathRotation = !1),
            (this.close = !0),
            (this.lastPathTime = 0),
            (this.destroyed = !1),
            (this.unbreakable = !1),
            (this.rotation = 0),
            (this.misplaced = !1),
            (this.retina = { maxDistance: {} }),
            (this.outType = 'normal'),
            (this.ignoresResizeRatio = !0);
          let es = er.retina.pixelRatio,
            el = er.actualOptions,
            ec = loadParticlesOptions(this._engine, er, el.particles),
            eu = ec.shape.type,
            { reduceDuplicates: ed } = ec;
          this.shape = (0, $.wA)(eu, this.id, ed);
          let eh = ec.shape;
          if (C && C.shape && C.shape.type) {
            let w = C.shape.type,
              S = (0, $.wA)(w, this.id, ed);
            S && ((this.shape = S), eh.load(C.shape));
          }
          (this.shapeData = this._loadShapeData(eh, ed)), ec.load(C);
          let ef = this.shapeData;
          ef && ec.load(ef.particles);
          let ep = new Interactivity(ei, er);
          ep.load(er.actualOptions.interactivity),
            ep.load(ec.interactivity),
            (this.interactivity = ep),
            (this.fill = ef?.fill ?? ec.shape.fill),
            (this.close = ef?.close ?? ec.shape.close),
            (this.options = ec);
          let em = this.options.move.path;
          (this.pathDelay = 1e3 * (0, eo.NA)(em.delay)),
            em.generator &&
              ((this.pathGenerator = this._engine.plugins.getPathGenerator(em.generator)),
              this.pathGenerator && er.addPath(em.generator, this.pathGenerator) && this.pathGenerator.init(er)),
            er.retina.initParticle(this),
            (this.size = (0, $.V0)(this.options.size, es)),
            (this.bubble = { inRange: !1 }),
            (this.slow = { inRange: !1, factor: 1 }),
            this._initPosition(S),
            (this.initialVelocity = this._calculateVelocity()),
            (this.velocity = this.initialVelocity.copy()),
            (this.moveDecay = 1 - (0, eo.Gu)(this.options.move.decay));
          let eg = er.particles;
          (eg.needsSort = eg.needsSort || eg.lastZIndex < this.position.z),
            (eg.lastZIndex = this.position.z),
            (this.zIndexFactor = this.position.z / er.zLayers),
            (this.sides = 24);
          let ey = er.drawers.get(this.shape);
          !ey && (ey = this._engine.plugins.getShapeDrawer(this.shape)) && er.drawers.set(this.shape, ey),
            ey && ey.loadShape && ey.loadShape(this);
          let ev = ey?.getSidesCount;
          for (let w of (ev && (this.sides = ev(this)),
          (this.spawning = !1),
          (this.shadowColor = (0, en.tX)(this.options.shadow.color)),
          er.particles.updaters))
            w.init(this);
          for (let w of er.particles.movers) w.init && w.init(this);
          for (let [, w] of (ey && ey.particleInit && ey.particleInit(er, this), er.plugins))
            w.particleCreated && w.particleCreated(this);
        }
        isInsideCanvas() {
          let w = this.getRadius(),
            S = this.container.canvas.size,
            C = this.position;
          return C.x >= -w && C.y >= -w && C.y <= S.height + w && C.x <= S.width + w;
        }
        isVisible() {
          return !this.destroyed && !this.spawning && this.isInsideCanvas();
        }
        reset() {
          for (let w of this.container.particles.updaters) w.reset && w.reset(this);
        }
      };
      let Point = class Point {
        constructor(w, S) {
          (this.position = w), (this.particle = S);
        }
      };
      var eg = C(72836),
        ey = C(1995);
      let QuadTree = class QuadTree {
        constructor(w, S) {
          (this.rectangle = w),
            (this.capacity = S),
            (this._subdivide = () => {
              let { x: w, y: S } = this.rectangle.position,
                { width: C, height: I } = this.rectangle.size,
                { capacity: $ } = this;
              for (let er = 0; er < 4; er++)
                this._subs.push(
                  new QuadTree(
                    new ey.A(w + (C / 2) * (er % 2), S + (I / 2) * (Math.round(er / 2) - (er % 2)), C / 2, I / 2),
                    $
                  )
                );
              this._divided = !0;
            }),
            (this._points = []),
            (this._divided = !1),
            (this._subs = []);
        }
        insert(w) {
          return (
            !!this.rectangle.contains(w.position) &&
            (this._points.length < this.capacity
              ? (this._points.push(w), !0)
              : (this._divided || this._subdivide(), this._subs.some((S) => S.insert(w))))
          );
        }
        query(w, S, C) {
          let I = C || [];
          if (!w.intersects(this.rectangle)) return [];
          for (let C of this._points)
            (!w.contains(C.position) &&
              (0, eo.Sp)(w.position, C.position) > C.particle.getRadius() &&
              (!S || S(C.particle))) ||
              I.push(C.particle);
          if (this._divided) for (let C of this._subs) C.query(w, S, I);
          return I;
        }
        queryCircle(w, S, C) {
          return this.query(new eg.C(w.x, w.y, S), C);
        }
        queryRectangle(w, S, C) {
          return this.query(new ey.A(w.x, w.y, S.width, S.height), C);
        }
      };
      let qTreeRectangle = (w) => new ey.A(-w.width / 4, -w.height / 4, (3 * w.width) / 2, (3 * w.height) / 2);
      let Particles = class Particles {
        constructor(w, S) {
          (this._applyDensity = (w, S, C) => {
            if (!w.number.density?.enable) return;
            let I = w.number,
              $ = this._initDensityFactor(I.density),
              er = I.value,
              en = I.limit > 0 ? I.limit : er,
              ei = Math.min(er, en) * $ + S,
              eo = Math.min(this.count, this.filter((w) => w.group === C).length);
            (this.limit = I.limit * $),
              eo < ei ? this.push(Math.abs(ei - eo), void 0, w, C) : eo > ei && this.removeQuantity(eo - ei, C);
          }),
            (this._initDensityFactor = (w) => {
              let S = this._container;
              if (!S.canvas.element || !w.enable) return 1;
              let C = S.canvas.element,
                I = S.retina.pixelRatio;
              return (C.width * C.height) / (w.factor * I ** 2 * w.area);
            }),
            (this._pushParticle = (w, S, C, er) => {
              try {
                let I = this.pool.pop();
                I
                  ? I.init(this._nextId, w, S, C)
                  : (I = new Particle(this._engine, this._nextId, this._container, w, S, C));
                let $ = !0;
                if ((er && ($ = er(I)), !$)) return;
                return (
                  this._array.push(I),
                  this._zArray.push(I),
                  this._nextId++,
                  this._engine.dispatchEvent('particleAdded', { container: this._container, data: { particle: I } }),
                  I
                );
              } catch (w) {
                (0, $.jl)().warning(`${I.gK} adding particle: ${w}`);
                return;
              }
            }),
            (this._removeParticle = (w, S, C) => {
              let I = this._array[w];
              if (!I || I.group !== S) return !1;
              I.destroy(C);
              let $ = this._zArray.indexOf(I);
              return (
                this._array.splice(w, 1),
                this._zArray.splice($, 1),
                this.pool.push(I),
                this._engine.dispatchEvent('particleRemoved', { container: this._container, data: { particle: I } }),
                !0
              );
            }),
            (this._engine = w),
            (this._container = S),
            (this._nextId = 0),
            (this._array = []),
            (this._zArray = []),
            (this.pool = []),
            (this.limit = 0),
            (this.needsSort = !1),
            (this.lastZIndex = 0),
            (this._interactionManager = new InteractionManager(w, S));
          let C = S.canvas.size;
          (this.quadTree = new QuadTree(qTreeRectangle(C), 4)),
            (this.movers = this._engine.plugins.getMovers(S, !0)),
            (this.updaters = this._engine.plugins.getUpdaters(S, !0));
        }
        get count() {
          return this._array.length;
        }
        addManualParticles() {
          let w = this._container,
            S = w.actualOptions;
          for (let C of S.manualParticles)
            this.addParticle(C.position ? (0, $.bt)(C.position, w.canvas.size) : void 0, C.options);
        }
        addParticle(w, S, C, I) {
          let $ = this._container,
            er = $.actualOptions,
            en = er.particles.number.limit;
          if (en > 0) {
            let w = this.count + 1 - en;
            w > 0 && this.removeQuantity(w);
          }
          return this._pushParticle(w, S, C, I);
        }
        clear() {
          (this._array = []), (this._zArray = []);
        }
        destroy() {
          (this._array = []), (this._zArray = []), (this.movers = []), (this.updaters = []);
        }
        async draw(w) {
          let S = this._container;
          for (let [, C] of (S.canvas.clear(), await this.update(w), S.plugins)) S.canvas.drawPlugin(C, w);
          for (let S of this._zArray) S.draw(w);
        }
        filter(w) {
          return this._array.filter(w);
        }
        find(w) {
          return this._array.find(w);
        }
        handleClickMode(w) {
          this._interactionManager.handleClickMode(w);
        }
        init() {
          let w = this._container,
            S = w.actualOptions;
          (this.lastZIndex = 0), (this.needsSort = !1);
          let C = !1;
          for (let [, S] of ((this.updaters = this._engine.plugins.getUpdaters(w, !0)),
          this._interactionManager.init(),
          w.plugins))
            if ((void 0 !== S.particlesInitialization && (C = S.particlesInitialization()), C)) break;
          for (let [, S] of (this._interactionManager.init(), w.pathGenerators)) S.init(w);
          if ((this.addManualParticles(), !C)) {
            for (let w in S.particles.groups) {
              let C = S.particles.groups[w];
              for (let I = this.count, $ = 0; $ < C.number?.value && I < S.particles.number.value; I++, $++)
                this.addParticle(void 0, C, w);
            }
            for (let w = this.count; w < S.particles.number.value; w++) this.addParticle();
          }
        }
        push(w, S, C, I) {
          this.pushing = !0;
          for (let $ = 0; $ < w; $++) this.addParticle(S?.position, C, I);
          this.pushing = !1;
        }
        async redraw() {
          this.clear(), this.init(), await this.draw({ value: 0, factor: 0 });
        }
        remove(w, S, C) {
          this.removeAt(this._array.indexOf(w), void 0, S, C);
        }
        removeAt(w, S = 1, C, I) {
          if (w < 0 || w > this.count) return;
          let $ = 0;
          for (let er = w; $ < S && er < this.count; er++) this._removeParticle(er--, C, I) && $++;
        }
        removeQuantity(w, S) {
          this.removeAt(0, w, S);
        }
        setDensity() {
          let w = this._container.actualOptions,
            S = w.particles.groups;
          for (let w in S) this._applyDensity(S[w], 0, w);
          this._applyDensity(w.particles, w.manualParticles.length);
        }
        async update(w) {
          let S = this._container,
            C = new Set();
          for (let [, w] of ((this.quadTree = new QuadTree(qTreeRectangle(S.canvas.size), 4)), S.pathGenerators))
            w.update();
          for (let [, C] of S.plugins) C.update && C.update(w);
          for (let I of this._array) {
            let $ = S.canvas.resizeFactor;
            for (let [, S] of ($ &&
              !I.ignoresResizeRatio &&
              ((I.position.x *= $.width),
              (I.position.y *= $.height),
              (I.initialPosition.x *= $.width),
              (I.initialPosition.y *= $.height)),
            (I.ignoresResizeRatio = !1),
            await this._interactionManager.reset(I),
            this._container.plugins)) {
              if (I.destroyed) break;
              S.particleUpdate && S.particleUpdate(I, w);
            }
            for (let S of this.movers) S.isEnabled(I) && S.move(I, w);
            if (I.destroyed) {
              C.add(I);
              continue;
            }
            this.quadTree.insert(new Point(I.getPosition(), I));
          }
          if (C.size) {
            let checkDelete = (w) => !C.has(w);
            (this._array = this.filter(checkDelete)),
              (this._zArray = this._zArray.filter(checkDelete)),
              this.pool.push(...C);
          }
          for (let S of (await this._interactionManager.externalInteract(w), this._array)) {
            for (let C of this.updaters) C.update(S, w);
            S.destroyed || S.spawning || (await this._interactionManager.particlesInteract(S, w));
          }
          if ((delete S.canvas.resizeFactor, this.needsSort)) {
            let w = this._zArray;
            w.sort((w, S) => S.position.z - w.position.z || w.id - S.id),
              (this.lastZIndex = w[w.length - 1].position.z),
              (this.needsSort = !1);
          }
        }
      };
      let Retina = class Retina {
        constructor(w) {
          (this.container = w), (this.pixelRatio = 1), (this.reduceFactor = 1);
        }
        init() {
          let w = this.container,
            S = w.actualOptions;
          (this.pixelRatio = !S.detectRetina || (0, $.Kr)() ? 1 : window.devicePixelRatio), (this.reduceFactor = 1);
          let C = this.pixelRatio;
          if (w.canvas.element) {
            let S = w.canvas.element;
            (w.canvas.size.width = S.offsetWidth * C), (w.canvas.size.height = S.offsetHeight * C);
          }
          let I = S.particles,
            er = I.move;
          (this.attractDistance = (0, eo.Gu)(er.attract.distance) * C),
            (this.maxSpeed = (0, eo.Gu)(er.gravity.maxSpeed) * C),
            (this.sizeAnimationSpeed = (0, eo.Gu)(I.size.animation.speed) * C);
        }
        initParticle(w) {
          let S = w.options,
            C = this.pixelRatio,
            I = S.move,
            $ = I.distance,
            er = w.retina;
          (er.attractDistance = (0, eo.Gu)(I.attract.distance) * C),
            (er.moveDrift = (0, eo.Gu)(I.drift) * C),
            (er.moveSpeed = (0, eo.Gu)(I.speed) * C),
            (er.sizeAnimationSpeed = (0, eo.Gu)(S.size.animation.speed) * C);
          let en = er.maxDistance;
          (en.horizontal = void 0 !== $.horizontal ? $.horizontal * C : void 0),
            (en.vertical = void 0 !== $.vertical ? $.vertical * C : void 0),
            (er.maxSpeed = (0, eo.Gu)(I.gravity.maxSpeed) * C);
        }
      };
      function guardCheck(w) {
        return w && !w.destroyed;
      }
      function initDelta(w, S = 60, C = !1) {
        return { value: w, factor: C ? 60 / S : (60 * w) / 1e3 };
      }
      function loadContainerOptions(w, S, ...C) {
        let I = new Options(w, S);
        return loadOptions(I, ...C), I;
      }
      let ev = { generate: (w) => w.velocity, init: () => {}, update: () => {}, reset: () => {} };
      let Container = class Container {
        constructor(w, S, C) {
          (this.id = S),
            (this._intersectionManager = (w) => {
              if (guardCheck(this) && this.actualOptions.pauseOnOutsideViewport)
                for (let S of w)
                  S.target === this.interactivity.element && (S.isIntersecting ? this.play : this.pause)();
            }),
            (this._nextFrame = async (w) => {
              try {
                if (!this.smooth && void 0 !== this.lastFrameTime && w < this.lastFrameTime + 1e3 / this.fpsLimit) {
                  this.draw(!1);
                  return;
                }
                this.lastFrameTime ??= w;
                let S = initDelta(w - this.lastFrameTime, this.fpsLimit, this.smooth);
                if ((this.addLifeTime(S.value), (this.lastFrameTime = w), S.value > 1e3)) {
                  this.draw(!1);
                  return;
                }
                if ((await this.particles.draw(S), !this.alive())) {
                  this.destroy();
                  return;
                }
                this.getAnimationStatus() && this.draw(!1);
              } catch (w) {
                (0, $.jl)().error(`${I.gK} in animation loop`, w);
              }
            }),
            (this._engine = w),
            (this.fpsLimit = 120),
            (this.smooth = !1),
            (this._delay = 0),
            (this._duration = 0),
            (this._lifeTime = 0),
            (this._firstStart = !0),
            (this.started = !1),
            (this.destroyed = !1),
            (this._paused = !0),
            (this.lastFrameTime = 0),
            (this.zLayers = 100),
            (this.pageHidden = !1),
            (this._sourceOptions = C),
            (this._initialSourceOptions = C),
            (this.retina = new Retina(this)),
            (this.canvas = new Canvas(this)),
            (this.particles = new Particles(this._engine, this)),
            (this.pathGenerators = new Map()),
            (this.interactivity = { mouse: { clicking: !1, inside: !1 } }),
            (this.plugins = new Map()),
            (this.drawers = new Map()),
            (this._options = loadContainerOptions(this._engine, this)),
            (this.actualOptions = loadContainerOptions(this._engine, this)),
            (this._eventListeners = new EventListeners(this)),
            'undefined' != typeof IntersectionObserver &&
              IntersectionObserver &&
              (this._intersectionObserver = new IntersectionObserver((w) => this._intersectionManager(w))),
            this._engine.dispatchEvent('containerBuilt', { container: this });
        }
        get options() {
          return this._options;
        }
        get sourceOptions() {
          return this._sourceOptions;
        }
        addClickHandler(w) {
          if (!guardCheck(this)) return;
          let S = this.interactivity.element;
          if (!S) return;
          let clickOrTouchHandler = (S, C, I) => {
              if (!guardCheck(this)) return;
              let $ = this.retina.pixelRatio,
                er = { x: C.x * $, y: C.y * $ },
                en = this.particles.quadTree.queryCircle(er, I * $);
              w(S, en);
            },
            C = !1,
            I = !1;
          S.addEventListener('click', (w) => {
            if (!guardCheck(this)) return;
            let S = { x: w.offsetX || w.clientX, y: w.offsetY || w.clientY };
            clickOrTouchHandler(w, S, 1);
          }),
            S.addEventListener('touchstart', () => {
              guardCheck(this) && ((C = !0), (I = !1));
            }),
            S.addEventListener('touchmove', () => {
              guardCheck(this) && (I = !0);
            }),
            S.addEventListener('touchend', (w) => {
              if (guardCheck(this)) {
                if (C && !I) {
                  let S = w.touches[w.touches.length - 1];
                  if (!S && !(S = w.changedTouches[w.changedTouches.length - 1])) return;
                  let C = this.canvas.element,
                    I = C ? C.getBoundingClientRect() : void 0,
                    $ = { x: S.clientX - (I ? I.left : 0), y: S.clientY - (I ? I.top : 0) };
                  clickOrTouchHandler(w, $, Math.max(S.radiusX, S.radiusY));
                }
                (C = !1), (I = !1);
              }
            }),
            S.addEventListener('touchcancel', () => {
              guardCheck(this) && ((C = !1), (I = !1));
            });
        }
        addLifeTime(w) {
          this._lifeTime += w;
        }
        addPath(w, S, C = !1) {
          return (
            !(!guardCheck(this) || (!C && this.pathGenerators.has(w))) && (this.pathGenerators.set(w, S ?? ev), !0)
          );
        }
        alive() {
          return !this._duration || this._lifeTime <= this._duration;
        }
        destroy() {
          if (!guardCheck(this)) return;
          for (let [, w] of (this.stop(), this.particles.destroy(), this.canvas.destroy(), this.drawers))
            w.destroy && w.destroy(this);
          for (let w of this.drawers.keys()) this.drawers.delete(w);
          this._engine.plugins.destroy(this), (this.destroyed = !0);
          let w = this._engine.dom(),
            S = w.findIndex((w) => w === this);
          S >= 0 && w.splice(S, 1), this._engine.dispatchEvent('containerDestroyed', { container: this });
        }
        draw(w) {
          if (!guardCheck(this)) return;
          let S = w;
          this._drawAnimationFrame = requestAnimationFrame(async (w) => {
            S && ((this.lastFrameTime = void 0), (S = !1)), await this._nextFrame(w);
          });
        }
        async export(w, S = {}) {
          for (let [, C] of this.plugins) {
            if (!C.export) continue;
            let I = await C.export(w, S);
            if (I.supported) return I.blob;
          }
          (0, $.jl)().error(`${I.gK} - Export plugin with type ${w} not found`);
        }
        getAnimationStatus() {
          return !this._paused && !this.pageHidden && guardCheck(this);
        }
        handleClickMode(w) {
          if (guardCheck(this))
            for (let [, S] of (this.particles.handleClickMode(w), this.plugins))
              S.handleClickMode && S.handleClickMode(w);
        }
        async init() {
          if (!guardCheck(this)) return;
          let w = this._engine.plugins.getSupportedShapes();
          for (let S of w) {
            let w = this._engine.plugins.getShapeDrawer(S);
            w && this.drawers.set(S, w);
          }
          (this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions)),
            (this.actualOptions = loadContainerOptions(this._engine, this, this._options));
          let S = this._engine.plugins.getAvailablePlugins(this);
          for (let [w, C] of S) this.plugins.set(w, C);
          for (let [, w] of (this.retina.init(),
          await this.canvas.init(),
          this.updateActualOptions(),
          this.canvas.initBackground(),
          this.canvas.resize(),
          (this.zLayers = this.actualOptions.zLayers),
          (this._duration = 1e3 * (0, eo.Gu)(this.actualOptions.duration)),
          (this._delay = 1e3 * (0, eo.Gu)(this.actualOptions.delay)),
          (this._lifeTime = 0),
          (this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120),
          (this.smooth = this.actualOptions.smooth),
          this.drawers))
            w.init && (await w.init(this));
          for (let [, w] of this.plugins) w.init && (await w.init());
          for (let [, w] of (this._engine.dispatchEvent('containerInit', { container: this }),
          this.particles.init(),
          this.particles.setDensity(),
          this.plugins))
            w.particlesSetup && w.particlesSetup();
          this._engine.dispatchEvent('particlesSetup', { container: this });
        }
        async loadTheme(w) {
          guardCheck(this) && ((this._currentTheme = w), await this.refresh());
        }
        pause() {
          if (
            guardCheck(this) &&
            (void 0 !== this._drawAnimationFrame &&
              (cancelAnimationFrame(this._drawAnimationFrame), delete this._drawAnimationFrame),
            !this._paused)
          ) {
            for (let [, w] of this.plugins) w.pause && w.pause();
            this.pageHidden || (this._paused = !0), this._engine.dispatchEvent('containerPaused', { container: this });
          }
        }
        play(w) {
          if (!guardCheck(this)) return;
          let S = this._paused || w;
          if (this._firstStart && !this.actualOptions.autoPlay) {
            this._firstStart = !1;
            return;
          }
          if ((this._paused && (this._paused = !1), S)) for (let [, w] of this.plugins) w.play && w.play();
          this._engine.dispatchEvent('containerPlay', { container: this }), this.draw(S || !1);
        }
        async refresh() {
          if (guardCheck(this)) return this.stop(), this.start();
        }
        async reset() {
          if (guardCheck(this))
            return (
              (this._initialSourceOptions = void 0),
              (this._options = loadContainerOptions(this._engine, this)),
              (this.actualOptions = loadContainerOptions(this._engine, this, this._options)),
              this.refresh()
            );
        }
        setNoise(w, S, C) {
          guardCheck(this) && this.setPath(w, S, C);
        }
        setPath(w, S, C) {
          if (!w || !guardCheck(this)) return;
          let I = { ...ev };
          (0, $.mf)(w)
            ? ((I.generate = w), S && (I.init = S), C && (I.update = C))
            : ((I.generate = w.generate || I.generate), (I.init = w.init || I.init), (I.update = w.update || I.update)),
            this.addPath('default', I, !0);
        }
        async start() {
          guardCheck(this) &&
            !this.started &&
            (await this.init(),
            (this.started = !0),
            await new Promise((w) => {
              this._delayTimeout = setTimeout(async () => {
                for (let [, w] of (this._eventListeners.addListeners(),
                this.interactivity.element instanceof HTMLElement &&
                  this._intersectionObserver &&
                  this._intersectionObserver.observe(this.interactivity.element),
                this.plugins))
                  w.start && (await w.start());
                this._engine.dispatchEvent('containerStarted', { container: this }), this.play(), w();
              }, this._delay);
            }));
        }
        stop() {
          if (guardCheck(this) && this.started) {
            for (let [, w] of (this._delayTimeout && (clearTimeout(this._delayTimeout), delete this._delayTimeout),
            (this._firstStart = !0),
            (this.started = !1),
            this._eventListeners.removeListeners(),
            this.pause(),
            this.particles.clear(),
            this.canvas.stop(),
            this.interactivity.element instanceof HTMLElement &&
              this._intersectionObserver &&
              this._intersectionObserver.unobserve(this.interactivity.element),
            this.plugins))
              w.stop && w.stop();
            for (let w of this.plugins.keys()) this.plugins.delete(w);
            (this._sourceOptions = this._options), this._engine.dispatchEvent('containerStopped', { container: this });
          }
        }
        updateActualOptions() {
          this.actualOptions.responsive = [];
          let w = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);
          return (
            this.actualOptions.setTheme(this._currentTheme),
            this.responsiveMaxWidth !== w && ((this.responsiveMaxWidth = w), !0)
          );
        }
      };
      let EventDispatcher = class EventDispatcher {
        constructor() {
          this._listeners = new Map();
        }
        addEventListener(w, S) {
          this.removeEventListener(w, S);
          let C = this._listeners.get(w);
          C || ((C = []), this._listeners.set(w, C)), C.push(S);
        }
        dispatchEvent(w, S) {
          let C = this._listeners.get(w);
          C && C.forEach((w) => w(S));
        }
        hasEventListener(w) {
          return !!this._listeners.get(w);
        }
        removeAllEventListeners(w) {
          w ? this._listeners.delete(w) : (this._listeners = new Map());
        }
        removeEventListener(w, S) {
          let C = this._listeners.get(w);
          if (!C) return;
          let I = C.length,
            $ = C.indexOf(S);
          $ < 0 || (1 === I ? this._listeners.delete(w) : C.splice($, 1));
        }
      };
      function getItemsFromInitializer(w, S, C, I = !1) {
        let $ = S.get(w);
        return (!$ || I) && (($ = [...C.values()].map((S) => S(w))), S.set(w, $)), $;
      }
      let Plugins = class Plugins {
        constructor(w) {
          (this._engine = w),
            (this.plugins = []),
            (this._initializers = { interactors: new Map(), movers: new Map(), updaters: new Map() }),
            (this.interactors = new Map()),
            (this.movers = new Map()),
            (this.updaters = new Map()),
            (this.presets = new Map()),
            (this.drawers = new Map()),
            (this.pathGenerators = new Map());
        }
        addInteractor(w, S) {
          this._initializers.interactors.set(w, S);
        }
        addParticleMover(w, S) {
          this._initializers.movers.set(w, S);
        }
        addParticleUpdater(w, S) {
          this._initializers.updaters.set(w, S);
        }
        addPathGenerator(w, S) {
          this.getPathGenerator(w) || this.pathGenerators.set(w, S);
        }
        addPlugin(w) {
          this.getPlugin(w.id) || this.plugins.push(w);
        }
        addPreset(w, S, C = !1) {
          (C || !this.getPreset(w)) && this.presets.set(w, S);
        }
        addShapeDrawer(w, S) {
          (0, $.KH)(w, (w) => {
            this.getShapeDrawer(w) || this.drawers.set(w, S);
          });
        }
        destroy(w) {
          this.updaters.delete(w), this.movers.delete(w), this.interactors.delete(w);
        }
        getAvailablePlugins(w) {
          let S = new Map();
          for (let C of this.plugins) C.needsPlugin(w.actualOptions) && S.set(C.id, C.getPlugin(w));
          return S;
        }
        getInteractors(w, S = !1) {
          return getItemsFromInitializer(w, this.interactors, this._initializers.interactors, S);
        }
        getMovers(w, S = !1) {
          return getItemsFromInitializer(w, this.movers, this._initializers.movers, S);
        }
        getPathGenerator(w) {
          return this.pathGenerators.get(w);
        }
        getPlugin(w) {
          return this.plugins.find((S) => S.id === w);
        }
        getPreset(w) {
          return this.presets.get(w);
        }
        getShapeDrawer(w) {
          return this.drawers.get(w);
        }
        getSupportedShapes() {
          return this.drawers.keys();
        }
        getUpdaters(w, S = !1) {
          return getItemsFromInitializer(w, this.updaters, this._initializers.updaters, S);
        }
        loadOptions(w, S) {
          for (let C of this.plugins) C.loadOptions(w, S);
        }
        loadParticlesOptions(w, S, ...C) {
          let I = this.updaters.get(w);
          if (I) for (let w of I) w.loadOptions && w.loadOptions(S, ...C);
        }
      };
      async function getDataFromUrl(w) {
        let S = (0, $.wA)(w.url, w.index);
        if (!S) return w.fallback;
        let C = await fetch(S);
        return C.ok ? C.json() : ((0, $.jl)().error(`${I.gK} ${C.status} while retrieving config file`), w.fallback);
      }
      function isParamsEmpty(w) {
        return !w.id && !w.element && !w.url && !w.options;
      }
      function isParams(w) {
        return !isParamsEmpty(w);
      }
      let Engine = class Engine {
        constructor() {
          (this._configs = new Map()),
            (this._domArray = []),
            (this._eventDispatcher = new EventDispatcher()),
            (this._initialized = !1),
            (this.plugins = new Plugins(this));
        }
        get configs() {
          let w = {};
          for (let [S, C] of this._configs) w[S] = C;
          return w;
        }
        get version() {
          return '2.12.0';
        }
        addConfig(w, S) {
          (0, $.HD)(w) ? S && ((S.name = w), this._configs.set(w, S)) : this._configs.set(w.name ?? 'default', w);
        }
        addEventListener(w, S) {
          this._eventDispatcher.addEventListener(w, S);
        }
        async addInteractor(w, S, C = !0) {
          this.plugins.addInteractor(w, S), await this.refresh(C);
        }
        async addMover(w, S, C = !0) {
          this.plugins.addParticleMover(w, S), await this.refresh(C);
        }
        async addParticleUpdater(w, S, C = !0) {
          this.plugins.addParticleUpdater(w, S), await this.refresh(C);
        }
        async addPathGenerator(w, S, C = !0) {
          this.plugins.addPathGenerator(w, S), await this.refresh(C);
        }
        async addPlugin(w, S = !0) {
          this.plugins.addPlugin(w), await this.refresh(S);
        }
        async addPreset(w, S, C = !1, I = !0) {
          this.plugins.addPreset(w, S, C), await this.refresh(I);
        }
        async addShape(w, S, C, I, er, en = !0) {
          let ei;
          let eo = en,
            es,
            el,
            ec;
          (0, $.jn)(C) ? ((eo = C), (es = void 0)) : (es = C),
            (0, $.jn)(I) ? ((eo = I), (el = void 0)) : (el = I),
            (0, $.jn)(er) ? ((eo = er), (ec = void 0)) : (ec = er),
            (ei = (0, $.mf)(S) ? { afterEffect: el, destroy: ec, draw: S, init: es } : S),
            this.plugins.addShapeDrawer(w, ei),
            await this.refresh(eo);
        }
        dispatchEvent(w, S) {
          this._eventDispatcher.dispatchEvent(w, S);
        }
        dom() {
          return this._domArray;
        }
        domItem(w) {
          let S = this.dom(),
            C = S[w];
          if (!C || C.destroyed) {
            S.splice(w, 1);
            return;
          }
          return C;
        }
        init() {
          this._initialized || (this._initialized = !0);
        }
        async load(w, S) {
          return this.loadFromArray(w, S);
        }
        async loadFromArray(w, S, C) {
          let I;
          return (
            isParams(w)
              ? (I = w)
              : ((I = {}),
                (0, $.HD)(w) ? (I.id = w) : (I.options = w),
                (0, $.hj)(S) ? (I.index = S) : (I.options = S ?? I.options),
                (I.index = C ?? I.index)),
            this._loadParams(I)
          );
        }
        async loadJSON(w, S, C) {
          let I, er;
          return (
            (0, $.hj)(S) || void 0 === S ? (I = w) : ((er = w), (I = S)), this._loadParams({ id: er, url: I, index: C })
          );
        }
        async refresh(w = !0) {
          w && this.dom().forEach((w) => w.refresh());
        }
        removeEventListener(w, S) {
          this._eventDispatcher.removeEventListener(w, S);
        }
        async set(w, S, C, I) {
          let er = { index: I };
          return (
            (0, $.HD)(w) ? (er.id = w) : (er.element = w),
            S instanceof HTMLElement ? (er.element = S) : (er.options = S),
            (0, $.hj)(C) ? (er.index = C) : (er.options = C ?? er.options),
            this._loadParams(er)
          );
        }
        async setJSON(w, S, C, I) {
          let $ = {};
          return (
            w instanceof HTMLElement
              ? (($.element = w), ($.url = S), ($.index = C))
              : (($.id = w), ($.element = S), ($.url = C), ($.index = I)),
            this._loadParams($)
          );
        }
        setOnClickHandler(w) {
          let S = this.dom();
          if (!S.length) throw Error(`${I.gK} can only set click handlers after calling tsParticles.load()`);
          for (let C of S) C.addClickHandler(w);
        }
        async _loadParams(w) {
          let S;
          let C = w.id ?? `tsparticles${Math.floor(1e4 * (0, eo.sZ)())}`,
            { index: er, url: en } = w,
            ei = en ? await getDataFromUrl({ fallback: w.options, url: en, index: er }) : w.options,
            es = w.element ?? document.getElementById(C);
          es || (((es = document.createElement('div')).id = C), document.body.append(es));
          let el = (0, $.wA)(ei, er),
            ec = this.dom(),
            eu = ec.findIndex((w) => w.id === C);
          if (eu >= 0) {
            let w = this.domItem(eu);
            w && !w.destroyed && (w.destroy(), ec.splice(eu, 1));
          }
          if ('canvas' === es.tagName.toLowerCase()) (S = es).dataset[I.YU] = 'false';
          else {
            let w = es.getElementsByTagName('canvas');
            w.length
              ? ((S = w[0]).dataset[I.YU] = 'false')
              : (((S = document.createElement('canvas')).dataset[I.YU] = 'true'), es.appendChild(S));
          }
          S.style.width || (S.style.width = '100%'), S.style.height || (S.style.height = '100%');
          let ed = new Container(this, C, el);
          return eu >= 0 ? ec.splice(eu, 0, ed) : ec.push(ed), ed.canvas.loadCanvas(S), await ed.start(), ed;
        }
      };
      let HslColorManager = class HslColorManager {
        constructor() {
          (this.key = 'hsl'), (this.stringPrefix = 'hsl');
        }
        handleColor(w) {
          let S = w.value,
            C = S.hsl ?? w.value;
          if (void 0 !== C.h && void 0 !== C.s && void 0 !== C.l) return (0, en.ve)(C);
        }
        handleRangeColor(w) {
          let S = w.value,
            C = S.hsl ?? w.value;
          if (void 0 !== C.h && void 0 !== C.l)
            return (0, en.ve)({ h: (0, eo.Gu)(C.h), l: (0, eo.Gu)(C.l), s: (0, eo.Gu)(C.s) });
        }
        parseString(w) {
          if (!w.startsWith('hsl')) return;
          let S = /hsla?\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([\d.%]+)\s*)?\)/i.exec(w);
          return S
            ? (0, en.Y6)({
                a: S.length > 4 ? (0, eo.BV)(S[5]) : 1,
                h: parseInt(S[1], 10),
                l: parseInt(S[3], 10),
                s: parseInt(S[2], 10)
              })
            : void 0;
        }
      };
      let RgbColorManager = class RgbColorManager {
        constructor() {
          (this.key = 'rgb'), (this.stringPrefix = 'rgb');
        }
        handleColor(w) {
          let S = w.value,
            C = S.rgb ?? w.value;
          if (void 0 !== C.r) return C;
        }
        handleRangeColor(w) {
          let S = w.value,
            C = S.rgb ?? w.value;
          if (void 0 !== C.r) return { r: (0, eo.Gu)(C.r), g: (0, eo.Gu)(C.g), b: (0, eo.Gu)(C.b) };
        }
        parseString(w) {
          if (!w.startsWith(this.stringPrefix)) return;
          let S = /rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([\d.%]+)\s*)?\)/i.exec(w);
          return S
            ? {
                a: S.length > 4 ? (0, eo.BV)(S[5]) : 1,
                b: parseInt(S[3], 10),
                g: parseInt(S[2], 10),
                r: parseInt(S[1], 10)
              }
            : void 0;
        }
      };
      function init() {
        let w = new RgbColorManager(),
          S = new HslColorManager();
        (0, en.VI)(w), (0, en.VI)(S);
        let C = new Engine();
        return C.init(), C;
      }
      let eb = init();
      (0, $.Kr)() || (window.tsParticles = eb);
    },
    15675: function (w, S, C) {
      'use strict';
      C.d(S, {
        S: function () {
          return loadSlim;
        }
      });
      var I = C(40617);
      let Particles = class Particles {
        static init(w) {
          let S = new Particles(),
            C = w.selector;
          if (!C) throw Error('No selector provided');
          let $ = document.querySelector(C);
          if (!$) throw Error('No element found for selector');
          return (
            I.S6.set(C.replace('.', '').replace('!', ''), $, {
              fullScreen: { enable: !1 },
              particles: {
                color: { value: w.color ?? '!000000' },
                links: { color: 'random', distance: w.minDistance ?? 120, enable: w.connectParticles ?? !1 },
                move: { enable: !0, speed: w.speed ?? 0.5 },
                number: { value: w.maxParticles ?? 100 },
                size: { value: { min: 1, max: w.sizeVariations ?? 3 } }
              },
              responsive: w.responsive?.map((S) => ({
                maxWidth: S.breakpoint,
                options: {
                  particles: {
                    color: { value: S.options?.color },
                    links: { distance: S.options?.minDistance, enable: S.options?.connectParticles },
                    number: { value: w.maxParticles },
                    move: { enable: !0, speed: S.options?.speed },
                    size: { value: S.options?.sizeVariations }
                  }
                }
              }))
            }).then((w) => {
              S._container = w;
            }),
            S
          );
        }
        destroy() {
          let w = this._container;
          w && w.destroy();
        }
        pauseAnimation() {
          let w = this._container;
          w && w.pause();
        }
        resumeAnimation() {
          let w = this._container;
          w && w.play();
        }
      };
      let initParticlesJS = (w) => {
          let particlesJS = (S, C) => w.load(S, C);
          (particlesJS.load = (S, C, I) => {
            w.loadJSON(S, C)
              .then((w) => {
                w && I(w);
              })
              .catch(() => {
                I(void 0);
              });
          }),
            (particlesJS.setOnClickHandler = (S) => {
              w.setOnClickHandler(S);
            });
          let S = w.dom();
          return { particlesJS, pJSDom: S };
        },
        initPjs = (w) => {
          let { particlesJS: S, pJSDom: C } = initParticlesJS(w);
          return (
            (window.particlesJS = S),
            (window.pJSDom = C),
            (window.Particles = Particles),
            { particlesJS: S, pJSDom: C, Particles: Particles }
          );
        };
      var $ = C(83201);
      function applyDistance(w) {
        let S = w.initialPosition,
          { dx: C, dy: I } = (0, $.oW)(S, w.position),
          er = Math.abs(C),
          en = Math.abs(I),
          { maxDistance: ei } = w.retina,
          eo = ei.horizontal,
          es = ei.vertical;
        if (eo || es) {
          if (((eo && er >= eo) || (es && en >= es)) && !w.misplaced)
            (w.misplaced = (!!eo && er > eo) || (!!es && en > es)),
              eo && (w.velocity.x = w.velocity.y / 2 - w.velocity.x),
              es && (w.velocity.y = w.velocity.x / 2 - w.velocity.y);
          else if ((!eo || er < eo) && (!es || en < es) && w.misplaced) w.misplaced = !1;
          else if (w.misplaced) {
            let C = w.position,
              I = w.velocity;
            eo && ((C.x < S.x && I.x < 0) || (C.x > S.x && I.x > 0)) && (I.x *= -(0, $.sZ)()),
              es && ((C.y < S.y && I.y < 0) || (C.y > S.y && I.y > 0)) && (I.y *= -(0, $.sZ)());
          }
        }
      }
      function move(w, S, C, I, $, er) {
        applyPath(w, er);
        let en = w.gravity,
          ei = en?.enable && en.inverse ? -1 : 1;
        $ && C && (w.velocity.x += ($ * er.factor) / (60 * C)),
          en?.enable && C && (w.velocity.y += (ei * (en.acceleration * er.factor)) / (60 * C));
        let eo = w.moveDecay;
        w.velocity.multTo(eo);
        let es = w.velocity.mult(C);
        en?.enable &&
          I > 0 &&
          ((!en.inverse && es.y >= 0 && es.y >= I) || (en.inverse && es.y <= 0 && es.y <= -I)) &&
          ((es.y = ei * I), C && (w.velocity.y = es.y / C));
        let el = w.options.zIndex,
          ec = (1 - w.zIndexFactor) ** el.velocityRate;
        es.multTo(ec);
        let { position: eu } = w;
        eu.addTo(es),
          S.vibrate && ((eu.x += Math.sin(eu.x * Math.cos(eu.y))), (eu.y += Math.cos(eu.y * Math.sin(eu.x))));
      }
      function spin(w, S) {
        let C = w.container;
        if (!w.spin) return;
        let I = {
          x: 'clockwise' === w.spin.direction ? Math.cos : Math.sin,
          y: 'clockwise' === w.spin.direction ? Math.sin : Math.cos
        };
        (w.position.x = w.spin.center.x + w.spin.radius * I.x(w.spin.angle)),
          (w.position.y = w.spin.center.y + w.spin.radius * I.y(w.spin.angle)),
          (w.spin.radius += w.spin.acceleration);
        let $ = Math.max(C.canvas.size.width, C.canvas.size.height);
        w.spin.radius > $ / 2
          ? ((w.spin.radius = $ / 2), (w.spin.acceleration *= -1))
          : w.spin.radius < 0 && ((w.spin.radius = 0), (w.spin.acceleration *= -1)),
          (w.spin.angle += (S / 100) * (1 - w.spin.radius / $));
      }
      function applyPath(w, S) {
        let C = w.options,
          I = C.move.path,
          er = I.enable;
        if (!er) return;
        if (w.lastPathTime <= w.pathDelay) {
          w.lastPathTime += S.value;
          return;
        }
        let en = w.pathGenerator?.generate(w, S);
        en && w.velocity.addTo(en),
          I.clamp && ((w.velocity.x = (0, $.uZ)(w.velocity.x, -1, 1)), (w.velocity.y = (0, $.uZ)(w.velocity.y, -1, 1))),
          (w.lastPathTime -= w.pathDelay);
      }
      function getProximitySpeedFactor(w) {
        return w.slow.inRange ? w.slow.factor : 1;
      }
      let BaseMover = class BaseMover {
        constructor() {
          this._initSpin = (w) => {
            let S = w.container,
              C = w.options,
              I = C.move.spin;
            if (!I.enable) return;
            let er = I.position ?? { x: 50, y: 50 },
              en = { x: (er.x / 100) * S.canvas.size.width, y: (er.y / 100) * S.canvas.size.height },
              ei = w.getPosition(),
              eo = (0, $.Sp)(ei, en),
              es = (0, $.Gu)(I.acceleration);
            (w.retina.spinAcceleration = es * S.retina.pixelRatio),
              (w.spin = {
                center: en,
                direction: w.velocity.x >= 0 ? 'clockwise' : 'counter-clockwise',
                angle: w.velocity.angle,
                radius: eo,
                acceleration: w.retina.spinAcceleration
              });
          };
        }
        init(w) {
          let S = w.options,
            C = S.move.gravity;
          (w.gravity = { enable: C.enable, acceleration: (0, $.Gu)(C.acceleration), inverse: C.inverse }),
            this._initSpin(w);
        }
        isEnabled(w) {
          return !w.destroyed && w.options.move.enable;
        }
        move(w, S) {
          let C = w.options,
            I = C.move;
          if (!I.enable) return;
          let er = w.container,
            en = er.retina.pixelRatio,
            ei = getProximitySpeedFactor(w),
            eo = (w.retina.moveSpeed ??= (0, $.Gu)(I.speed) * en) * er.retina.reduceFactor,
            es = (w.retina.moveDrift ??= (0, $.Gu)(w.options.move.drift) * en),
            el = (0, $.KI)(C.size.value) * en,
            ec = I.size ? w.getRadius() / el : 1,
            eu = (eo * ec * ei * (S.factor || 1)) / 2,
            ed = w.retina.maxSpeed ?? er.retina.maxSpeed;
          I.spin.enable ? spin(w, eu) : move(w, I, eu, ed, es, S), applyDistance(w);
        }
      };
      async function loadBaseMover(w, S = !0) {
        await w.addMover('base', () => new BaseMover(), S);
      }
      var er = C(3226);
      let CircleDrawer = class CircleDrawer {
        draw(w, S, C) {
          S.circleRange || (S.circleRange = { min: 0, max: 2 * Math.PI });
          let I = S.circleRange;
          w.arc(0, 0, C, I.min, I.max, !1);
        }
        getSidesCount() {
          return 12;
        }
        particleInit(w, S) {
          let C = S.shapeData,
            I = C?.angle ?? { max: 360, min: 0 };
          S.circleRange = (0, er.Kn)(I)
            ? { min: (I.min * Math.PI) / 180, max: (I.max * Math.PI) / 180 }
            : { min: 0, max: (I * Math.PI) / 180 };
        }
      };
      async function loadCircleShape(w, S = !0) {
        await w.addShape('circle', new CircleDrawer(), S);
      }
      var en = C(30481);
      function updateColorValue(w, S, C, I, er) {
        if (
          !S ||
          !C.enable ||
          ((S.maxLoops ?? 0) > 0 && (S.loops ?? 0) > (S.maxLoops ?? 0)) ||
          (S.time || (S.time = 0),
          (S.delayTime ?? 0) > 0 && S.time < (S.delayTime ?? 0) && (S.time += w.value),
          (S.delayTime ?? 0) > 0 && S.time < (S.delayTime ?? 0))
        )
          return;
        let en = (0, $.vd)(C.offset),
          ei = (S.velocity ?? 0) * w.factor + 3.6 * en,
          eo = S.decay ?? 1;
        er && 'increasing' !== S.status
          ? ((S.value -= ei),
            S.value < 0 && (S.loops || (S.loops = 0), S.loops++, (S.status = 'increasing'), (S.value += S.value)))
          : ((S.value += ei),
            S.value > I &&
              (S.loops || (S.loops = 0), S.loops++, er && ((S.status = 'decreasing'), (S.value -= S.value % I)))),
          S.velocity && 1 !== eo && (S.velocity *= eo),
          S.value > I && (S.value %= I);
      }
      function updateColor(w, S) {
        let { h: C, s: I, l: $ } = w.options.color.animation,
          { color: er } = w;
        if (!er) return;
        let { h: en, s: ei, l: eo } = er;
        en && updateColorValue(S, en, C, 360, !1),
          ei && updateColorValue(S, ei, I, 100, !0),
          eo && updateColorValue(S, eo, $, 100, !0);
      }
      let ColorUpdater = class ColorUpdater {
        constructor(w) {
          this.container = w;
        }
        init(w) {
          let S = (0, en.lN)(w.options.color, w.id, w.options.reduceDuplicates);
          S && (w.color = (0, en.bS)(S, w.options.color.animation, this.container.retina.reduceFactor));
        }
        isEnabled(w) {
          let { h: S, s: C, l: I } = w.options.color.animation,
            { color: $ } = w;
          return (
            !w.destroyed &&
            !w.spawning &&
            (($?.h.value !== void 0 && S.enable) ||
              ($?.s.value !== void 0 && C.enable) ||
              ($?.l.value !== void 0 && I.enable))
          );
        }
        update(w, S) {
          updateColor(w, S);
        }
      };
      async function loadColorUpdater(w, S = !0) {
        await w.addParticleUpdater('color', (w) => new ColorUpdater(w), S);
      }
      function checkDestroy(w, S, C, I) {
        switch (w.options.opacity.animation.destroy) {
          case 'max':
            S >= I && w.destroy();
            break;
          case 'min':
            S <= C && w.destroy();
        }
      }
      function updateOpacity(w, S) {
        let C = w.opacity;
        if (w.destroyed || !C?.enable || ((C.maxLoops ?? 0) > 0 && (C.loops ?? 0) > (C.maxLoops ?? 0))) return;
        let I = C.min,
          er = C.max,
          en = C.decay ?? 1;
        if (
          (C.time || (C.time = 0),
          (C.delayTime ?? 0) > 0 && C.time < (C.delayTime ?? 0) && (C.time += S.value),
          !((C.delayTime ?? 0) > 0) || !(C.time < (C.delayTime ?? 0)))
        ) {
          switch (C.status) {
            case 'increasing':
              C.value >= er
                ? ((C.status = 'decreasing'), C.loops || (C.loops = 0), C.loops++)
                : (C.value += (C.velocity ?? 0) * S.factor);
              break;
            case 'decreasing':
              C.value <= I
                ? ((C.status = 'increasing'), C.loops || (C.loops = 0), C.loops++)
                : (C.value -= (C.velocity ?? 0) * S.factor);
          }
          C.velocity && 1 !== C.decay && (C.velocity *= en),
            checkDestroy(w, C.value, I, er),
            w.destroyed || (C.value = (0, $.uZ)(C.value, I, er));
        }
      }
      let OpacityUpdater = class OpacityUpdater {
        constructor(w) {
          this.container = w;
        }
        init(w) {
          let S = w.options.opacity;
          w.opacity = (0, er.V0)(S, 1);
          let C = S.animation;
          C.enable &&
            ((w.opacity.velocity = ((0, $.Gu)(C.speed) / 100) * this.container.retina.reduceFactor),
            C.sync || (w.opacity.velocity *= (0, $.sZ)()));
        }
        isEnabled(w) {
          return (
            !w.destroyed &&
            !w.spawning &&
            !!w.opacity &&
            w.opacity.enable &&
            ((w.opacity.maxLoops ?? 0) <= 0 ||
              ((w.opacity.maxLoops ?? 0) > 0 && (w.opacity.loops ?? 0) < (w.opacity.maxLoops ?? 0)))
          );
        }
        reset(w) {
          w.opacity && ((w.opacity.time = 0), (w.opacity.loops = 0));
        }
        update(w, S) {
          this.isEnabled(w) && updateOpacity(w, S);
        }
      };
      async function loadOpacityUpdater(w, S = !0) {
        await w.addParticleUpdater('opacity', (w) => new OpacityUpdater(w), S);
      }
      function bounceHorizontal(w) {
        if (
          ('bounce' !== w.outMode &&
            'bounce-horizontal' !== w.outMode &&
            'bounceHorizontal' !== w.outMode &&
            'split' !== w.outMode) ||
          ('left' !== w.direction && 'right' !== w.direction)
        )
          return;
        w.bounds.right < 0 && 'left' === w.direction
          ? (w.particle.position.x = w.size + w.offset.x)
          : w.bounds.left > w.canvasSize.width &&
            'right' === w.direction &&
            (w.particle.position.x = w.canvasSize.width - w.size - w.offset.x);
        let S = w.particle.velocity.x,
          C = !1;
        if (
          ('right' === w.direction && w.bounds.right >= w.canvasSize.width && S > 0) ||
          ('left' === w.direction && w.bounds.left <= 0 && S < 0)
        ) {
          let S = (0, $.NA)(w.particle.options.bounce.horizontal);
          (w.particle.velocity.x *= -S), (C = !0);
        }
        if (!C) return;
        let I = w.offset.x + w.size;
        w.bounds.right >= w.canvasSize.width && 'right' === w.direction
          ? (w.particle.position.x = w.canvasSize.width - I)
          : w.bounds.left <= 0 && 'left' === w.direction && (w.particle.position.x = I),
          'split' === w.outMode && w.particle.destroy();
      }
      function bounceVertical(w) {
        if (
          ('bounce' !== w.outMode &&
            'bounce-vertical' !== w.outMode &&
            'bounceVertical' !== w.outMode &&
            'split' !== w.outMode) ||
          ('bottom' !== w.direction && 'top' !== w.direction)
        )
          return;
        w.bounds.bottom < 0 && 'top' === w.direction
          ? (w.particle.position.y = w.size + w.offset.y)
          : w.bounds.top > w.canvasSize.height &&
            'bottom' === w.direction &&
            (w.particle.position.y = w.canvasSize.height - w.size - w.offset.y);
        let S = w.particle.velocity.y,
          C = !1;
        if (
          ('bottom' === w.direction && w.bounds.bottom >= w.canvasSize.height && S > 0) ||
          ('top' === w.direction && w.bounds.top <= 0 && S < 0)
        ) {
          let S = (0, $.NA)(w.particle.options.bounce.vertical);
          (w.particle.velocity.y *= -S), (C = !0);
        }
        if (!C) return;
        let I = w.offset.y + w.size;
        w.bounds.bottom >= w.canvasSize.height && 'bottom' === w.direction
          ? (w.particle.position.y = w.canvasSize.height - I)
          : w.bounds.top <= 0 && 'top' === w.direction && (w.particle.position.y = I),
          'split' === w.outMode && w.particle.destroy();
      }
      let BounceOutMode = class BounceOutMode {
        constructor(w) {
          (this.container = w),
            (this.modes = [
              'bounce',
              'bounce-vertical',
              'bounce-horizontal',
              'bounceVertical',
              'bounceHorizontal',
              'split'
            ]);
        }
        update(w, S, C, I) {
          if (!this.modes.includes(I)) return;
          let $ = this.container,
            en = !1;
          for (let [, I] of $.plugins) if ((void 0 !== I.particleBounce && (en = I.particleBounce(w, C, S)), en)) break;
          if (en) return;
          let ei = w.getPosition(),
            eo = w.offset,
            es = w.getRadius(),
            el = (0, er.M_)(ei, es),
            ec = $.canvas.size;
          bounceHorizontal({ particle: w, outMode: I, direction: S, bounds: el, canvasSize: ec, offset: eo, size: es }),
            bounceVertical({ particle: w, outMode: I, direction: S, bounds: el, canvasSize: ec, offset: eo, size: es });
        }
      };
      var ei = C(66290);
      let DestroyOutMode = class DestroyOutMode {
        constructor(w) {
          (this.container = w), (this.modes = ['destroy']);
        }
        update(w, S, C, I) {
          if (!this.modes.includes(I)) return;
          let en = this.container;
          switch (w.outType) {
            case 'normal':
            case 'outside':
              if ((0, er.Ac)(w.position, en.canvas.size, ei.O.origin, w.getRadius(), S)) return;
              break;
            case 'inside': {
              let { dx: S, dy: C } = (0, $.oW)(w.position, w.moveCenter),
                { x: I, y: er } = w.velocity;
              if (
                (I < 0 && S > w.moveCenter.radius) ||
                (er < 0 && C > w.moveCenter.radius) ||
                (I >= 0 && S < -w.moveCenter.radius) ||
                (er >= 0 && C < -w.moveCenter.radius)
              )
                return;
            }
          }
          en.particles.remove(w, void 0, !0);
        }
      };
      let NoneOutMode = class NoneOutMode {
        constructor(w) {
          (this.container = w), (this.modes = ['none']);
        }
        update(w, S, C, I) {
          if (
            !this.modes.includes(I) ||
            (w.options.move.distance.horizontal && ('left' === S || 'right' === S)) ||
            (w.options.move.distance.vertical && ('top' === S || 'bottom' === S))
          )
            return;
          let $ = w.options.move.gravity,
            en = this.container,
            eo = en.canvas.size,
            es = w.getRadius();
          if ($.enable) {
            let C = w.position;
            ((!$.inverse && C.y > eo.height + es && 'bottom' === S) || ($.inverse && C.y < -es && 'top' === S)) &&
              en.particles.remove(w);
          } else {
            if (
              (w.velocity.y > 0 && w.position.y <= eo.height + es) ||
              (w.velocity.y < 0 && w.position.y >= -es) ||
              (w.velocity.x > 0 && w.position.x <= eo.width + es) ||
              (w.velocity.x < 0 && w.position.x >= -es)
            )
              return;
            (0, er.Ac)(w.position, en.canvas.size, ei.O.origin, es, S) || en.particles.remove(w);
          }
        }
      };
      let OutOutMode = class OutOutMode {
        constructor(w) {
          (this.container = w), (this.modes = ['out']);
        }
        update(w, S, C, I) {
          if (!this.modes.includes(I)) return;
          let en = this.container;
          if ('inside' === w.outType) {
            let { x: S, y: C } = w.velocity,
              I = ei.O.origin;
            (I.length = w.moveCenter.radius),
              (I.angle = w.velocity.angle + Math.PI),
              I.addTo(ei.O.create(w.moveCenter));
            let { dx: er, dy: eo } = (0, $.oW)(w.position, I);
            if ((S <= 0 && er >= 0) || (C <= 0 && eo >= 0) || (S >= 0 && er <= 0) || (C >= 0 && eo <= 0)) return;
            (w.position.x = Math.floor((0, $.vd)({ min: 0, max: en.canvas.size.width }))),
              (w.position.y = Math.floor((0, $.vd)({ min: 0, max: en.canvas.size.height })));
            let { dx: es, dy: el } = (0, $.oW)(w.position, w.moveCenter);
            (w.direction = Math.atan2(-el, -es)), (w.velocity.angle = w.direction);
          } else {
            if ((0, er.Ac)(w.position, en.canvas.size, ei.O.origin, w.getRadius(), S)) return;
            switch (w.outType) {
              case 'outside': {
                (w.position.x =
                  Math.floor((0, $.vd)({ min: -w.moveCenter.radius, max: w.moveCenter.radius })) + w.moveCenter.x),
                  (w.position.y =
                    Math.floor((0, $.vd)({ min: -w.moveCenter.radius, max: w.moveCenter.radius })) + w.moveCenter.y);
                let { dx: S, dy: C } = (0, $.oW)(w.position, w.moveCenter);
                w.moveCenter.radius && ((w.direction = Math.atan2(C, S)), (w.velocity.angle = w.direction));
                break;
              }
              case 'normal': {
                let C = w.options.move.warp,
                  I = en.canvas.size,
                  ei = {
                    bottom: I.height + w.getRadius() + w.offset.y,
                    left: -w.getRadius() - w.offset.x,
                    right: I.width + w.getRadius() + w.offset.x,
                    top: -w.getRadius() - w.offset.y
                  },
                  eo = w.getRadius(),
                  es = (0, er.M_)(w.position, eo);
                'right' === S && es.left > I.width + w.offset.x
                  ? ((w.position.x = ei.left),
                    (w.initialPosition.x = w.position.x),
                    C || ((w.position.y = (0, $.sZ)() * I.height), (w.initialPosition.y = w.position.y)))
                  : 'left' === S &&
                    es.right < -w.offset.x &&
                    ((w.position.x = ei.right),
                    (w.initialPosition.x = w.position.x),
                    C || ((w.position.y = (0, $.sZ)() * I.height), (w.initialPosition.y = w.position.y))),
                  'bottom' === S && es.top > I.height + w.offset.y
                    ? (C || ((w.position.x = (0, $.sZ)() * I.width), (w.initialPosition.x = w.position.x)),
                      (w.position.y = ei.top),
                      (w.initialPosition.y = w.position.y))
                    : 'top' === S &&
                      es.bottom < -w.offset.y &&
                      (C || ((w.position.x = (0, $.sZ)() * I.width), (w.initialPosition.x = w.position.x)),
                      (w.position.y = ei.bottom),
                      (w.initialPosition.y = w.position.y));
              }
            }
          }
        }
      };
      let OutOfCanvasUpdater = class OutOfCanvasUpdater {
        constructor(w) {
          (this.container = w),
            (this._updateOutMode = (w, S, C, I) => {
              for (let $ of this.updaters) $.update(w, I, S, C);
            }),
            (this.updaters = [new BounceOutMode(w), new DestroyOutMode(w), new OutOutMode(w), new NoneOutMode(w)]);
        }
        init() {}
        isEnabled(w) {
          return !w.destroyed && !w.spawning;
        }
        update(w, S) {
          let C = w.options.move.outModes;
          this._updateOutMode(w, S, C.bottom ?? C.default, 'bottom'),
            this._updateOutMode(w, S, C.left ?? C.default, 'left'),
            this._updateOutMode(w, S, C.right ?? C.default, 'right'),
            this._updateOutMode(w, S, C.top ?? C.default, 'top');
        }
      };
      async function loadOutModesUpdater(w, S = !0) {
        await w.addParticleUpdater('outModes', (w) => new OutOfCanvasUpdater(w), S);
      }
      function Utils_checkDestroy(w, S, C, I) {
        switch (w.options.size.animation.destroy) {
          case 'max':
            S >= I && w.destroy();
            break;
          case 'min':
            S <= C && w.destroy();
        }
      }
      function updateSize(w, S) {
        let C = w.size;
        if (w.destroyed || !C || !C.enable || ((C.maxLoops ?? 0) > 0 && (C.loops ?? 0) > (C.maxLoops ?? 0))) return;
        let I = (C.velocity ?? 0) * S.factor,
          er = C.min,
          en = C.max,
          ei = C.decay ?? 1;
        if (
          (C.time || (C.time = 0),
          (C.delayTime ?? 0) > 0 && C.time < (C.delayTime ?? 0) && (C.time += S.value),
          !((C.delayTime ?? 0) > 0) || !(C.time < (C.delayTime ?? 0)))
        ) {
          switch (C.status) {
            case 'increasing':
              C.value >= en ? ((C.status = 'decreasing'), C.loops || (C.loops = 0), C.loops++) : (C.value += I);
              break;
            case 'decreasing':
              C.value <= er ? ((C.status = 'increasing'), C.loops || (C.loops = 0), C.loops++) : (C.value -= I);
          }
          C.velocity && 1 !== ei && (C.velocity *= ei),
            Utils_checkDestroy(w, C.value, er, en),
            w.destroyed || (C.value = (0, $.uZ)(C.value, er, en));
        }
      }
      let SizeUpdater = class SizeUpdater {
        init(w) {
          let S = w.container,
            C = w.options.size,
            I = C.animation;
          I.enable &&
            ((w.size.velocity =
              ((w.retina.sizeAnimationSpeed ?? S.retina.sizeAnimationSpeed) / 100) * S.retina.reduceFactor),
            I.sync || (w.size.velocity *= (0, $.sZ)()));
        }
        isEnabled(w) {
          return (
            !w.destroyed &&
            !w.spawning &&
            w.size.enable &&
            ((w.size.maxLoops ?? 0) <= 0 ||
              ((w.size.maxLoops ?? 0) > 0 && (w.size.loops ?? 0) < (w.size.maxLoops ?? 0)))
          );
        }
        reset(w) {
          w.size.loops = 0;
        }
        update(w, S) {
          this.isEnabled(w) && updateSize(w, S);
        }
      };
      async function loadSizeUpdater(w, S = !0) {
        await w.addParticleUpdater('size', () => new SizeUpdater(), S);
      }
      async function loadBasic(w, S = !0) {
        await loadBaseMover(w, !1),
          await loadCircleShape(w, !1),
          await loadColorUpdater(w, !1),
          await loadOpacityUpdater(w, !1),
          await loadOutModesUpdater(w, !1),
          await loadSizeUpdater(w, !1),
          await w.refresh(S);
      }
      async function loadEasingQuadPlugin() {
        (0, $.bx)('ease-in-quad', (w) => w ** 2),
          (0, $.bx)('ease-out-quad', (w) => 1 - (1 - w) ** 2),
          (0, $.bx)('ease-in-out-quad', (w) => (w < 0.5 ? 2 * w ** 2 : 1 - (-2 * w + 2) ** 2 / 2));
      }
      let ExternalInteractorBase = class ExternalInteractorBase {
        constructor(w) {
          (this.container = w), (this.type = 'external');
        }
      };
      var eo = C(72836),
        es = C(78026);
      let Attract = class Attract {
        constructor() {
          (this.distance = 200),
            (this.duration = 0.4),
            (this.easing = 'ease-out-quad'),
            (this.factor = 1),
            (this.maxSpeed = 50),
            (this.speed = 1);
        }
        load(w) {
          w &&
            (void 0 !== w.distance && (this.distance = w.distance),
            void 0 !== w.duration && (this.duration = w.duration),
            void 0 !== w.easing && (this.easing = w.easing),
            void 0 !== w.factor && (this.factor = w.factor),
            void 0 !== w.maxSpeed && (this.maxSpeed = w.maxSpeed),
            void 0 !== w.speed && (this.speed = w.speed));
        }
      };
      let Attractor = class Attractor extends ExternalInteractorBase {
        constructor(w, S) {
          super(S),
            (this._clickAttract = () => {
              let w = this.container;
              w.attract || (w.attract = { particles: [] });
              let { attract: S } = w;
              if (
                (S.finish || (S.count || (S.count = 0), S.count++, S.count !== w.particles.count || (S.finish = !0)),
                S.clicking)
              ) {
                let S = w.interactivity.mouse.clickPosition,
                  C = w.retina.attractModeDistance;
                if (!C || C < 0 || !S) return;
                this._processAttract(S, C, new eo.C(S.x, S.y, C));
              } else !1 === S.clicking && (S.particles = []);
            }),
            (this._hoverAttract = () => {
              let w = this.container,
                S = w.interactivity.mouse.position,
                C = w.retina.attractModeDistance;
              C && !(C < 0) && S && this._processAttract(S, C, new eo.C(S.x, S.y, C));
            }),
            (this._processAttract = (w, S, C) => {
              let I = this.container,
                er = I.actualOptions.interactivity.modes.attract;
              if (!er) return;
              let en = I.particles.quadTree.query(C, (w) => this.isEnabled(w));
              for (let C of en) {
                let { dx: I, dy: en, distance: eo } = (0, $.oW)(C.position, w),
                  es = er.speed * er.factor,
                  el = (0, $.uZ)((0, $._X)(er.easing)(1 - eo / S) * es, 0, er.maxSpeed),
                  ec = ei.O.create(0 === eo ? es : (I / eo) * el, 0 === eo ? es : (en / eo) * el);
                C.position.subFrom(ec);
              }
            }),
            (this._engine = w),
            S.attract || (S.attract = { particles: [] }),
            (this.handleClickMode = (w) => {
              let C = this.container.actualOptions,
                I = C.interactivity.modes.attract;
              if (I && 'attract' === w) {
                for (let w of (S.attract || (S.attract = { particles: [] }),
                (S.attract.clicking = !0),
                (S.attract.count = 0),
                S.attract.particles))
                  this.isEnabled(w) && w.velocity.setTo(w.initialVelocity);
                (S.attract.particles = []),
                  (S.attract.finish = !1),
                  setTimeout(() => {
                    S.destroyed || (S.attract || (S.attract = { particles: [] }), (S.attract.clicking = !1));
                  }, 1e3 * I.duration);
              }
            });
        }
        clear() {}
        init() {
          let w = this.container,
            S = w.actualOptions.interactivity.modes.attract;
          S && (w.retina.attractModeDistance = S.distance * w.retina.pixelRatio);
        }
        async interact() {
          let w = this.container,
            S = w.actualOptions,
            C = w.interactivity.status === es.Wt,
            I = S.interactivity.events,
            $ = I.onHover.enable,
            en = I.onHover.mode,
            ei = I.onClick.enable,
            eo = I.onClick.mode;
          C && $ && (0, er.dB)('attract', en)
            ? this._hoverAttract()
            : ei && (0, er.dB)('attract', eo) && this._clickAttract();
        }
        isEnabled(w) {
          let S = this.container,
            C = S.actualOptions,
            I = S.interactivity.mouse,
            $ = (w?.interactivity ?? C.interactivity).events;
          if ((!I.position || !$.onHover.enable) && (!I.clickPosition || !$.onClick.enable)) return !1;
          let en = $.onHover.mode,
            ei = $.onClick.mode;
          return (0, er.dB)('attract', en) || (0, er.dB)('attract', ei);
        }
        loadModeOptions(w, ...S) {
          for (let C of (w.attract || (w.attract = new Attract()), S)) w.attract.load(C?.attract);
        }
        reset() {}
      };
      async function loadExternalAttractInteraction(w, S = !0) {
        await w.addInteractor('externalAttract', (S) => new Attractor(w, S), S);
      }
      var el = C(1995);
      let Bounce = class Bounce {
        constructor() {
          this.distance = 200;
        }
        load(w) {
          w && void 0 !== w.distance && (this.distance = w.distance);
        }
      };
      let Bouncer = class Bouncer extends ExternalInteractorBase {
        constructor(w) {
          super(w),
            (this._processBounce = (w, S, C) => {
              let I = this.container.particles.quadTree.query(C, (w) => this.isEnabled(w));
              for (let $ of I)
                C instanceof eo.C
                  ? (0, er.kR)((0, er.gy)($), {
                      position: w,
                      radius: S,
                      mass: (S ** 2 * Math.PI) / 2,
                      velocity: ei.O.origin,
                      factor: ei.O.origin
                    })
                  : C instanceof el.A && (0, er.dp)($, (0, er.M_)(w, S));
            }),
            (this._processMouseBounce = () => {
              let w = this.container,
                S = w.retina.pixelRatio,
                C = w.interactivity.mouse.position,
                I = w.retina.bounceModeDistance;
              I && !(I < 0) && C && this._processBounce(C, I, new eo.C(C.x, C.y, I + 10 * S));
            }),
            (this._singleSelectorBounce = (w, S) => {
              let C = this.container,
                I = document.querySelectorAll(w);
              I.length &&
                I.forEach((w) => {
                  let I = C.retina.pixelRatio,
                    $ = { x: (w.offsetLeft + w.offsetWidth / 2) * I, y: (w.offsetTop + w.offsetHeight / 2) * I },
                    er = (w.offsetWidth / 2) * I,
                    en = 10 * I,
                    ei =
                      'circle' === S.type
                        ? new eo.C($.x, $.y, er + en)
                        : new el.A(
                            w.offsetLeft * I - en,
                            w.offsetTop * I - en,
                            w.offsetWidth * I + 2 * en,
                            w.offsetHeight * I + 2 * en
                          );
                  this._processBounce($, er, ei);
                });
            });
        }
        clear() {}
        init() {
          let w = this.container,
            S = w.actualOptions.interactivity.modes.bounce;
          S && (w.retina.bounceModeDistance = S.distance * w.retina.pixelRatio);
        }
        async interact() {
          let w = this.container,
            S = w.actualOptions,
            C = S.interactivity.events,
            I = w.interactivity.status === es.Wt,
            $ = C.onHover.enable,
            en = C.onHover.mode,
            ei = C.onDiv;
          I && $ && (0, er.dB)('bounce', en)
            ? this._processMouseBounce()
            : (0, er.XD)('bounce', ei, (w, S) => this._singleSelectorBounce(w, S));
        }
        isEnabled(w) {
          let S = this.container,
            C = S.actualOptions,
            I = S.interactivity.mouse,
            $ = (w?.interactivity ?? C.interactivity).events,
            en = $.onDiv;
          return (I.position && $.onHover.enable && (0, er.dB)('bounce', $.onHover.mode)) || (0, er.wm)('bounce', en);
        }
        loadModeOptions(w, ...S) {
          for (let C of (w.bounce || (w.bounce = new Bounce()), S)) w.bounce.load(C?.bounce);
        }
        reset() {}
      };
      async function loadExternalBounceInteraction(w, S = !0) {
        await w.addInteractor('externalBounce', (w) => new Bouncer(w), S);
      }
      var ec = C(42665);
      let BubbleBase = class BubbleBase {
        constructor() {
          (this.distance = 200), (this.duration = 0.4), (this.mix = !1);
        }
        load(w) {
          if (w) {
            if (
              (void 0 !== w.distance && (this.distance = w.distance),
              void 0 !== w.duration && (this.duration = w.duration),
              void 0 !== w.mix && (this.mix = w.mix),
              void 0 !== w.opacity && (this.opacity = w.opacity),
              void 0 !== w.color)
            ) {
              let S = (0, er.kJ)(this.color) ? void 0 : this.color;
              this.color = (0, er.KH)(w.color, (w) => ec.O.create(S, w));
            }
            void 0 !== w.size && (this.size = w.size);
          }
        }
      };
      let BubbleDiv = class BubbleDiv extends BubbleBase {
        constructor() {
          super(), (this.selectors = []);
        }
        get ids() {
          return (0, er.KH)(this.selectors, (w) => w.replace('#', ''));
        }
        set ids(w) {
          this.selectors = (0, er.KH)(w, (w) => `#${w}`);
        }
        load(w) {
          super.load(w),
            w && (void 0 !== w.ids && (this.ids = w.ids), void 0 !== w.selectors && (this.selectors = w.selectors));
        }
      };
      let Bubble = class Bubble extends BubbleBase {
        load(w) {
          super.load(w),
            w &&
              (this.divs = (0, er.KH)(w.divs, (w) => {
                let S = new BubbleDiv();
                return S.load(w), S;
              }));
        }
      };
      function calculateBubbleValue(w, S, C, I) {
        if (S >= C) {
          let er = w + (S - C) * I;
          return (0, $.uZ)(er, w, S);
        }
        if (S < C) {
          let er = w - (C - S) * I;
          return (0, $.uZ)(er, S, w);
        }
      }
      let Bubbler = class Bubbler extends ExternalInteractorBase {
        constructor(w) {
          super(w),
            (this._clickBubble = () => {
              let w = this.container,
                S = w.actualOptions,
                C = w.interactivity.mouse.clickPosition,
                I = S.interactivity.modes.bubble;
              if (!I || !C) return;
              w.bubble || (w.bubble = {});
              let er = w.retina.bubbleModeDistance;
              if (!er || er < 0) return;
              let en = w.particles.quadTree.queryCircle(C, er, (w) => this.isEnabled(w)),
                { bubble: ei } = w;
              for (let S of en) {
                if (!ei.clicking) continue;
                S.bubble.inRange = !ei.durationEnd;
                let en = S.getPosition(),
                  eo = (0, $.Sp)(en, C),
                  es = (new Date().getTime() - (w.interactivity.mouse.clickTime || 0)) / 1e3;
                es > I.duration && (ei.durationEnd = !0),
                  es > 2 * I.duration && ((ei.clicking = !1), (ei.durationEnd = !1));
                let el = {
                  bubbleObj: { optValue: w.retina.bubbleModeSize, value: S.bubble.radius },
                  particlesObj: {
                    optValue: (0, $.KI)(S.options.size.value) * w.retina.pixelRatio,
                    value: S.size.value
                  },
                  type: 'size'
                };
                this._process(S, eo, es, el);
                let ec = {
                  bubbleObj: { optValue: I.opacity, value: S.bubble.opacity },
                  particlesObj: { optValue: (0, $.KI)(S.options.opacity.value), value: S.opacity?.value ?? 1 },
                  type: 'opacity'
                };
                this._process(S, eo, es, ec),
                  !ei.durationEnd && eo <= er ? this._hoverBubbleColor(S, eo) : delete S.bubble.color;
              }
            }),
            (this._hoverBubble = () => {
              let w = this.container,
                S = w.interactivity.mouse.position,
                C = w.retina.bubbleModeDistance;
              if (!C || C < 0 || void 0 === S) return;
              let I = w.particles.quadTree.queryCircle(S, C, (w) => this.isEnabled(w));
              for (let er of I) {
                er.bubble.inRange = !0;
                let I = er.getPosition(),
                  en = (0, $.Sp)(I, S),
                  ei = 1 - en / C;
                en <= C
                  ? ei >= 0 &&
                    w.interactivity.status === es.Wt &&
                    (this._hoverBubbleSize(er, ei), this._hoverBubbleOpacity(er, ei), this._hoverBubbleColor(er, ei))
                  : this.reset(er),
                  w.interactivity.status === es.aM && this.reset(er);
              }
            }),
            (this._hoverBubbleColor = (w, S, C) => {
              let I = this.container.actualOptions,
                $ = C ?? I.interactivity.modes.bubble;
              if ($) {
                if (!w.bubble.finalColor) {
                  let S = $.color;
                  if (!S) return;
                  let C = (0, er.wA)(S);
                  w.bubble.finalColor = (0, en.lN)(C);
                }
                if (w.bubble.finalColor) {
                  if ($.mix) {
                    w.bubble.color = void 0;
                    let C = w.getFillColor();
                    w.bubble.color = C ? (0, en.lC)((0, en.oc)(C, w.bubble.finalColor, 1 - S, S)) : w.bubble.finalColor;
                  } else w.bubble.color = w.bubble.finalColor;
                }
              }
            }),
            (this._hoverBubbleOpacity = (w, S, C) => {
              let I = this.container,
                er = I.actualOptions,
                en = C?.opacity ?? er.interactivity.modes.bubble?.opacity;
              if (!en) return;
              let ei = w.options.opacity.value,
                eo = w.opacity?.value ?? 1,
                es = calculateBubbleValue(eo, en, (0, $.KI)(ei), S);
              void 0 !== es && (w.bubble.opacity = es);
            }),
            (this._hoverBubbleSize = (w, S, C) => {
              let I = this.container,
                er = C?.size ? C.size * I.retina.pixelRatio : I.retina.bubbleModeSize;
              if (void 0 === er) return;
              let en = (0, $.KI)(w.options.size.value) * I.retina.pixelRatio,
                ei = w.size.value,
                eo = calculateBubbleValue(ei, er, en, S);
              void 0 !== eo && (w.bubble.radius = eo);
            }),
            (this._process = (w, S, C, I) => {
              let $ = this.container,
                er = I.bubbleObj.optValue,
                en = $.actualOptions,
                ei = en.interactivity.modes.bubble;
              if (!ei || void 0 === er) return;
              let eo = ei.duration,
                es = $.retina.bubbleModeDistance,
                el = I.particlesObj.optValue,
                ec = I.bubbleObj.value,
                eu = I.particlesObj.value || 0,
                ed = I.type;
              if (es && !(es < 0) && er !== el) {
                if (($.bubble || ($.bubble = {}), $.bubble.durationEnd))
                  ec && ('size' === ed && delete w.bubble.radius, 'opacity' === ed && delete w.bubble.opacity);
                else if (S <= es) {
                  if ((ec ?? eu) !== er) {
                    let S = eu - (C * (eu - er)) / eo;
                    'size' === ed && (w.bubble.radius = S), 'opacity' === ed && (w.bubble.opacity = S);
                  }
                } else 'size' === ed && delete w.bubble.radius, 'opacity' === ed && delete w.bubble.opacity;
              }
            }),
            (this._singleSelectorHover = (w, S, C) => {
              let I = this.container,
                $ = document.querySelectorAll(S),
                en = I.actualOptions.interactivity.modes.bubble;
              en &&
                $.length &&
                $.forEach((S) => {
                  let $ = I.retina.pixelRatio,
                    ei = { x: (S.offsetLeft + S.offsetWidth / 2) * $, y: (S.offsetTop + S.offsetHeight / 2) * $ },
                    es = (S.offsetWidth / 2) * $,
                    ec =
                      'circle' === C.type
                        ? new eo.C(ei.x, ei.y, es)
                        : new el.A(S.offsetLeft * $, S.offsetTop * $, S.offsetWidth * $, S.offsetHeight * $),
                    eu = I.particles.quadTree.query(ec, (w) => this.isEnabled(w));
                  for (let C of eu) {
                    if (!ec.contains(C.getPosition())) continue;
                    C.bubble.inRange = !0;
                    let I = en.divs,
                      $ = (0, er.iC)(I, S);
                    (C.bubble.div && C.bubble.div === S) || (this.clear(C, w, !0), (C.bubble.div = S)),
                      this._hoverBubbleSize(C, 1, $),
                      this._hoverBubbleOpacity(C, 1, $),
                      this._hoverBubbleColor(C, 1, $);
                  }
                });
            }),
            w.bubble || (w.bubble = {}),
            (this.handleClickMode = (S) => {
              'bubble' === S && (w.bubble || (w.bubble = {}), (w.bubble.clicking = !0));
            });
        }
        clear(w, S, C) {
          (!w.bubble.inRange || C) &&
            (delete w.bubble.div, delete w.bubble.opacity, delete w.bubble.radius, delete w.bubble.color);
        }
        init() {
          let w = this.container,
            S = w.actualOptions.interactivity.modes.bubble;
          S &&
            ((w.retina.bubbleModeDistance = S.distance * w.retina.pixelRatio),
            void 0 !== S.size && (w.retina.bubbleModeSize = S.size * w.retina.pixelRatio));
        }
        async interact(w) {
          let S = this.container.actualOptions,
            C = S.interactivity.events,
            I = C.onHover,
            $ = C.onClick,
            en = I.enable,
            ei = I.mode,
            eo = $.enable,
            es = $.mode,
            el = C.onDiv;
          en && (0, er.dB)('bubble', ei)
            ? this._hoverBubble()
            : eo && (0, er.dB)('bubble', es)
            ? this._clickBubble()
            : (0, er.XD)('bubble', el, (S, C) => this._singleSelectorHover(w, S, C));
        }
        isEnabled(w) {
          let S = this.container,
            C = S.actualOptions,
            I = S.interactivity.mouse,
            $ = (w?.interactivity ?? C.interactivity).events,
            { onClick: en, onDiv: ei, onHover: eo } = $,
            es = (0, er.wm)('bubble', ei);
          return (
            (!!es || (!!eo.enable && !!I.position) || (!!en.enable && !!I.clickPosition)) &&
            ((0, er.dB)('bubble', eo.mode) || (0, er.dB)('bubble', en.mode) || es)
          );
        }
        loadModeOptions(w, ...S) {
          for (let C of (w.bubble || (w.bubble = new Bubble()), S)) w.bubble.load(C?.bubble);
        }
        reset(w) {
          w.bubble.inRange = !1;
        }
      };
      async function loadExternalBubbleInteraction(w, S = !0) {
        await w.addInteractor('externalBubble', (w) => new Bubbler(w), S);
      }
      let ConnectLinks = class ConnectLinks {
        constructor() {
          this.opacity = 0.5;
        }
        load(w) {
          w && void 0 !== w.opacity && (this.opacity = w.opacity);
        }
      };
      let Connect = class Connect {
        constructor() {
          (this.distance = 80), (this.links = new ConnectLinks()), (this.radius = 60);
        }
        get lineLinked() {
          return this.links;
        }
        set lineLinked(w) {
          this.links = w;
        }
        get line_linked() {
          return this.links;
        }
        set line_linked(w) {
          this.links = w;
        }
        load(w) {
          w &&
            (void 0 !== w.distance && (this.distance = w.distance),
            this.links.load(w.links ?? w.lineLinked ?? w.line_linked),
            void 0 !== w.radius && (this.radius = w.radius));
        }
      };
      var eu = C(91425);
      function gradient(w, S, C, I) {
        let $ = Math.floor(C.getRadius() / S.getRadius()),
          er = S.getFillColor(),
          ei = C.getFillColor();
        if (!er || !ei) return;
        let eo = S.getPosition(),
          es = C.getPosition(),
          el = (0, en.oc)(er, ei, S.getRadius(), C.getRadius()),
          ec = w.createLinearGradient(eo.x, eo.y, es.x, es.y);
        return (
          ec.addColorStop(0, (0, en.vz)(er, I)),
          ec.addColorStop($ > 1 ? 1 : $, (0, en.iz)(el, I)),
          ec.addColorStop(1, (0, en.vz)(ei, I)),
          ec
        );
      }
      function drawConnectLine(w, S, C, I, $) {
        (0, eu.pS)(w, I, $), (w.lineWidth = S), (w.strokeStyle = C), w.stroke();
      }
      function lineStyle(w, S, C, I) {
        let $ = w.actualOptions,
          er = $.interactivity.modes.connect;
        if (er) return gradient(S, C, I, er.links.opacity);
      }
      function drawConnection(w, S, C) {
        w.canvas.draw((I) => {
          let $ = lineStyle(w, I, S, C);
          if (!$) return;
          let er = S.getPosition(),
            en = C.getPosition();
          drawConnectLine(I, S.retina.linksWidth ?? 0, $, er, en);
        });
      }
      let Connector = class Connector extends ExternalInteractorBase {
        constructor(w) {
          super(w);
        }
        clear() {}
        init() {
          let w = this.container,
            S = w.actualOptions.interactivity.modes.connect;
          S &&
            ((w.retina.connectModeDistance = S.distance * w.retina.pixelRatio),
            (w.retina.connectModeRadius = S.radius * w.retina.pixelRatio));
        }
        async interact() {
          let w = this.container,
            S = w.actualOptions;
          if (S.interactivity.events.onHover.enable && 'pointermove' === w.interactivity.status) {
            let S = w.interactivity.mouse.position;
            if (
              !w.retina.connectModeDistance ||
              w.retina.connectModeDistance < 0 ||
              !w.retina.connectModeRadius ||
              w.retina.connectModeRadius < 0 ||
              !S
            )
              return;
            let C = Math.abs(w.retina.connectModeRadius),
              I = w.particles.quadTree.queryCircle(S, C, (w) => this.isEnabled(w)),
              $ = 0;
            for (let S of I) {
              let C = S.getPosition();
              for (let er of I.slice($ + 1)) {
                let I = er.getPosition(),
                  $ = Math.abs(w.retina.connectModeDistance),
                  en = Math.abs(C.x - I.x),
                  ei = Math.abs(C.y - I.y);
                en < $ && ei < $ && drawConnection(w, S, er);
              }
              ++$;
            }
          }
        }
        isEnabled(w) {
          let S = this.container,
            C = S.interactivity.mouse,
            I = (w?.interactivity ?? S.actualOptions.interactivity).events;
          return !!I.onHover.enable && !!C.position && (0, er.dB)('connect', I.onHover.mode);
        }
        loadModeOptions(w, ...S) {
          for (let C of (w.connect || (w.connect = new Connect()), S)) w.connect.load(C?.connect);
        }
        reset() {}
      };
      async function loadExternalConnectInteraction(w, S = !0) {
        await w.addInteractor('externalConnect', (w) => new Connector(w), S);
      }
      let GrabLinks = class GrabLinks {
        constructor() {
          (this.blink = !1), (this.consent = !1), (this.opacity = 1);
        }
        load(w) {
          w &&
            (void 0 !== w.blink && (this.blink = w.blink),
            void 0 !== w.color && (this.color = ec.O.create(this.color, w.color)),
            void 0 !== w.consent && (this.consent = w.consent),
            void 0 !== w.opacity && (this.opacity = w.opacity));
        }
      };
      let Grab = class Grab {
        constructor() {
          (this.distance = 100), (this.links = new GrabLinks());
        }
        get lineLinked() {
          return this.links;
        }
        set lineLinked(w) {
          this.links = w;
        }
        get line_linked() {
          return this.links;
        }
        set line_linked(w) {
          this.links = w;
        }
        load(w) {
          w &&
            (void 0 !== w.distance && (this.distance = w.distance),
            this.links.load(w.links ?? w.lineLinked ?? w.line_linked));
        }
      };
      function drawGrabLine(w, S, C, I, $, er) {
        (0, eu.pS)(w, C, I), (w.strokeStyle = (0, en.iz)($, er)), (w.lineWidth = S), w.stroke();
      }
      function drawGrab(w, S, C, I, $) {
        w.canvas.draw((w) => {
          let er = S.getPosition();
          drawGrabLine(w, S.retina.linksWidth ?? 0, er, $, C, I);
        });
      }
      let Grabber = class Grabber extends ExternalInteractorBase {
        constructor(w) {
          super(w);
        }
        clear() {}
        init() {
          let w = this.container,
            S = w.actualOptions.interactivity.modes.grab;
          S && (w.retina.grabModeDistance = S.distance * w.retina.pixelRatio);
        }
        async interact() {
          let w = this.container,
            S = w.actualOptions,
            C = S.interactivity;
          if (!C.modes.grab || !C.events.onHover.enable || w.interactivity.status !== es.Wt) return;
          let I = w.interactivity.mouse.position;
          if (!I) return;
          let er = w.retina.grabModeDistance;
          if (!er || er < 0) return;
          let ei = w.particles.quadTree.queryCircle(I, er, (w) => this.isEnabled(w));
          for (let S of ei) {
            let ei = S.getPosition(),
              eo = (0, $.Sp)(ei, I);
            if (eo > er) continue;
            let es = C.modes.grab.links,
              el = es.opacity,
              ec = el - (eo * el) / er;
            if (ec <= 0) continue;
            let eu = es.color ?? S.options.links?.color;
            if (!w.particles.grabLineColor && eu) {
              let S = C.modes.grab.links;
              w.particles.grabLineColor = (0, en.Dt)(eu, S.blink, S.consent);
            }
            let ed = (0, en.BE)(S, void 0, w.particles.grabLineColor);
            ed && drawGrab(w, S, ed, ec, I);
          }
        }
        isEnabled(w) {
          let S = this.container,
            C = S.interactivity.mouse,
            I = (w?.interactivity ?? S.actualOptions.interactivity).events;
          return I.onHover.enable && !!C.position && (0, er.dB)('grab', I.onHover.mode);
        }
        loadModeOptions(w, ...S) {
          for (let C of (w.grab || (w.grab = new Grab()), S)) w.grab.load(C?.grab);
        }
        reset() {}
      };
      async function loadExternalGrabInteraction(w, S = !0) {
        await w.addInteractor('externalGrab', (w) => new Grabber(w), S);
      }
      let Pauser = class Pauser extends ExternalInteractorBase {
        constructor(w) {
          super(w),
            (this.handleClickMode = (w) => {
              if ('pause' !== w) return;
              let S = this.container;
              S.getAnimationStatus() ? S.pause() : S.play();
            });
        }
        clear() {}
        init() {}
        async interact() {}
        isEnabled() {
          return !0;
        }
        reset() {}
      };
      async function loadExternalPauseInteraction(w, S = !0) {
        await w.addInteractor('externalPause', (w) => new Pauser(w), S);
      }
      let Push = class Push {
        constructor() {
          (this.default = !0), (this.groups = []), (this.quantity = 4);
        }
        get particles_nb() {
          return this.quantity;
        }
        set particles_nb(w) {
          this.quantity = (0, $.Cs)(w);
        }
        load(w) {
          if (!w) return;
          void 0 !== w.default && (this.default = w.default),
            void 0 !== w.groups && (this.groups = w.groups.map((w) => w)),
            this.groups.length || (this.default = !0);
          let S = w.quantity ?? w.particles_nb;
          void 0 !== S && (this.quantity = (0, $.Cs)(S));
        }
      };
      let Pusher = class Pusher extends ExternalInteractorBase {
        constructor(w) {
          super(w),
            (this.handleClickMode = (w) => {
              if ('push' !== w) return;
              let S = this.container,
                C = S.actualOptions,
                I = C.interactivity.modes.push;
              if (!I) return;
              let en = (0, $.Gu)(I.quantity);
              if (en <= 0) return;
              let ei = (0, er.c8)([void 0, ...I.groups]),
                eo = void 0 !== ei ? S.actualOptions.particles.groups[ei] : void 0;
              S.particles.push(en, S.interactivity.mouse, eo, ei);
            });
        }
        clear() {}
        init() {}
        async interact() {}
        isEnabled() {
          return !0;
        }
        loadModeOptions(w, ...S) {
          for (let C of (w.push || (w.push = new Push()), S)) w.push.load(C?.push);
        }
        reset() {}
      };
      async function loadExternalPushInteraction(w, S = !0) {
        await w.addInteractor('externalPush', (w) => new Pusher(w), S);
      }
      let Remove = class Remove {
        constructor() {
          this.quantity = 2;
        }
        get particles_nb() {
          return this.quantity;
        }
        set particles_nb(w) {
          this.quantity = (0, $.Cs)(w);
        }
        load(w) {
          if (!w) return;
          let S = w.quantity ?? w.particles_nb;
          void 0 !== S && (this.quantity = (0, $.Cs)(S));
        }
      };
      let Remover = class Remover extends ExternalInteractorBase {
        constructor(w) {
          super(w),
            (this.handleClickMode = (w) => {
              let S = this.container,
                C = S.actualOptions;
              if (!C.interactivity.modes.remove || 'remove' !== w) return;
              let I = (0, $.Gu)(C.interactivity.modes.remove.quantity);
              S.particles.removeQuantity(I);
            });
        }
        clear() {}
        init() {}
        async interact() {}
        isEnabled() {
          return !0;
        }
        loadModeOptions(w, ...S) {
          for (let C of (w.remove || (w.remove = new Remove()), S)) w.remove.load(C?.remove);
        }
        reset() {}
      };
      async function loadExternalRemoveInteraction(w, S = !0) {
        await w.addInteractor('externalRemove', (w) => new Remover(w), S);
      }
      let RepulseBase = class RepulseBase {
        constructor() {
          (this.distance = 200),
            (this.duration = 0.4),
            (this.factor = 100),
            (this.speed = 1),
            (this.maxSpeed = 50),
            (this.easing = 'ease-out-quad');
        }
        load(w) {
          w &&
            (void 0 !== w.distance && (this.distance = w.distance),
            void 0 !== w.duration && (this.duration = w.duration),
            void 0 !== w.easing && (this.easing = w.easing),
            void 0 !== w.factor && (this.factor = w.factor),
            void 0 !== w.speed && (this.speed = w.speed),
            void 0 !== w.maxSpeed && (this.maxSpeed = w.maxSpeed));
        }
      };
      let RepulseDiv = class RepulseDiv extends RepulseBase {
        constructor() {
          super(), (this.selectors = []);
        }
        get ids() {
          return (0, er.KH)(this.selectors, (w) => w.replace('#', ''));
        }
        set ids(w) {
          this.selectors = (0, er.KH)(w, (w) => `#${w}`);
        }
        load(w) {
          super.load(w),
            w && (void 0 !== w.ids && (this.ids = w.ids), void 0 !== w.selectors && (this.selectors = w.selectors));
        }
      };
      let Repulse = class Repulse extends RepulseBase {
        load(w) {
          super.load(w),
            w &&
              (this.divs = (0, er.KH)(w.divs, (w) => {
                let S = new RepulseDiv();
                return S.load(w), S;
              }));
        }
      };
      let Repulser = class Repulser extends ExternalInteractorBase {
        constructor(w, S) {
          super(S),
            (this._clickRepulse = () => {
              let w = this.container,
                S = w.actualOptions.interactivity.modes.repulse;
              if (!S) return;
              let C = w.repulse || { particles: [] };
              if (
                (C.finish || (C.count || (C.count = 0), C.count++, C.count !== w.particles.count || (C.finish = !0)),
                C.clicking)
              ) {
                let I = w.retina.repulseModeDistance;
                if (!I || I < 0) return;
                let er = Math.pow(I / 6, 3),
                  en = w.interactivity.mouse.clickPosition;
                if (void 0 === en) return;
                let es = new eo.C(en.x, en.y, er),
                  el = w.particles.quadTree.query(es, (w) => this.isEnabled(w));
                for (let w of el) {
                  let { dx: I, dy: eo, distance: es } = (0, $.oW)(en, w.position),
                    el = es ** 2,
                    ec = S.speed,
                    eu = (-er * ec) / el;
                  if (el <= er) {
                    C.particles.push(w);
                    let S = ei.O.create(I, eo);
                    (S.length = eu), w.velocity.setTo(S);
                  }
                }
              } else if (!1 === C.clicking) {
                for (let w of C.particles) w.velocity.setTo(w.initialVelocity);
                C.particles = [];
              }
            }),
            (this._hoverRepulse = () => {
              let w = this.container,
                S = w.interactivity.mouse.position,
                C = w.retina.repulseModeDistance;
              C && !(C < 0) && S && this._processRepulse(S, C, new eo.C(S.x, S.y, C));
            }),
            (this._processRepulse = (w, S, C, I) => {
              let er = this.container,
                en = er.particles.quadTree.query(C, (w) => this.isEnabled(w)),
                eo = er.actualOptions.interactivity.modes.repulse;
              if (eo)
                for (let C of en) {
                  let { dx: er, dy: en, distance: es } = (0, $.oW)(C.position, w),
                    el = (I?.speed ?? eo.speed) * eo.factor,
                    ec = (0, $.uZ)((0, $._X)(eo.easing)(1 - es / S) * el, 0, eo.maxSpeed),
                    eu = ei.O.create(0 === es ? el : (er / es) * ec, 0 === es ? el : (en / es) * ec);
                  C.position.addTo(eu);
                }
            }),
            (this._singleSelectorRepulse = (w, S) => {
              let C = this.container,
                I = C.actualOptions.interactivity.modes.repulse;
              if (!I) return;
              let $ = document.querySelectorAll(w);
              $.length &&
                $.forEach((w) => {
                  let $ = C.retina.pixelRatio,
                    en = { x: (w.offsetLeft + w.offsetWidth / 2) * $, y: (w.offsetTop + w.offsetHeight / 2) * $ },
                    ei = (w.offsetWidth / 2) * $,
                    es =
                      'circle' === S.type
                        ? new eo.C(en.x, en.y, ei)
                        : new el.A(w.offsetLeft * $, w.offsetTop * $, w.offsetWidth * $, w.offsetHeight * $),
                    ec = I.divs,
                    eu = (0, er.iC)(ec, w);
                  this._processRepulse(en, ei, es, eu);
                });
            }),
            (this._engine = w),
            S.repulse || (S.repulse = { particles: [] }),
            (this.handleClickMode = (w) => {
              let C = this.container.actualOptions,
                I = C.interactivity.modes.repulse;
              if (!I || 'repulse' !== w) return;
              S.repulse || (S.repulse = { particles: [] });
              let $ = S.repulse;
              for (let w of (($.clicking = !0), ($.count = 0), S.repulse.particles))
                this.isEnabled(w) && w.velocity.setTo(w.initialVelocity);
              ($.particles = []),
                ($.finish = !1),
                setTimeout(() => {
                  S.destroyed || ($.clicking = !1);
                }, 1e3 * I.duration);
            });
        }
        clear() {}
        init() {
          let w = this.container,
            S = w.actualOptions.interactivity.modes.repulse;
          S && (w.retina.repulseModeDistance = S.distance * w.retina.pixelRatio);
        }
        async interact() {
          let w = this.container,
            S = w.actualOptions,
            C = w.interactivity.status === es.Wt,
            I = S.interactivity.events,
            $ = I.onHover,
            en = $.enable,
            ei = $.mode,
            eo = I.onClick,
            el = eo.enable,
            ec = eo.mode,
            eu = I.onDiv;
          C && en && (0, er.dB)('repulse', ei)
            ? this._hoverRepulse()
            : el && (0, er.dB)('repulse', ec)
            ? this._clickRepulse()
            : (0, er.XD)('repulse', eu, (w, S) => this._singleSelectorRepulse(w, S));
        }
        isEnabled(w) {
          let S = this.container,
            C = S.actualOptions,
            I = S.interactivity.mouse,
            $ = (w?.interactivity ?? C.interactivity).events,
            en = $.onDiv,
            ei = $.onHover,
            eo = $.onClick,
            es = (0, er.wm)('repulse', en);
          if (!(es || (ei.enable && I.position) || (eo.enable && I.clickPosition))) return !1;
          let el = ei.mode,
            ec = eo.mode;
          return (0, er.dB)('repulse', el) || (0, er.dB)('repulse', ec) || es;
        }
        loadModeOptions(w, ...S) {
          for (let C of (w.repulse || (w.repulse = new Repulse()), S)) w.repulse.load(C?.repulse);
        }
        reset() {}
      };
      async function loadExternalRepulseInteraction(w, S = !0) {
        await w.addInteractor('externalRepulse', (S) => new Repulser(w, S), S);
      }
      let Slow = class Slow {
        constructor() {
          (this.factor = 3), (this.radius = 200);
        }
        load(w) {
          w && (void 0 !== w.factor && (this.factor = w.factor), void 0 !== w.radius && (this.radius = w.radius));
        }
      };
      let Slower = class Slower extends ExternalInteractorBase {
        constructor(w) {
          super(w);
        }
        clear(w, S, C) {
          (!w.slow.inRange || C) && (w.slow.factor = 1);
        }
        init() {
          let w = this.container,
            S = w.actualOptions.interactivity.modes.slow;
          S && (w.retina.slowModeRadius = S.radius * w.retina.pixelRatio);
        }
        async interact() {}
        isEnabled(w) {
          let S = this.container,
            C = S.interactivity.mouse,
            I = (w?.interactivity ?? S.actualOptions.interactivity).events;
          return I.onHover.enable && !!C.position && (0, er.dB)('slow', I.onHover.mode);
        }
        loadModeOptions(w, ...S) {
          for (let C of (w.slow || (w.slow = new Slow()), S)) w.slow.load(C?.slow);
        }
        reset(w) {
          w.slow.inRange = !1;
          let S = this.container,
            C = S.actualOptions,
            I = S.interactivity.mouse.position,
            er = S.retina.slowModeRadius,
            en = C.interactivity.modes.slow;
          if (!en || !er || er < 0 || !I) return;
          let ei = w.getPosition(),
            eo = (0, $.Sp)(I, ei),
            es = en.factor,
            { slow: el } = w;
          eo > er || ((el.inRange = !0), (el.factor = eo / er / es));
        }
      };
      async function loadExternalSlowInteraction(w, S = !0) {
        await w.addInteractor('externalSlow', (w) => new Slower(w), S);
      }
      let ed = [0, 4, 2, 1],
        eh = [8, 8, 4, 2];
      let ByteStream = class ByteStream {
        constructor(w) {
          (this.pos = 0), (this.data = new Uint8ClampedArray(w));
        }
        getString(w) {
          let S = this.data.slice(this.pos, this.pos + w);
          return (this.pos += S.length), S.reduce((w, S) => w + String.fromCharCode(S), '');
        }
        nextByte() {
          return this.data[this.pos++];
        }
        nextTwoBytes() {
          return (this.pos += 2), this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);
        }
        readSubBlocks() {
          let w = '',
            S = 0;
          do {
            S = this.data[this.pos++];
            for (let C = S; --C >= 0; w += String.fromCharCode(this.data[this.pos++]));
          } while (0 !== S);
          return w;
        }
        readSubBlocksBin() {
          let w = 0,
            S = 0;
          for (let C = 0; 0 !== (w = this.data[this.pos + C]); C += w + 1) S += w;
          let C = new Uint8Array(S);
          for (let S = 0; 0 !== (w = this.data[this.pos++]); )
            for (let I = w; --I >= 0; C[S++] = this.data[this.pos++]);
          return C;
        }
        skipSubBlocks() {
          for (; 0 !== this.data[this.pos]; this.pos += this.data[this.pos] + 1);
          this.pos++;
        }
      };
      function parseColorTable(w, S) {
        let C = [];
        for (let I = 0; I < S; I++)
          C.push({ r: w.data[w.pos], g: w.data[w.pos + 1], b: w.data[w.pos + 2] }), (w.pos += 3);
        return C;
      }
      async function parseExtensionBlock(w, S, C, I) {
        switch (w.nextByte()) {
          case 249: {
            let $ = S.frames[C(!1)];
            w.pos++;
            let er = w.nextByte();
            ($.GCreserved = (224 & er) >>> 5),
              ($.disposalMethod = (28 & er) >>> 2),
              ($.userInputDelayFlag = (2 & er) == 2),
              ($.delayTime = 10 * w.nextTwoBytes());
            let en = w.nextByte();
            (1 & er) == 1 && I(en), w.pos++;
            break;
          }
          case 255: {
            w.pos++;
            let C = { identifier: w.getString(8), authenticationCode: w.getString(3), data: w.readSubBlocksBin() };
            S.applicationExtensions.push(C);
            break;
          }
          case 254:
            S.comments.push([C(!1), w.readSubBlocks()]);
            break;
          case 1:
            if (0 === S.globalColorTable.length) throw EvalError('plain text extension without global color table');
            w.pos++,
              (S.frames[C(!1)].plainTextData = {
                left: w.nextTwoBytes(),
                top: w.nextTwoBytes(),
                width: w.nextTwoBytes(),
                height: w.nextTwoBytes(),
                charSize: { width: w.nextTwoBytes(), height: w.nextTwoBytes() },
                foregroundColor: w.nextByte(),
                backgroundColor: w.nextByte(),
                text: w.readSubBlocks()
              });
            break;
          default:
            w.skipSubBlocks();
        }
      }
      async function parseImageBlock(w, S, C, I, $, er) {
        let en = S.frames[I(!0)];
        (en.left = w.nextTwoBytes()),
          (en.top = w.nextTwoBytes()),
          (en.width = w.nextTwoBytes()),
          (en.height = w.nextTwoBytes());
        let ei = w.nextByte(),
          eo = (128 & ei) == 128;
        (en.sortFlag = (32 & ei) == 32),
          (en.reserved = (24 & ei) >>> 3),
          eo && (en.localColorTable = parseColorTable(w, 1 << ((7 & ei) + 1)));
        let getColor = (w) => {
            let { r: I, g: er, b: ei } = (eo ? en.localColorTable : S.globalColorTable)[w];
            return { r: I, g: er, b: ei, a: w === $(null) ? (C ? ~~((I + er + ei) / 3) : 0) : 255 };
          },
          es = (() => {
            try {
              return new ImageData(en.width, en.height, { colorSpace: 'srgb' });
            } catch (w) {
              if (w instanceof DOMException && 'IndexSizeError' === w.name) return null;
              throw w;
            }
          })();
        if (null == es) throw EvalError('GIF frame size is to large');
        let el = w.nextByte(),
          ec = w.readSubBlocksBin(),
          eu = 1 << el,
          readBits = (w, S) => {
            let C = w >>> 3,
              I = 7 & w;
            return ((ec[C] + (ec[C + 1] << 8) + (ec[C + 2] << 16)) & (((1 << S) - 1) << I)) >>> I;
          };
        if ((64 & ei) == 64) {
          for (let C = 0, $ = el + 1, ei = 0, eo = [[0]], ec = 0; ec < 4; ec++) {
            if (ed[ec] < en.height)
              for (let w = 0, S = 0; ; ) {
                let I = C;
                if (((C = readBits(ei, $)), (ei += $ + 1), C === eu)) {
                  ($ = el + 1), (eo.length = eu + 2);
                  for (let w = 0; w < eo.length; w++) eo[w] = w < eu ? [w] : [];
                } else {
                  C >= eo.length ? eo.push(eo[I].concat(eo[I][0])) : I !== eu && eo.push(eo[I].concat(eo[C][0]));
                  for (let I = 0; I < eo[C].length; I++) {
                    let { r: $, g: er, b: ei, a: el } = getColor(eo[C][I]);
                    es.data.set([$, er, ei, el], ed[ec] * en.width + eh[ec] * S + (w % (4 * en.width))), (w += 4);
                  }
                  eo.length === 1 << $ && $ < 12 && $++;
                }
                if (w === 4 * en.width * (S + 1) && (S++, ed[ec] + eh[ec] * S >= en.height)) break;
              }
            er?.(
              w.pos / (w.data.length - 1),
              I(!1) + 1,
              es,
              { x: en.left, y: en.top },
              { width: S.width, height: S.height }
            );
          }
          (en.image = es), (en.bitmap = await createImageBitmap(es));
        } else {
          for (let w = 0, S = el + 1, C = 0, I = [[0]], $ = -4; ; ) {
            let er = w;
            if (((w = readBits(C, S)), (C += S), w === eu)) {
              (S = el + 1), (I.length = eu + 2);
              for (let w = 0; w < I.length; w++) I[w] = w < eu ? [w] : [];
            } else {
              if (w === eu + 1) break;
              w >= I.length ? I.push(I[er].concat(I[er][0])) : er !== eu && I.push(I[er].concat(I[w][0]));
              for (let S = 0; S < I[w].length; S++) {
                let { r: C, g: er, b: en, a: ei } = getColor(I[w][S]);
                es.data.set([C, er, en, ei], ($ += 4));
              }
              I.length >= 1 << S && S < 12 && S++;
            }
          }
          (en.image = es),
            (en.bitmap = await createImageBitmap(es)),
            er?.(
              (w.pos + 1) / w.data.length,
              I(!1) + 1,
              en.image,
              { x: en.left, y: en.top },
              { width: S.width, height: S.height }
            );
        }
      }
      async function parseBlock(w, S, C, I, $, er) {
        switch (w.nextByte()) {
          case 59:
            return !0;
          case 44:
            await parseImageBlock(w, S, C, I, $, er);
            break;
          case 33:
            await parseExtensionBlock(w, S, I, $);
            break;
          default:
            throw EvalError('undefined block found');
        }
        return !1;
      }
      function getGIFLoopAmount(w) {
        for (let S of w.applicationExtensions)
          if (S.identifier + S.authenticationCode === 'NETSCAPE2.0') return S.data[1] + (S.data[2] << 8);
        return NaN;
      }
      async function decodeGIF(w, S, C) {
        C || (C = !1);
        let I = await fetch(w);
        if (!I.ok && 404 === I.status) throw EvalError('file not found');
        let $ = await I.arrayBuffer(),
          er = {
            width: 0,
            height: 0,
            totalTime: 0,
            colorRes: 0,
            pixelAspectRatio: 0,
            frames: [],
            sortFlag: !1,
            globalColorTable: [],
            backgroundImage: new ImageData(1, 1, { colorSpace: 'srgb' }),
            comments: [],
            applicationExtensions: []
          },
          en = new ByteStream(new Uint8ClampedArray($));
        if ('GIF89a' !== en.getString(6)) throw Error('not a supported GIF file');
        (er.width = en.nextTwoBytes()), (er.height = en.nextTwoBytes());
        let ei = en.nextByte(),
          eo = (128 & ei) == 128;
        (er.colorRes = (112 & ei) >>> 4), (er.sortFlag = (8 & ei) == 8);
        let es = en.nextByte();
        (er.pixelAspectRatio = en.nextByte()),
          0 !== er.pixelAspectRatio && (er.pixelAspectRatio = (er.pixelAspectRatio + 15) / 64),
          eo && (er.globalColorTable = parseColorTable(en, 1 << ((7 & ei) + 1)));
        let el = (() => {
          try {
            return new ImageData(er.width, er.height, { colorSpace: 'srgb' });
          } catch (w) {
            if (w instanceof DOMException && 'IndexSizeError' === w.name) return null;
            throw w;
          }
        })();
        if (null == el) throw Error('GIF frame size is to large');
        let { r: ec, g: eu, b: ed } = er.globalColorTable[es];
        el.data.set(eo ? [ec, eu, ed, 255] : [0, 0, 0, 0]);
        for (let w = 4; w < el.data.length; w *= 2) el.data.copyWithin(w, 0, w);
        er.backgroundImage = el;
        let eh = -1,
          ef = !0,
          ep = -1,
          getframeIndex = (w) => (w && (ef = !0), eh),
          getTransparencyIndex = (w) => (null != w && (ep = w), ep);
        try {
          do
            ef &&
              (er.frames.push({
                left: 0,
                top: 0,
                width: 0,
                height: 0,
                disposalMethod: 0,
                image: new ImageData(1, 1, { colorSpace: 'srgb' }),
                plainTextData: null,
                userInputDelayFlag: !1,
                delayTime: 0,
                sortFlag: !1,
                localColorTable: [],
                reserved: 0,
                GCreserved: 0
              }),
              eh++,
              (ep = -1),
              (ef = !1));
          while (!(await parseBlock(en, er, C, getframeIndex, getTransparencyIndex, S)));
          for (let w of (er.frames.length--, er.frames)) {
            if (w.userInputDelayFlag && 0 === w.delayTime) {
              er.totalTime = 1 / 0;
              break;
            }
            er.totalTime += w.delayTime;
          }
          return er;
        } catch (w) {
          if (w instanceof EvalError) throw Error(`error while parsing frame ${eh} "${w.message}"`);
          throw w;
        }
      }
      let ef = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d.]+%?\))|currentcolor/gi;
      function replaceColorSvg(w, S, C) {
        let { svgData: I } = w;
        if (!I) return '';
        let $ = (0, en.vz)(S, C);
        if (I.includes('fill')) return I.replace(ef, () => $);
        let er = I.indexOf('>');
        return `${I.substring(0, er)} fill="${$}"${I.substring(er)}`;
      }
      async function loadImage(w) {
        return new Promise((S) => {
          w.loading = !0;
          let C = new Image();
          (w.element = C),
            C.addEventListener('load', () => {
              (w.loading = !1), S();
            }),
            C.addEventListener('error', () => {
              (w.element = void 0),
                (w.error = !0),
                (w.loading = !1),
                (0, er.jl)().error(`${es.gK} loading image: ${w.source}`),
                S();
            }),
            (C.src = w.source);
        });
      }
      async function loadGifImage(w) {
        if ('gif' !== w.type) {
          await loadImage(w);
          return;
        }
        w.loading = !0;
        try {
          (w.gifData = await decodeGIF(w.source)),
            (w.gifLoopCount = getGIFLoopAmount(w.gifData) ?? 0),
            0 === w.gifLoopCount && (w.gifLoopCount = 1 / 0);
        } catch {
          w.error = !0;
        }
        w.loading = !1;
      }
      async function downloadSvgImage(w) {
        if ('svg' !== w.type) {
          await loadImage(w);
          return;
        }
        w.loading = !0;
        let S = await fetch(w.source);
        S.ok ? (w.svgData = await S.text()) : ((0, er.jl)().error(`${es.gK} Image not found`), (w.error = !0)),
          (w.loading = !1);
      }
      function replaceImageColor(w, S, C, I) {
        let $ = replaceColorSvg(w, C, I.opacity?.value ?? 1),
          er = {
            color: C,
            gif: S.gif,
            data: { ...w, svgData: $ },
            loaded: !1,
            ratio: S.width / S.height,
            replaceColor: S.replaceColor ?? S.replace_color,
            source: S.src
          };
        return new Promise((S) => {
          let C = new Blob([$], { type: 'image/svg+xml' }),
            I = URL || window.URL || window.webkitURL || window,
            en = I.createObjectURL(C),
            ei = new Image();
          ei.addEventListener('load', () => {
            (er.loaded = !0), (er.element = ei), S(er), I.revokeObjectURL(en);
          }),
            ei.addEventListener('error', async () => {
              I.revokeObjectURL(en);
              let C = { ...w, error: !1, loading: !0 };
              await loadImage(C), (er.loaded = !0), (er.element = C.element), S(er);
            }),
            (ei.src = en);
        });
      }
      let ImageDrawer = class ImageDrawer {
        constructor(w) {
          (this.loadImageShape = async (w) => {
            if (!this._engine.loadImage) throw Error(`${es.gK} image shape not initialized`);
            await this._engine.loadImage({
              gif: w.gif,
              name: w.name,
              replaceColor: w.replaceColor ?? w.replace_color ?? !1,
              src: w.src
            });
          }),
            (this._engine = w);
        }
        addImage(w) {
          this._engine.images || (this._engine.images = []), this._engine.images.push(w);
        }
        draw(w, S, C, I, $) {
          let er = S.image,
            en = er?.element;
          if (er) {
            if (((w.globalAlpha = I), er.gif && er.gifData)) {
              let I = new OffscreenCanvas(er.gifData.width, er.gifData.height),
                en = I.getContext('2d');
              if (!en) throw Error('could not create offscreen canvas context');
              (en.imageSmoothingQuality = 'low'),
                (en.imageSmoothingEnabled = !1),
                en.clearRect(0, 0, I.width, I.height),
                void 0 === S.gifLoopCount && (S.gifLoopCount = er.gifLoopCount ?? 0);
              let ei = S.gifFrame ?? 0,
                eo = { x: -(0.5 * er.gifData.width), y: -(0.5 * er.gifData.height) },
                es = er.gifData.frames[ei];
              if ((void 0 === S.gifTime && (S.gifTime = 0), !es.bitmap)) return;
              switch ((w.scale(C / er.gifData.width, C / er.gifData.height), es.disposalMethod)) {
                case 4:
                case 5:
                case 6:
                case 7:
                case 0:
                  en.drawImage(es.bitmap, es.left, es.top),
                    w.drawImage(I, eo.x, eo.y),
                    en.clearRect(0, 0, I.width, I.height);
                  break;
                case 1:
                  en.drawImage(es.bitmap, es.left, es.top), w.drawImage(I, eo.x, eo.y);
                  break;
                case 2:
                  en.drawImage(es.bitmap, es.left, es.top),
                    w.drawImage(I, eo.x, eo.y),
                    en.clearRect(0, 0, I.width, I.height),
                    0 === er.gifData.globalColorTable.length
                      ? en.putImageData(er.gifData.frames[0].image, eo.x + es.left, eo.y + es.top)
                      : en.putImageData(er.gifData.backgroundImage, eo.x, eo.y);
                  break;
                case 3: {
                  let S = en.getImageData(0, 0, I.width, I.height);
                  en.drawImage(es.bitmap, es.left, es.top),
                    w.drawImage(I, eo.x, eo.y),
                    en.clearRect(0, 0, I.width, I.height),
                    en.putImageData(S, 0, 0);
                }
              }
              if (((S.gifTime += $.value), S.gifTime > es.delayTime)) {
                if (((S.gifTime -= es.delayTime), ++ei >= er.gifData.frames.length)) {
                  if (--S.gifLoopCount <= 0) return;
                  (ei = 0), en.clearRect(0, 0, I.width, I.height);
                }
                S.gifFrame = ei;
              }
              w.scale(er.gifData.width / C, er.gifData.height / C);
            } else if (en) {
              let S = er.ratio,
                I = { x: -C, y: -C };
              w.drawImage(en, I.x, I.y, 2 * C, (2 * C) / S);
            }
            w.globalAlpha = 1;
          }
        }
        getSidesCount() {
          return 12;
        }
        async init(w) {
          let S = w.actualOptions;
          if (S.preload && this._engine.loadImage) for (let w of S.preload) await this._engine.loadImage(w);
        }
        loadShape(w) {
          if ('image' !== w.shape && 'images' !== w.shape) return;
          this._engine.images || (this._engine.images = []);
          let S = w.shapeData,
            C = this._engine.images.find((w) => w.name === S.name || w.source === S.src);
          C ||
            this.loadImageShape(S).then(() => {
              this.loadShape(w);
            });
        }
        particleInit(w, S) {
          if ('image' !== S.shape && 'images' !== S.shape) return;
          this._engine.images || (this._engine.images = []);
          let C = this._engine.images,
            I = S.shapeData,
            $ = S.getFillColor(),
            er = C.find((w) => w.name === I.name || w.source === I.src);
          if (!er) return;
          let en = I.replaceColor ?? I.replace_color ?? er.replaceColor;
          if (er.loading) {
            setTimeout(() => {
              this.particleInit(w, S);
            });
            return;
          }
          (async () => {
            let w;
            (w =
              er.svgData && $
                ? await replaceImageColor(er, I, $, S)
                : {
                    color: $,
                    data: er,
                    element: er.element,
                    gif: er.gif,
                    gifData: er.gifData,
                    gifLoopCount: er.gifLoopCount,
                    loaded: !0,
                    ratio: I.width && I.height ? I.width / I.height : er.ratio ?? 1,
                    replaceColor: en,
                    source: I.src
                  }).ratio || (w.ratio = 1);
            let C = I.fill ?? S.fill,
              ei = I.close ?? S.close,
              eo = { image: w, fill: C, close: ei };
            (S.image = eo.image), (S.fill = eo.fill), (S.close = eo.close);
          })();
        }
      };
      let Preload = class Preload {
        constructor() {
          (this.src = ''), (this.gif = !1);
        }
        load(w) {
          w &&
            (void 0 !== w.gif && (this.gif = w.gif),
            void 0 !== w.height && (this.height = w.height),
            void 0 !== w.name && (this.name = w.name),
            void 0 !== w.replaceColor && (this.replaceColor = w.replaceColor),
            void 0 !== w.src && (this.src = w.src),
            void 0 !== w.width && (this.width = w.width));
        }
      };
      let ImagePreloaderPlugin = class ImagePreloaderPlugin {
        constructor(w) {
          (this.id = 'imagePreloader'), (this._engine = w);
        }
        getPlugin() {
          return {};
        }
        loadOptions(w, S) {
          if (!S || !S.preload) return;
          w.preload || (w.preload = []);
          let C = w.preload;
          for (let w of S.preload) {
            let S = C.find((S) => S.name === w.name || S.src === w.src);
            if (S) S.load(w);
            else {
              let S = new Preload();
              S.load(w), C.push(S);
            }
          }
        }
        needsPlugin() {
          return !0;
        }
      };
      function addLoadImageToEngine(w) {
        w.loadImage ||
          (w.loadImage = async (S) => {
            if (!S.name && !S.src) throw Error(`${es.gK} no image source provided`);
            if ((w.images || (w.images = []), !w.images.find((w) => w.name === S.name || w.source === S.src)))
              try {
                let C = {
                  gif: S.gif ?? !1,
                  name: S.name ?? S.src,
                  source: S.src,
                  type: S.src.substring(S.src.length - 3),
                  error: !1,
                  loading: !0,
                  replaceColor: S.replaceColor,
                  ratio: S.width && S.height ? S.width / S.height : void 0
                };
                w.images.push(C);
                let I = S.gif ? loadGifImage : S.replaceColor ? downloadSvgImage : loadImage;
                await I(C);
              } catch {
                throw Error(`${es.gK} ${S.name ?? S.src} not found`);
              }
          });
      }
      async function loadImageShape(w, S = !0) {
        addLoadImageToEngine(w);
        let C = new ImagePreloaderPlugin(w);
        await w.addPlugin(C, S), await w.addShape(['image', 'images'], new ImageDrawer(w), S);
      }
      var ep = C(61050);
      let LifeDelay = class LifeDelay extends ep.SW {
        constructor() {
          super(), (this.sync = !1);
        }
        load(w) {
          w && (super.load(w), void 0 !== w.sync && (this.sync = w.sync));
        }
      };
      let LifeDuration = class LifeDuration extends ep.SW {
        constructor() {
          super(), (this.random.minimumValue = 1e-4), (this.sync = !1);
        }
        load(w) {
          w && (super.load(w), void 0 !== w.sync && (this.sync = w.sync));
        }
      };
      let Life = class Life {
        constructor() {
          (this.count = 0), (this.delay = new LifeDelay()), (this.duration = new LifeDuration());
        }
        load(w) {
          w && (void 0 !== w.count && (this.count = w.count), this.delay.load(w.delay), this.duration.load(w.duration));
        }
      };
      let LifeUpdater = class LifeUpdater {
        constructor(w) {
          this.container = w;
        }
        init(w) {
          let S = this.container,
            C = w.options,
            I = C.life;
          I &&
            ((w.life = {
              delay: S.retina.reduceFactor
                ? (((0, $.Gu)(I.delay.value) * (I.delay.sync ? 1 : (0, $.sZ)())) / S.retina.reduceFactor) * 1e3
                : 0,
              delayTime: 0,
              duration: S.retina.reduceFactor
                ? (((0, $.Gu)(I.duration.value) * (I.duration.sync ? 1 : (0, $.sZ)())) / S.retina.reduceFactor) * 1e3
                : 0,
              time: 0,
              count: I.count
            }),
            w.life.duration <= 0 && (w.life.duration = -1),
            w.life.count <= 0 && (w.life.count = -1),
            w.life && (w.spawning = w.life.delay > 0));
        }
        isEnabled(w) {
          return !w.destroyed;
        }
        loadOptions(w, ...S) {
          for (let C of (w.life || (w.life = new Life()), S)) w.life.load(C?.life);
        }
        update(w, S) {
          if (!this.isEnabled(w) || !w.life) return;
          let C = w.life,
            I = !1;
          if (w.spawning) {
            if (((C.delayTime += S.value), !(C.delayTime >= w.life.delay))) return;
            (I = !0), (w.spawning = !1), (C.delayTime = 0), (C.time = 0);
          }
          if (-1 === C.duration || w.spawning || (I ? (C.time = 0) : (C.time += S.value), C.time < C.duration)) return;
          if (((C.time = 0), w.life.count > 0 && w.life.count--, 0 === w.life.count)) {
            w.destroy();
            return;
          }
          let er = this.container.canvas.size,
            en = (0, $.Cs)(0, er.width),
            ei = (0, $.Cs)(0, er.width);
          (w.position.x = (0, $.vd)(en)),
            (w.position.y = (0, $.vd)(ei)),
            (w.spawning = !0),
            (C.delayTime = 0),
            (C.time = 0),
            w.reset();
          let eo = w.options.life;
          eo && ((C.delay = 1e3 * (0, $.Gu)(eo.delay.value)), (C.duration = 1e3 * (0, $.Gu)(eo.duration.value)));
        }
      };
      async function loadLifeUpdater(w, S = !0) {
        await w.addParticleUpdater('life', (w) => new LifeUpdater(w), S);
      }
      let LineDrawer = class LineDrawer {
        draw(w, S, C) {
          let I = S.shapeData;
          w.moveTo(-C / 2, 0), w.lineTo(C / 2, 0), (w.lineCap = I?.cap ?? 'butt');
        }
        getSidesCount() {
          return 1;
        }
      };
      async function loadLineShape(w, S = !0) {
        await w.addShape('line', new LineDrawer(), S);
      }
      let ParallaxMover = class ParallaxMover {
        init() {}
        isEnabled(w) {
          return (
            !(0, er.Kr)() && !w.destroyed && w.container.actualOptions.interactivity.events.onHover.parallax.enable
          );
        }
        move(w) {
          let S = w.container,
            C = S.actualOptions,
            I = C.interactivity.events.onHover.parallax;
          if ((0, er.Kr)() || !I.enable) return;
          let $ = I.force,
            en = S.interactivity.mouse.position;
          if (!en) return;
          let ei = S.canvas.size,
            eo = { x: ei.width / 2, y: ei.height / 2 },
            es = I.smooth,
            el = w.getRadius() / $,
            ec = { x: (en.x - eo.x) * el, y: (en.y - eo.y) * el },
            { offset: eu } = w;
          (eu.x += (ec.x - eu.x) / es), (eu.y += (ec.y - eu.y) / es);
        }
      };
      async function loadParallaxMover(w, S = !0) {
        await w.addMover('parallax', () => new ParallaxMover(), S);
      }
      let ParticlesInteractorBase = class ParticlesInteractorBase {
        constructor(w) {
          (this.container = w), (this.type = 'particles');
        }
      };
      let Attractor_Attractor = class Attractor_Attractor extends ParticlesInteractorBase {
        constructor(w) {
          super(w);
        }
        clear() {}
        init() {}
        async interact(w) {
          let S = this.container,
            C = w.retina.attractDistance ?? S.retina.attractDistance,
            I = w.getPosition(),
            er = S.particles.quadTree.queryCircle(I, C);
          for (let S of er) {
            if (w === S || !S.options.move.attract.enable || S.destroyed || S.spawning) continue;
            let C = S.getPosition(),
              { dx: er, dy: en } = (0, $.oW)(I, C),
              ei = w.options.move.attract.rotate,
              eo = er / (1e3 * ei.x),
              es = en / (1e3 * ei.y),
              el = S.size.value / w.size.value,
              ec = 1 / el;
            (w.velocity.x -= eo * el), (w.velocity.y -= es * el), (S.velocity.x += eo * ec), (S.velocity.y += es * ec);
          }
        }
        isEnabled(w) {
          return w.options.move.attract.enable;
        }
        reset() {}
      };
      async function loadParticlesAttractInteraction(w, S = !0) {
        await w.addInteractor('particlesAttract', (w) => new Attractor_Attractor(w), S);
      }
      function updateAbsorb(w, S, C, I, er, en) {
        let ei = (0, $.uZ)((w.options.collisions.absorb.speed * er.factor) / 10, 0, I);
        (w.size.value += ei / 2), (C.size.value -= ei), I <= en && ((C.size.value = 0), C.destroy());
      }
      function absorb(w, S, C, I) {
        let $ = w.getRadius(),
          er = S.getRadius();
        void 0 === $ && void 0 !== er
          ? w.destroy()
          : void 0 !== $ && void 0 === er
          ? S.destroy()
          : void 0 !== $ &&
            void 0 !== er &&
            ($ >= er ? updateAbsorb(w, $, S, er, C, I) : updateAbsorb(S, er, w, $, C, I));
      }
      let fixBounceSpeed = (w) => {
        void 0 === w.collisionMaxSpeed && (w.collisionMaxSpeed = (0, $.Gu)(w.options.collisions.maxSpeed)),
          w.velocity.length > w.collisionMaxSpeed && (w.velocity.length = w.collisionMaxSpeed);
      };
      function bounce(w, S) {
        (0, er.kR)((0, er.gy)(w), (0, er.gy)(S)), fixBounceSpeed(w), fixBounceSpeed(S);
      }
      function destroy(w, S) {
        if ((w.unbreakable || S.unbreakable || bounce(w, S), void 0 === w.getRadius() && void 0 !== S.getRadius()))
          w.destroy();
        else if (void 0 !== w.getRadius() && void 0 === S.getRadius()) S.destroy();
        else if (void 0 !== w.getRadius() && void 0 !== S.getRadius()) {
          let C = w.getRadius() >= S.getRadius() ? S : w;
          C.destroy();
        }
      }
      function resolveCollision(w, S, C, I) {
        switch (w.options.collisions.mode) {
          case 'absorb':
            absorb(w, S, C, I);
            break;
          case 'bounce':
            bounce(w, S);
            break;
          case 'destroy':
            destroy(w, S);
        }
      }
      let Collider = class Collider extends ParticlesInteractorBase {
        constructor(w) {
          super(w);
        }
        clear() {}
        init() {}
        async interact(w, S) {
          if (w.destroyed || w.spawning) return;
          let C = this.container,
            I = w.getPosition(),
            er = w.getRadius(),
            en = C.particles.quadTree.queryCircle(I, 2 * er);
          for (let ei of en) {
            if (
              w === ei ||
              !ei.options.collisions.enable ||
              w.options.collisions.mode !== ei.options.collisions.mode ||
              ei.destroyed ||
              ei.spawning
            )
              continue;
            let en = ei.getPosition(),
              eo = ei.getRadius();
            if (Math.abs(Math.round(I.z) - Math.round(en.z)) > er + eo) continue;
            let es = (0, $.Sp)(I, en),
              el = er + eo;
            es > el || resolveCollision(w, ei, S, C.retina.pixelRatio);
          }
        }
        isEnabled(w) {
          return w.options.collisions.enable;
        }
        reset() {}
      };
      async function loadParticlesCollisionsInteraction(w, S = !0) {
        await w.addInteractor('particlesCollisions', (w) => new Collider(w), S);
      }
      let CircleWarp = class CircleWarp extends eo.C {
        constructor(w, S, C, I) {
          super(w, S, C), (this.canvasSize = I), (this.canvasSize = { ...I });
        }
        contains(w) {
          let { width: S, height: C } = this.canvasSize,
            { x: I, y: $ } = w;
          return (
            super.contains(w) ||
            super.contains({ x: I - S, y: $ }) ||
            super.contains({ x: I - S, y: $ - C }) ||
            super.contains({ x: I, y: $ - C })
          );
        }
        intersects(w) {
          if (super.intersects(w)) return !0;
          let S = { x: w.position.x - this.canvasSize.width, y: w.position.y - this.canvasSize.height };
          if (void 0 !== w.radius) {
            let C = new eo.C(S.x, S.y, 2 * w.radius);
            return super.intersects(C);
          }
          if (void 0 !== w.size) {
            let C = new el.A(S.x, S.y, 2 * w.size.width, 2 * w.size.height);
            return super.intersects(C);
          }
          return !1;
        }
      };
      let LinksShadow = class LinksShadow {
        constructor() {
          (this.blur = 5), (this.color = new ec.O()), (this.color.value = '#000'), (this.enable = !1);
        }
        load(w) {
          w &&
            (void 0 !== w.blur && (this.blur = w.blur),
            (this.color = ec.O.create(this.color, w.color)),
            void 0 !== w.enable && (this.enable = w.enable));
        }
      };
      let LinksTriangle = class LinksTriangle {
        constructor() {
          (this.enable = !1), (this.frequency = 1);
        }
        load(w) {
          w &&
            (void 0 !== w.color && (this.color = ec.O.create(this.color, w.color)),
            void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.frequency && (this.frequency = w.frequency),
            void 0 !== w.opacity && (this.opacity = w.opacity));
        }
      };
      let Links = class Links {
        constructor() {
          (this.blink = !1),
            (this.color = new ec.O()),
            (this.color.value = '#fff'),
            (this.consent = !1),
            (this.distance = 100),
            (this.enable = !1),
            (this.frequency = 1),
            (this.opacity = 1),
            (this.shadow = new LinksShadow()),
            (this.triangles = new LinksTriangle()),
            (this.width = 1),
            (this.warp = !1);
        }
        load(w) {
          w &&
            (void 0 !== w.id && (this.id = w.id),
            void 0 !== w.blink && (this.blink = w.blink),
            (this.color = ec.O.create(this.color, w.color)),
            void 0 !== w.consent && (this.consent = w.consent),
            void 0 !== w.distance && (this.distance = w.distance),
            void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.frequency && (this.frequency = w.frequency),
            void 0 !== w.opacity && (this.opacity = w.opacity),
            this.shadow.load(w.shadow),
            this.triangles.load(w.triangles),
            void 0 !== w.width && (this.width = w.width),
            void 0 !== w.warp && (this.warp = w.warp));
        }
      };
      function getLinkDistance(w, S, C, I, er) {
        let { dx: en, dy: ei, distance: eo } = (0, $.oW)(w, S);
        if (!er || eo <= C) return eo;
        let es = { x: Math.abs(en), y: Math.abs(ei) },
          el = { x: Math.min(es.x, I.width - es.x), y: Math.min(es.y, I.height - es.y) };
        return Math.sqrt(el.x ** 2 + el.y ** 2);
      }
      let Linker = class Linker extends ParticlesInteractorBase {
        constructor(w) {
          super(w),
            (this._setColor = (w) => {
              if (!w.options.links) return;
              let S = this.linkContainer,
                C = w.options.links,
                I = void 0 === C.id ? S.particles.linksColor : S.particles.linksColors.get(C.id);
              if (I) return;
              let $ = C.color;
              (I = (0, en.Dt)($, C.blink, C.consent)),
                void 0 === C.id ? (S.particles.linksColor = I) : S.particles.linksColors.set(C.id, I);
            }),
            (this.linkContainer = w);
        }
        clear() {}
        init() {
          (this.linkContainer.particles.linksColor = void 0), (this.linkContainer.particles.linksColors = new Map());
        }
        async interact(w) {
          if (!w.options.links) return;
          w.links = [];
          let S = w.getPosition(),
            C = this.container,
            I = C.canvas.size;
          if (S.x < 0 || S.y < 0 || S.x > I.width || S.y > I.height) return;
          let $ = w.options.links,
            er = $.opacity,
            en = w.retina.linksDistance ?? 0,
            ei = $.warp,
            es = ei ? new CircleWarp(S.x, S.y, en, I) : new eo.C(S.x, S.y, en),
            el = C.particles.quadTree.query(es);
          for (let C of el) {
            let eo = C.options.links;
            if (
              w === C ||
              !eo?.enable ||
              $.id !== eo.id ||
              C.spawning ||
              C.destroyed ||
              !C.links ||
              w.links.some((w) => w.destination === C) ||
              C.links.some((S) => S.destination === w)
            )
              continue;
            let es = C.getPosition();
            if (es.x < 0 || es.y < 0 || es.x > I.width || es.y > I.height) continue;
            let el = getLinkDistance(S, es, en, I, ei && eo.warp);
            if (el > en) continue;
            let ec = (1 - el / en) * er;
            this._setColor(w), w.links.push({ destination: C, opacity: ec });
          }
        }
        isEnabled(w) {
          return !!w.options.links?.enable;
        }
        loadParticlesOptions(w, ...S) {
          for (let C of (w.links || (w.links = new Links()), S))
            w.links.load(C?.links ?? C?.lineLinked ?? C?.line_linked);
        }
        reset() {}
      };
      async function loadLinksInteraction(w, S = !0) {
        await w.addInteractor('particlesLinks', (w) => new Linker(w), S);
      }
      function drawLinkLine(w) {
        let S = !1,
          {
            begin: C,
            end: I,
            maxDistance: er,
            context: ei,
            canvasSize: eo,
            width: es,
            backgroundMask: el,
            colorLine: ec,
            opacity: ed,
            links: eh
          } = w;
        if ((0, $.Sp)(C, I) <= er) (0, eu.pS)(ei, C, I), (S = !0);
        else if (eh.warp) {
          let w, en;
          let es = { x: I.x - eo.width, y: I.y },
            el = (0, $.oW)(C, es);
          if (el.distance <= er) {
            let S = C.y - (el.dy / el.dx) * C.x;
            (w = { x: 0, y: S }), (en = { x: eo.width, y: S });
          } else {
            let S = { x: I.x, y: I.y - eo.height },
              ei = (0, $.oW)(C, S);
            if (ei.distance <= er) {
              let S = C.y - (ei.dy / ei.dx) * C.x,
                I = -S / (ei.dy / ei.dx);
              (w = { x: I, y: 0 }), (en = { x: I, y: eo.height });
            } else {
              let S = { x: I.x - eo.width, y: I.y - eo.height },
                ei = (0, $.oW)(C, S);
              if (ei.distance <= er) {
                let S = C.y - (ei.dy / ei.dx) * C.x,
                  I = -S / (ei.dy / ei.dx);
                en = { x: (w = { x: I, y: S }).x + eo.width, y: w.y + eo.height };
              }
            }
          }
          w && en && ((0, eu.pS)(ei, C, w), (0, eu.pS)(ei, I, en), (S = !0));
        }
        if (!S) return;
        (ei.lineWidth = es),
          el.enable && (ei.globalCompositeOperation = el.composite),
          (ei.strokeStyle = (0, en.iz)(ec, ed));
        let { shadow: ef } = eh;
        if (ef.enable) {
          let w = (0, en.tX)(ef.color);
          w && ((ei.shadowBlur = ef.blur), (ei.shadowColor = (0, en.iz)(w)));
        }
        ei.stroke();
      }
      function drawLinkTriangle(w) {
        let { context: S, pos1: C, pos2: I, pos3: $, backgroundMask: er, colorTriangle: ei, opacityTriangle: eo } = w;
        (0, eu.Wd)(S, C, I, $),
          er.enable && (S.globalCompositeOperation = er.composite),
          (S.fillStyle = (0, en.iz)(ei, eo)),
          S.fill();
      }
      function getLinkKey(w) {
        return w.sort((w, S) => w - S), w.join('_');
      }
      function setLinkFrequency(w, S) {
        let C = getLinkKey(w.map((w) => w.id)),
          I = S.get(C);
        return void 0 === I && ((I = (0, $.sZ)()), S.set(C, I)), I;
      }
      let LinkInstance = class LinkInstance {
        constructor(w) {
          (this.container = w),
            (this._drawLinkLine = (w, S) => {
              let C = w.options.links;
              if (!C?.enable) return;
              let I = this.container,
                er = I.actualOptions,
                ei = S.destination,
                eo = w.getPosition(),
                es = ei.getPosition(),
                el = S.opacity;
              I.canvas.draw((S) => {
                let ec;
                let eu = w.options.twinkle?.lines;
                if (eu?.enable) {
                  let w = eu.frequency,
                    S = (0, en.tX)(eu.color),
                    C = (0, $.sZ)() < w;
                  C && S && ((ec = S), (el = (0, $.Gu)(eu.opacity)));
                }
                if (!ec) {
                  let S = void 0 !== C.id ? I.particles.linksColors.get(C.id) : I.particles.linksColor;
                  ec = (0, en.BE)(w, ei, S);
                }
                if (!ec) return;
                let ed = w.retina.linksWidth ?? 0,
                  eh = w.retina.linksDistance ?? 0,
                  { backgroundMask: ef } = er;
                drawLinkLine({
                  context: S,
                  width: ed,
                  begin: eo,
                  end: es,
                  maxDistance: eh,
                  canvasSize: I.canvas.size,
                  links: C,
                  backgroundMask: ef,
                  colorLine: ec,
                  opacity: el
                });
              });
            }),
            (this._drawLinkTriangle = (w, S, C) => {
              let I = w.options.links;
              if (!I?.enable) return;
              let er = I.triangles;
              if (!er.enable) return;
              let ei = this.container,
                eo = ei.actualOptions,
                es = S.destination,
                el = C.destination,
                ec = er.opacity ?? (S.opacity + C.opacity) / 2;
              ec <= 0 ||
                ei.canvas.draw((S) => {
                  let C = w.getPosition(),
                    eu = es.getPosition(),
                    ed = el.getPosition(),
                    eh = w.retina.linksDistance ?? 0;
                  if ((0, $.Sp)(C, eu) > eh || (0, $.Sp)(ed, eu) > eh || (0, $.Sp)(ed, C) > eh) return;
                  let ef = (0, en.tX)(er.color);
                  if (!ef) {
                    let S = void 0 !== I.id ? ei.particles.linksColors.get(I.id) : ei.particles.linksColor;
                    ef = (0, en.BE)(w, es, S);
                  }
                  ef &&
                    drawLinkTriangle({
                      context: S,
                      pos1: C,
                      pos2: eu,
                      pos3: ed,
                      backgroundMask: eo.backgroundMask,
                      colorTriangle: ef,
                      opacityTriangle: ec
                    });
                });
            }),
            (this._drawTriangles = (w, S, C, I) => {
              let $ = C.destination;
              if (!(w.links?.triangles.enable && $.options.links?.triangles.enable)) return;
              let er = $.links?.filter((w) => {
                let S = this._getLinkFrequency($, w.destination);
                return (
                  $.options.links &&
                  S <= $.options.links.frequency &&
                  I.findIndex((S) => S.destination === w.destination) >= 0
                );
              });
              if (er?.length)
                for (let I of er) {
                  let er = I.destination,
                    en = this._getTriangleFrequency(S, $, er);
                  en > w.links.triangles.frequency || this._drawLinkTriangle(S, C, I);
                }
            }),
            (this._getLinkFrequency = (w, S) => setLinkFrequency([w, S], this._freqs.links)),
            (this._getTriangleFrequency = (w, S, C) => setLinkFrequency([w, S, C], this._freqs.triangles)),
            (this._freqs = { links: new Map(), triangles: new Map() });
        }
        drawParticle(w, S) {
          let { links: C, options: I } = S;
          if (!C || C.length <= 0) return;
          let $ = C.filter((w) => I.links && this._getLinkFrequency(S, w.destination) <= I.links.frequency);
          for (let w of $)
            this._drawTriangles(I, S, w, $),
              w.opacity > 0 && (S.retina.linksWidth ?? 0) > 0 && this._drawLinkLine(S, w);
        }
        async init() {
          (this._freqs.links = new Map()), (this._freqs.triangles = new Map());
        }
        particleCreated(w) {
          if (((w.links = []), !w.options.links)) return;
          let S = this.container.retina.pixelRatio,
            { retina: C } = w,
            { distance: I, width: $ } = w.options.links;
          (C.linksDistance = I * S), (C.linksWidth = $ * S);
        }
        particleDestroyed(w) {
          w.links = [];
        }
      };
      let LinksPlugin = class LinksPlugin {
        constructor() {
          this.id = 'links';
        }
        getPlugin(w) {
          return new LinkInstance(w);
        }
        loadOptions() {}
        needsPlugin() {
          return !0;
        }
      };
      async function loadLinksPlugin(w, S = !0) {
        let C = new LinksPlugin();
        await w.addPlugin(C, S);
      }
      async function loadParticlesLinksInteraction(w, S = !0) {
        await loadLinksInteraction(w, S), await loadLinksPlugin(w, S);
      }
      let PolygonDrawerBase = class PolygonDrawerBase {
        draw(w, S, C) {
          let I = this.getCenter(S, C),
            $ = this.getSidesData(S, C),
            er = $.count.numerator * $.count.denominator,
            en = $.count.numerator / $.count.denominator,
            ei = Math.PI - (Math.PI * ((180 * (en - 2)) / en)) / 180;
          if (w) {
            w.beginPath(), w.translate(I.x, I.y), w.moveTo(0, 0);
            for (let S = 0; S < er; S++) w.lineTo($.length, 0), w.translate($.length, 0), w.rotate(ei);
          }
        }
        getSidesCount(w) {
          let S = w.shapeData;
          return Math.round((0, $.Gu)(S?.sides ?? S?.nb_sides ?? 5));
        }
      };
      let PolygonDrawer = class PolygonDrawer extends PolygonDrawerBase {
        getCenter(w, S) {
          return { x: -S / (w.sides / 3.5), y: -S / 0.76 };
        }
        getSidesData(w, S) {
          let C = w.sides;
          return { count: { denominator: 1, numerator: C }, length: (2.66 * S) / (C / 3) };
        }
      };
      let TriangleDrawer = class TriangleDrawer extends PolygonDrawerBase {
        getCenter(w, S) {
          return { x: -S, y: S / 1.66 };
        }
        getSidesCount() {
          return 3;
        }
        getSidesData(w, S) {
          return { count: { denominator: 2, numerator: 3 }, length: 2 * S };
        }
      };
      async function loadGenericPolygonShape(w, S = !0) {
        await w.addShape('polygon', new PolygonDrawer(), S);
      }
      async function loadTriangleShape(w, S = !0) {
        await w.addShape('triangle', new TriangleDrawer(), S);
      }
      async function loadPolygonShape(w, S = !0) {
        await loadGenericPolygonShape(w, S), await loadTriangleShape(w, S);
      }
      let RotateAnimation = class RotateAnimation {
        constructor() {
          (this.enable = !1), (this.speed = 0), (this.decay = 0), (this.sync = !1);
        }
        load(w) {
          w &&
            (void 0 !== w.enable && (this.enable = w.enable),
            void 0 !== w.speed && (this.speed = (0, $.Cs)(w.speed)),
            void 0 !== w.decay && (this.decay = (0, $.Cs)(w.decay)),
            void 0 !== w.sync && (this.sync = w.sync));
        }
      };
      let Rotate = class Rotate extends ep.SW {
        constructor() {
          super(),
            (this.animation = new RotateAnimation()),
            (this.direction = 'clockwise'),
            (this.path = !1),
            (this.value = 0);
        }
        load(w) {
          w &&
            (super.load(w),
            void 0 !== w.direction && (this.direction = w.direction),
            this.animation.load(w.animation),
            void 0 !== w.path && (this.path = w.path));
        }
      };
      function updateRotate(w, S) {
        let C = w.rotate,
          I = w.options.rotate;
        if (!C || !I) return;
        let $ = I.animation,
          er = (C.velocity ?? 0) * S.factor,
          en = 2 * Math.PI,
          ei = C.decay ?? 1;
        $.enable &&
          ('increasing' === C.status
            ? ((C.value += er), C.value > en && (C.value -= en))
            : ((C.value -= er), C.value < 0 && (C.value += en)),
          C.velocity && 1 !== ei && (C.velocity *= ei));
      }
      let RotateUpdater = class RotateUpdater {
        constructor(w) {
          this.container = w;
        }
        init(w) {
          let S = w.options.rotate;
          if (!S) return;
          (w.rotate = { enable: S.animation.enable, value: ((0, $.Gu)(S.value) * Math.PI) / 180 }),
            (w.pathRotation = S.path);
          let C = S.direction;
          if ('random' === C) {
            let w = Math.floor(2 * (0, $.sZ)());
            C = w > 0 ? 'counter-clockwise' : 'clockwise';
          }
          switch (C) {
            case 'counter-clockwise':
            case 'counterClockwise':
              w.rotate.status = 'decreasing';
              break;
            case 'clockwise':
              w.rotate.status = 'increasing';
          }
          let I = S.animation;
          I.enable &&
            ((w.rotate.decay = 1 - (0, $.Gu)(I.decay)),
            (w.rotate.velocity = ((0, $.Gu)(I.speed) / 360) * this.container.retina.reduceFactor),
            I.sync || (w.rotate.velocity *= (0, $.sZ)())),
            (w.rotation = w.rotate.value);
        }
        isEnabled(w) {
          let S = w.options.rotate;
          return !!S && !w.destroyed && !w.spawning && S.animation.enable && !S.path;
        }
        loadOptions(w, ...S) {
          for (let C of (w.rotate || (w.rotate = new Rotate()), S)) w.rotate.load(C?.rotate);
        }
        update(w, S) {
          this.isEnabled(w) && (updateRotate(w, S), (w.rotation = w.rotate?.value ?? 0));
        }
      };
      async function loadRotateUpdater(w, S = !0) {
        await w.addParticleUpdater('rotate', (w) => new RotateUpdater(w), S);
      }
      let em = Math.sqrt(2);
      let SquareDrawer = class SquareDrawer {
        draw(w, S, C) {
          let I = C / em,
            $ = 2 * I;
          w.rect(-I, -I, $, $);
        }
        getSidesCount() {
          return 4;
        }
      };
      async function loadSquareShape(w, S = !0) {
        await w.addShape(['edge', 'square'], new SquareDrawer(), S);
      }
      let StarDrawer = class StarDrawer {
        draw(w, S, C) {
          let I = S.sides,
            $ = S.starInset ?? 2;
          w.moveTo(0, 0 - C);
          for (let S = 0; S < I; S++)
            w.rotate(Math.PI / I), w.lineTo(0, 0 - C * $), w.rotate(Math.PI / I), w.lineTo(0, 0 - C);
        }
        getSidesCount(w) {
          let S = w.shapeData;
          return Math.round((0, $.Gu)(S?.sides ?? S?.nb_sides ?? 5));
        }
        particleInit(w, S) {
          let C = S.shapeData,
            I = (0, $.Gu)(C?.inset ?? 2);
          S.starInset = I;
        }
      };
      async function loadStarShape(w, S = !0) {
        await w.addShape('star', new StarDrawer(), S);
      }
      function Utils_updateColorValue(w, S, C, I, er) {
        if (
          !S ||
          !C.enable ||
          ((S.maxLoops ?? 0) > 0 && (S.loops ?? 0) > (S.maxLoops ?? 0)) ||
          (S.time || (S.time = 0),
          (S.delayTime ?? 0) > 0 && S.time < (S.delayTime ?? 0) && (S.time += w.value),
          (S.delayTime ?? 0) > 0 && S.time < (S.delayTime ?? 0))
        )
          return;
        let en = (0, $.vd)(C.offset),
          ei = (S.velocity ?? 0) * w.factor + 3.6 * en,
          eo = S.decay ?? 1;
        er && 'increasing' !== S.status
          ? ((S.value -= ei),
            S.value < 0 && (S.loops || (S.loops = 0), S.loops++, (S.status = 'increasing'), (S.value += S.value)))
          : ((S.value += ei),
            S.value > I &&
              (S.loops || (S.loops = 0), S.loops++, er && ((S.status = 'decreasing'), (S.value -= S.value % I)))),
          S.velocity && 1 !== eo && (S.velocity *= eo),
          S.value > I && (S.value %= I);
      }
      function updateStrokeColor(w, S) {
        if (!w.strokeColor || !w.strokeAnimation) return;
        let { h: C, s: I, l: $ } = w.strokeColor,
          { h: er, s: en, l: ei } = w.strokeAnimation;
        C && Utils_updateColorValue(S, C, er, 360, !1),
          I && Utils_updateColorValue(S, I, en, 100, !0),
          $ && Utils_updateColorValue(S, $, ei, 100, !0);
      }
      let StrokeColorUpdater = class StrokeColorUpdater {
        constructor(w) {
          this.container = w;
        }
        init(w) {
          let S = this.container,
            C = w.options,
            I = (0, er.wA)(C.stroke, w.id, C.reduceDuplicates);
          (w.strokeWidth = (0, $.Gu)(I.width) * S.retina.pixelRatio),
            (w.strokeOpacity = (0, $.Gu)(I.opacity ?? 1)),
            (w.strokeAnimation = I.color?.animation);
          let ei = (0, en.lN)(I.color) ?? w.getFillColor();
          ei && (w.strokeColor = (0, en.bS)(ei, w.strokeAnimation, S.retina.reduceFactor));
        }
        isEnabled(w) {
          let S = w.strokeAnimation,
            { strokeColor: C } = w;
          return (
            !w.destroyed &&
            !w.spawning &&
            !!S &&
            ((C?.h.value !== void 0 && C.h.enable) ||
              (C?.s.value !== void 0 && C.s.enable) ||
              (C?.l.value !== void 0 && C.l.enable))
          );
        }
        update(w, S) {
          this.isEnabled(w) && updateStrokeColor(w, S);
        }
      };
      async function loadStrokeColorUpdater(w, S = !0) {
        await w.addParticleUpdater('strokeColor', (w) => new StrokeColorUpdater(w), S);
      }
      let eg = ['text', 'character', 'char'];
      let TextDrawer = class TextDrawer {
        draw(w, S, C, I) {
          let $ = S.shapeData;
          if (void 0 === $) return;
          let en = $.value;
          if (void 0 === en) return;
          void 0 === S.text && (S.text = (0, er.wA)(en, S.randomIndexData));
          let ei = S.text,
            eo = $.style ?? '',
            es = $.weight ?? '400',
            el = $.font ?? 'Verdana',
            ec = S.fill,
            eu = (ei.length * C) / 2;
          w.font = `${eo} ${es} ${2 * Math.round(C)}px "${el}"`;
          let ed = { x: -eu, y: C / 2 };
          (w.globalAlpha = I), ec ? w.fillText(ei, ed.x, ed.y) : w.strokeText(ei, ed.x, ed.y), (w.globalAlpha = 1);
        }
        getSidesCount() {
          return 12;
        }
        async init(w) {
          let S = w.actualOptions;
          if (eg.find((w) => (0, er.dB)(w, S.particles.shape.type))) {
            let w = eg.map((w) => S.particles.shape.options[w]).find((w) => !!w),
              C = [];
            (0, er.KH)(w, (w) => {
              C.push((0, er.mx)(w.font, w.weight));
            }),
              await Promise.all(C);
          }
        }
        particleInit(w, S) {
          if (!S.shape || !eg.includes(S.shape)) return;
          let C = S.shapeData;
          if (void 0 === C) return;
          let I = C.value;
          void 0 !== I && (S.text = (0, er.wA)(I, S.randomIndexData));
        }
      };
      async function loadTextShape(w, S = !0) {
        await w.addShape(eg, new TextDrawer(), S);
      }
      async function loadSlim(w, S = !0) {
        initPjs(w),
          await loadParallaxMover(w, !1),
          await loadExternalAttractInteraction(w, !1),
          await loadExternalBounceInteraction(w, !1),
          await loadExternalBubbleInteraction(w, !1),
          await loadExternalConnectInteraction(w, !1),
          await loadExternalGrabInteraction(w, !1),
          await loadExternalPauseInteraction(w, !1),
          await loadExternalPushInteraction(w, !1),
          await loadExternalRemoveInteraction(w, !1),
          await loadExternalRepulseInteraction(w, !1),
          await loadExternalSlowInteraction(w, !1),
          await loadParticlesAttractInteraction(w, !1),
          await loadParticlesCollisionsInteraction(w, !1),
          await loadParticlesLinksInteraction(w, !1),
          await loadEasingQuadPlugin(),
          await loadImageShape(w, !1),
          await loadLineShape(w, !1),
          await loadPolygonShape(w, !1),
          await loadSquareShape(w, !1),
          await loadStarShape(w, !1),
          await loadTextShape(w, !1),
          await loadLifeUpdater(w, !1),
          await loadRotateUpdater(w, !1),
          await loadStrokeColorUpdater(w, !1),
          await loadBasic(w, S);
      }
    },
    14436: function (w, S, C) {
      var I = C(61565).default;
      function _regeneratorRuntime() {
        'use strict';
        /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ (w.exports =
          _regeneratorRuntime =
            function () {
              return C;
            }),
          (w.exports.__esModule = !0),
          (w.exports.default = w.exports);
        var S,
          C = {},
          $ = Object.prototype,
          er = $.hasOwnProperty,
          en =
            Object.defineProperty ||
            function (w, S, C) {
              w[S] = C.value;
            },
          ei = 'function' == typeof Symbol ? Symbol : {},
          eo = ei.iterator || '@@iterator',
          es = ei.asyncIterator || '@@asyncIterator',
          el = ei.toStringTag || '@@toStringTag';
        function define(w, S, C) {
          return Object.defineProperty(w, S, { value: C, enumerable: !0, configurable: !0, writable: !0 }), w[S];
        }
        try {
          define({}, '');
        } catch (w) {
          define = function (w, S, C) {
            return (w[S] = C);
          };
        }
        function wrap(w, S, C, I) {
          var $ = Object.create((S && S.prototype instanceof Generator ? S : Generator).prototype);
          return en($, '_invoke', { value: makeInvokeMethod(w, C, new Context(I || [])) }), $;
        }
        function tryCatch(w, S, C) {
          try {
            return { type: 'normal', arg: w.call(S, C) };
          } catch (w) {
            return { type: 'throw', arg: w };
          }
        }
        C.wrap = wrap;
        var ec = 'suspendedStart',
          eu = 'executing',
          ed = 'completed',
          eh = {};
        function Generator() {}
        function GeneratorFunction() {}
        function GeneratorFunctionPrototype() {}
        var ef = {};
        define(ef, eo, function () {
          return this;
        });
        var ep = Object.getPrototypeOf,
          em = ep && ep(ep(values([])));
        em && em !== $ && er.call(em, eo) && (ef = em);
        var eg = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(ef));
        function defineIteratorMethods(w) {
          ['next', 'throw', 'return'].forEach(function (S) {
            define(w, S, function (w) {
              return this._invoke(S, w);
            });
          });
        }
        function AsyncIterator(w, S) {
          var C;
          function invoke(C, $, en, ei) {
            var eo = tryCatch(w[C], w, $);
            if ('throw' !== eo.type) {
              var es = eo.arg,
                el = es.value;
              return el && 'object' == I(el) && er.call(el, '__await')
                ? S.resolve(el.__await).then(
                    function (w) {
                      invoke('next', w, en, ei);
                    },
                    function (w) {
                      invoke('throw', w, en, ei);
                    }
                  )
                : S.resolve(el).then(
                    function (w) {
                      (es.value = w), en(es);
                    },
                    function (w) {
                      return invoke('throw', w, en, ei);
                    }
                  );
            }
            ei(eo.arg);
          }
          en(this, '_invoke', {
            value: function (w, I) {
              function callInvokeWithMethodAndArg() {
                return new S(function (S, C) {
                  invoke(w, I, S, C);
                });
              }
              return (C = C
                ? C.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg)
                : callInvokeWithMethodAndArg());
            }
          });
        }
        function makeInvokeMethod(w, C, I) {
          var $ = ec;
          return function (er, en) {
            if ($ === eu) throw Error('Generator is already running');
            if ($ === ed) {
              if ('throw' === er) throw en;
              return { value: S, done: !0 };
            }
            for (I.method = er, I.arg = en; ; ) {
              var ei = I.delegate;
              if (ei) {
                var eo = maybeInvokeDelegate(ei, I);
                if (eo) {
                  if (eo === eh) continue;
                  return eo;
                }
              }
              if ('next' === I.method) I.sent = I._sent = I.arg;
              else if ('throw' === I.method) {
                if ($ === ec) throw (($ = ed), I.arg);
                I.dispatchException(I.arg);
              } else 'return' === I.method && I.abrupt('return', I.arg);
              $ = eu;
              var es = tryCatch(w, C, I);
              if ('normal' === es.type) {
                if ((($ = I.done ? ed : 'suspendedYield'), es.arg === eh)) continue;
                return { value: es.arg, done: I.done };
              }
              'throw' === es.type && (($ = ed), (I.method = 'throw'), (I.arg = es.arg));
            }
          };
        }
        function maybeInvokeDelegate(w, C) {
          var I = C.method,
            $ = w.iterator[I];
          if ($ === S)
            return (
              (C.delegate = null),
              ('throw' === I &&
                w.iterator.return &&
                ((C.method = 'return'), (C.arg = S), maybeInvokeDelegate(w, C), 'throw' === C.method)) ||
                ('return' !== I &&
                  ((C.method = 'throw'), (C.arg = TypeError("The iterator does not provide a '" + I + "' method")))),
              eh
            );
          var er = tryCatch($, w.iterator, C.arg);
          if ('throw' === er.type) return (C.method = 'throw'), (C.arg = er.arg), (C.delegate = null), eh;
          var en = er.arg;
          return en
            ? en.done
              ? ((C[w.resultName] = en.value),
                (C.next = w.nextLoc),
                'return' !== C.method && ((C.method = 'next'), (C.arg = S)),
                (C.delegate = null),
                eh)
              : en
            : ((C.method = 'throw'), (C.arg = TypeError('iterator result is not an object')), (C.delegate = null), eh);
        }
        function pushTryEntry(w) {
          var S = { tryLoc: w[0] };
          1 in w && (S.catchLoc = w[1]),
            2 in w && ((S.finallyLoc = w[2]), (S.afterLoc = w[3])),
            this.tryEntries.push(S);
        }
        function resetTryEntry(w) {
          var S = w.completion || {};
          (S.type = 'normal'), delete S.arg, (w.completion = S);
        }
        function Context(w) {
          (this.tryEntries = [{ tryLoc: 'root' }]), w.forEach(pushTryEntry, this), this.reset(!0);
        }
        function values(w) {
          if (w || '' === w) {
            var C = w[eo];
            if (C) return C.call(w);
            if ('function' == typeof w.next) return w;
            if (!isNaN(w.length)) {
              var $ = -1,
                i = function next() {
                  for (; ++$ < w.length; ) if (er.call(w, $)) return (next.value = w[$]), (next.done = !1), next;
                  return (next.value = S), (next.done = !0), next;
                };
              return (i.next = i);
            }
          }
          throw TypeError(I(w) + ' is not iterable');
        }
        return (
          (GeneratorFunction.prototype = GeneratorFunctionPrototype),
          en(eg, 'constructor', { value: GeneratorFunctionPrototype, configurable: !0 }),
          en(GeneratorFunctionPrototype, 'constructor', { value: GeneratorFunction, configurable: !0 }),
          (GeneratorFunction.displayName = define(GeneratorFunctionPrototype, el, 'GeneratorFunction')),
          (C.isGeneratorFunction = function (w) {
            var S = 'function' == typeof w && w.constructor;
            return !!S && (S === GeneratorFunction || 'GeneratorFunction' === (S.displayName || S.name));
          }),
          (C.mark = function (w) {
            return (
              Object.setPrototypeOf
                ? Object.setPrototypeOf(w, GeneratorFunctionPrototype)
                : ((w.__proto__ = GeneratorFunctionPrototype), define(w, el, 'GeneratorFunction')),
              (w.prototype = Object.create(eg)),
              w
            );
          }),
          (C.awrap = function (w) {
            return { __await: w };
          }),
          defineIteratorMethods(AsyncIterator.prototype),
          define(AsyncIterator.prototype, es, function () {
            return this;
          }),
          (C.AsyncIterator = AsyncIterator),
          (C.async = function (w, S, I, $, er) {
            void 0 === er && (er = Promise);
            var en = new AsyncIterator(wrap(w, S, I, $), er);
            return C.isGeneratorFunction(S)
              ? en
              : en.next().then(function (w) {
                  return w.done ? w.value : en.next();
                });
          }),
          defineIteratorMethods(eg),
          define(eg, el, 'Generator'),
          define(eg, eo, function () {
            return this;
          }),
          define(eg, 'toString', function () {
            return '[object Generator]';
          }),
          (C.keys = function (w) {
            var S = Object(w),
              C = [];
            for (var I in S) C.push(I);
            return (
              C.reverse(),
              function next() {
                for (; C.length; ) {
                  var w = C.pop();
                  if (w in S) return (next.value = w), (next.done = !1), next;
                }
                return (next.done = !0), next;
              }
            );
          }),
          (C.values = values),
          (Context.prototype = {
            constructor: Context,
            reset: function (w) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = S),
                (this.done = !1),
                (this.delegate = null),
                (this.method = 'next'),
                (this.arg = S),
                this.tryEntries.forEach(resetTryEntry),
                !w)
              )
                for (var C in this) 't' === C.charAt(0) && er.call(this, C) && !isNaN(+C.slice(1)) && (this[C] = S);
            },
            stop: function () {
              this.done = !0;
              var w = this.tryEntries[0].completion;
              if ('throw' === w.type) throw w.arg;
              return this.rval;
            },
            dispatchException: function (w) {
              if (this.done) throw w;
              var C = this;
              function handle(I, $) {
                return (en.type = 'throw'), (en.arg = w), (C.next = I), $ && ((C.method = 'next'), (C.arg = S)), !!$;
              }
              for (var I = this.tryEntries.length - 1; I >= 0; --I) {
                var $ = this.tryEntries[I],
                  en = $.completion;
                if ('root' === $.tryLoc) return handle('end');
                if ($.tryLoc <= this.prev) {
                  var ei = er.call($, 'catchLoc'),
                    eo = er.call($, 'finallyLoc');
                  if (ei && eo) {
                    if (this.prev < $.catchLoc) return handle($.catchLoc, !0);
                    if (this.prev < $.finallyLoc) return handle($.finallyLoc);
                  } else if (ei) {
                    if (this.prev < $.catchLoc) return handle($.catchLoc, !0);
                  } else {
                    if (!eo) throw Error('try statement without catch or finally');
                    if (this.prev < $.finallyLoc) return handle($.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (w, S) {
              for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                var I = this.tryEntries[C];
                if (I.tryLoc <= this.prev && er.call(I, 'finallyLoc') && this.prev < I.finallyLoc) {
                  var $ = I;
                  break;
                }
              }
              $ && ('break' === w || 'continue' === w) && $.tryLoc <= S && S <= $.finallyLoc && ($ = null);
              var en = $ ? $.completion : {};
              return (
                (en.type = w),
                (en.arg = S),
                $ ? ((this.method = 'next'), (this.next = $.finallyLoc), eh) : this.complete(en)
              );
            },
            complete: function (w, S) {
              if ('throw' === w.type) throw w.arg;
              return (
                'break' === w.type || 'continue' === w.type
                  ? (this.next = w.arg)
                  : 'return' === w.type
                  ? ((this.rval = this.arg = w.arg), (this.method = 'return'), (this.next = 'end'))
                  : 'normal' === w.type && S && (this.next = S),
                eh
              );
            },
            finish: function (w) {
              for (var S = this.tryEntries.length - 1; S >= 0; --S) {
                var C = this.tryEntries[S];
                if (C.finallyLoc === w) return this.complete(C.completion, C.afterLoc), resetTryEntry(C), eh;
              }
            },
            catch: function (w) {
              for (var S = this.tryEntries.length - 1; S >= 0; --S) {
                var C = this.tryEntries[S];
                if (C.tryLoc === w) {
                  var I = C.completion;
                  if ('throw' === I.type) {
                    var $ = I.arg;
                    resetTryEntry(C);
                  }
                  return $;
                }
              }
              throw Error('illegal catch attempt');
            },
            delegateYield: function (w, C, I) {
              return (
                (this.delegate = { iterator: values(w), resultName: C, nextLoc: I }),
                'next' === this.method && (this.arg = S),
                eh
              );
            }
          }),
          C
        );
      }
      (w.exports = _regeneratorRuntime), (w.exports.__esModule = !0), (w.exports.default = w.exports);
    },
    61565: function (w) {
      function _typeof(S) {
        return (
          (w.exports = _typeof =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (w) {
                  return typeof w;
                }
              : function (w) {
                  return w && 'function' == typeof Symbol && w.constructor === Symbol && w !== Symbol.prototype
                    ? 'symbol'
                    : typeof w;
                }),
          (w.exports.__esModule = !0),
          (w.exports.default = w.exports),
          _typeof(S)
        );
      }
      (w.exports = _typeof), (w.exports.__esModule = !0), (w.exports.default = w.exports);
    },
    74001: function (w, S, C) {
      var I = C(14436)();
      w.exports = I;
      try {
        regeneratorRuntime = I;
      } catch (w) {
        'object' == typeof globalThis
          ? (globalThis.regeneratorRuntime = I)
          : Function('r', 'regeneratorRuntime = r')(I);
      }
    },
    13428: function (w, S, C) {
      'use strict';
      function _extends() {
        return (_extends = Object.assign
          ? Object.assign.bind()
          : function (w) {
              for (var S = 1; S < arguments.length; S++) {
                var C = arguments[S];
                for (var I in C) Object.prototype.hasOwnProperty.call(C, I) && (w[I] = C[I]);
              }
              return w;
            }).apply(this, arguments);
      }
      C.d(S, {
        Z: function () {
          return _extends;
        }
      });
    },
    71504: function (w, S, C) {
      'use strict';
      C.d(S, {
        z: function () {
          return eh;
        }
      });
      var I = C(2265);
      function useButtonType(w) {
        let [S, C] = (0, I.useState)(!w),
          $ = (0, I.useCallback)((w) => {
            w && C('BUTTON' === w.tagName);
          }, []);
        return { ref: $, type: S ? 'button' : void 0 };
      }
      var [$, er] = (0, C(310).k)({ strict: !1, name: 'ButtonGroupContext' }),
        en = C(69742),
        ei = C(16465),
        eo = C(57437);
      function ButtonIcon(w) {
        let { children: S, className: C, ...$ } = w,
          er = (0, I.isValidElement)(S) ? (0, I.cloneElement)(S, { 'aria-hidden': !0, focusable: !1 }) : S,
          es = (0, ei.cx)('chakra-button__icon', C);
        return (0, eo.jsx)(en.m.span, {
          display: 'inline-flex',
          alignSelf: 'center',
          flexShrink: 0,
          ...$,
          className: es,
          children: er
        });
      }
      ButtonIcon.displayName = 'ButtonIcon';
      var es = C(83109);
      function ButtonSpinner(w) {
        let {
            label: S,
            placement: C,
            spacing: $ = '0.5rem',
            children: er = (0, eo.jsx)(es.$, { color: 'currentColor', width: '1em', height: '1em' }),
            className: el,
            __css: ec,
            ...eu
          } = w,
          ed = (0, ei.cx)('chakra-button__spinner', el),
          eh = 'start' === C ? 'marginEnd' : 'marginStart',
          ef = (0, I.useMemo)(
            () => ({
              display: 'flex',
              alignItems: 'center',
              position: S ? 'relative' : 'absolute',
              [eh]: S ? $ : 0,
              fontSize: '1em',
              lineHeight: 'normal',
              ...ec
            }),
            [ec, S, eh, $]
          );
        return (0, eo.jsx)(en.m.div, { className: ed, ...eu, __css: ef, children: er });
      }
      ButtonSpinner.displayName = 'ButtonSpinner';
      var el = C(45663),
        ec = C(58250),
        eu = C(45655),
        ed = C(50446),
        eh = (0, ec.G)((w, S) => {
          let C = er(),
            $ = (0, eu.mq)('Button', { ...C, ...w }),
            {
              isDisabled: es = null == C ? void 0 : C.isDisabled,
              isLoading: ec,
              isActive: eh,
              children: ef,
              leftIcon: ep,
              rightIcon: em,
              loadingText: eg,
              iconSpacing: ey = '0.5rem',
              type: ev,
              spinner: eb,
              spinnerPlacement: e_ = 'start',
              className: ex,
              as: ew,
              ...ek
            } = (0, ed.Lr)(w),
            eS = (0, I.useMemo)(() => {
              let w = { ...(null == $ ? void 0 : $._focus), zIndex: 1 };
              return {
                display: 'inline-flex',
                appearance: 'none',
                alignItems: 'center',
                justifyContent: 'center',
                userSelect: 'none',
                position: 'relative',
                whiteSpace: 'nowrap',
                verticalAlign: 'middle',
                outline: 'none',
                ...$,
                ...(!!C && { _focus: w })
              };
            }, [$, C]),
            { ref: eC, type: eP } = useButtonType(ew),
            eA = { rightIcon: em, leftIcon: ep, iconSpacing: ey, children: ef };
          return (0, eo.jsxs)(en.m.button, {
            ref: (0, el.qq)(S, eC),
            as: ew,
            type: null != ev ? ev : eP,
            'data-active': (0, ei.PB)(eh),
            'data-loading': (0, ei.PB)(ec),
            __css: eS,
            className: (0, ei.cx)('chakra-button', ex),
            ...ek,
            disabled: es || ec,
            children: [
              ec &&
                'start' === e_ &&
                (0, eo.jsx)(ButtonSpinner, {
                  className: 'chakra-button__spinner--start',
                  label: eg,
                  placement: 'start',
                  spacing: ey,
                  children: eb
                }),
              ec
                ? eg || (0, eo.jsx)(en.m.span, { opacity: 0, children: (0, eo.jsx)(ButtonContent, { ...eA }) })
                : (0, eo.jsx)(ButtonContent, { ...eA }),
              ec &&
                'end' === e_ &&
                (0, eo.jsx)(ButtonSpinner, {
                  className: 'chakra-button__spinner--end',
                  label: eg,
                  placement: 'end',
                  spacing: ey,
                  children: eb
                })
            ]
          });
        });
      function ButtonContent(w) {
        let { leftIcon: S, rightIcon: C, children: I, iconSpacing: $ } = w;
        return (0, eo.jsxs)(eo.Fragment, {
          children: [
            S && (0, eo.jsx)(ButtonIcon, { marginEnd: $, children: S }),
            I,
            C && (0, eo.jsx)(ButtonIcon, { marginStart: $, children: C })
          ]
        });
      }
      eh.displayName = 'Button';
    },
    85035: function (w, S, C) {
      'use strict';
      C.d(S, {
        If: function () {
          return useColorMode;
        },
        kc: function () {
          return $;
        }
      });
      var I = C(2265),
        $ = (0, I.createContext)({});
      function useColorMode() {
        let w = (0, I.useContext)($);
        if (void 0 === w) throw Error('useColorMode must be used within a ColorModeProvider');
        return w;
      }
      $.displayName = 'ColorModeContext';
    },
    98852: function (w, S, C) {
      'use strict';
      C.d(S, {
        Z: function () {
          return ColorModeScript;
        }
      });
      var I = C(57437),
        $ = new Set(['dark', 'light', 'system']);
      function normalize(w) {
        let S = w;
        return $.has(S) || (S = 'light'), S;
      }
      function getScriptSrc(w = {}) {
        let { initialColorMode: S = 'light', type: C = 'localStorage', storageKey: I = 'chakra-ui-color-mode' } = w,
          $ = normalize(S),
          er = `(function(){try{var a=function(o){var l="(prefers-color-scheme: dark)",v=window.matchMedia(l).matches?"dark":"light",e=o==="system"?v:o,d=document.documentElement,m=document.body,i="chakra-ui-light",n="chakra-ui-dark",s=e==="dark";return m.classList.add(s?n:i),m.classList.remove(s?i:n),d.style.colorScheme=e,d.dataset.theme=e,e},u=a,h="${$}",r="${I}",t=document.cookie.match(new RegExp("(^| )".concat(r,"=([^;]+)"))),c=t?t[2]:null;c?a(c):document.cookie="".concat(r,"=").concat(a(h),"; max-age=31536000; path=/")}catch(a){}})();
  `,
          en = `(function(){try{var a=function(c){var v="(prefers-color-scheme: dark)",h=window.matchMedia(v).matches?"dark":"light",r=c==="system"?h:c,o=document.documentElement,s=document.body,l="chakra-ui-light",d="chakra-ui-dark",i=r==="dark";return s.classList.add(i?d:l),s.classList.remove(i?l:d),o.style.colorScheme=r,o.dataset.theme=r,r},n=a,m="${$}",e="${I}",t=localStorage.getItem(e);t?a(t):localStorage.setItem(e,a(m))}catch(a){}})();
  `;
        return `!${'cookie' === C ? er : en}`.trim();
      }
      function ColorModeScript(w = {}) {
        let { nonce: S } = w;
        return (0, I.jsx)('script', {
          id: 'chakra-script',
          nonce: S,
          dangerouslySetInnerHTML: { __html: getScriptSrc(w) }
        });
      }
    },
    16248: function (w, S, C) {
      'use strict';
      C.d(S, {
        J: function () {
          return es;
        }
      });
      var I = C(58250),
        $ = C(45655),
        er = C(69742),
        en = C(16465),
        ei = C(57437),
        eo = {
          path: (0, ei.jsxs)('g', {
            stroke: 'currentColor',
            strokeWidth: '1.5',
            children: [
              (0, ei.jsx)('path', {
                strokeLinecap: 'round',
                fill: 'none',
                d: 'M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25'
              }),
              (0, ei.jsx)('path', {
                fill: 'currentColor',
                strokeLinecap: 'round',
                d: 'M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0'
              }),
              (0, ei.jsx)('circle', { fill: 'none', strokeMiterlimit: '10', cx: '12', cy: '12', r: '11.25' })
            ]
          }),
          viewBox: '0 0 24 24'
        },
        es = (0, I.G)((w, S) => {
          let {
              as: C,
              viewBox: I,
              color: es = 'currentColor',
              focusable: el = !1,
              children: ec,
              className: eu,
              __css: ed,
              ...eh
            } = w,
            ef = (0, en.cx)('chakra-icon', eu),
            ep = (0, $.mq)('Icon', w),
            em = {
              w: '1em',
              h: '1em',
              display: 'inline-block',
              lineHeight: '1em',
              flexShrink: 0,
              color: es,
              ...ed,
              ...ep
            },
            eg = { ref: S, focusable: el, className: ef, __css: em },
            ey = null != I ? I : eo.viewBox;
          if (C && 'string' != typeof C) return (0, ei.jsx)(er.m.svg, { as: C, ...eg, ...eh });
          let ev = null != ec ? ec : eo.path;
          return (0, ei.jsx)(er.m.svg, { verticalAlign: 'middle', viewBox: ey, ...eg, ...eh, children: ev });
        });
      es.displayName = 'Icon';
    },
    82851: function (w, S, C) {
      'use strict';
      C.d(S, {
        I: function () {
          return createIcon;
        }
      });
      var I = C(16248),
        $ = C(58250),
        er = C(2265),
        en = C(57437);
      function createIcon(w) {
        let { viewBox: S = '0 0 24 24', d: C, displayName: ei, defaultProps: eo = {} } = w,
          es = er.Children.toArray(w.path),
          el = (0, $.G)((w, $) =>
            (0, en.jsx)(I.J, {
              ref: $,
              viewBox: S,
              ...eo,
              ...w,
              children: es.length ? es : (0, en.jsx)('path', { fill: 'currentColor', d: C })
            })
          );
        return (el.displayName = ei), el;
      }
    },
    3896: function (w, S, C) {
      'use strict';
      C.d(S, {
        A: function () {
          return I;
        }
      });
      var I = (0, C(82851).I)({
        d: 'M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z',
        displayName: 'TriangleDownIcon'
      });
    },
    14327: function (w, S, C) {
      'use strict';
      C.d(S, {
        R: function () {
          return I;
        }
      });
      var I = (0, C(82851).I)({
        d: 'M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z',
        displayName: 'ArrowBackIcon'
      });
    },
    60385: function (w, S, C) {
      'use strict';
      C.d(S, {
        $: function () {
          return I;
        }
      });
      var I = (0, C(82851).I)({
        d: 'M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z',
        displayName: 'TriangleUpIcon'
      });
    },
    98045: function (w, S, C) {
      'use strict';
      C.d(S, {
        E: function () {
          return es;
        }
      });
      var I = C(58250),
        $ = C(57437),
        er = (0, I.G)(function (w, S) {
          let { htmlWidth: C, htmlHeight: I, alt: er, ...en } = w;
          return (0, $.jsx)('img', { width: C, height: I, ref: S, alt: er, ...en });
        });
      er.displayName = 'NativeImage';
      var en = C(67673),
        ei = C(2265);
      function useImage(w) {
        let {
            loading: S,
            src: C,
            srcSet: I,
            onLoad: $,
            onError: er,
            crossOrigin: eo,
            sizes: es,
            ignoreFallback: el
          } = w,
          [ec, eu] = (0, ei.useState)('pending');
        (0, ei.useEffect)(() => {
          eu(C ? 'loading' : 'pending');
        }, [C]);
        let ed = (0, ei.useRef)(),
          eh = (0, ei.useCallback)(() => {
            if (!C) return;
            flush();
            let w = new Image();
            (w.src = C),
              eo && (w.crossOrigin = eo),
              I && (w.srcset = I),
              es && (w.sizes = es),
              S && (w.loading = S),
              (w.onload = (w) => {
                flush(), eu('loaded'), null == $ || $(w);
              }),
              (w.onerror = (w) => {
                flush(), eu('failed'), null == er || er(w);
              }),
              (ed.current = w);
          }, [C, eo, I, es, $, er, S]),
          flush = () => {
            ed.current && ((ed.current.onload = null), (ed.current.onerror = null), (ed.current = null));
          };
        return (
          (0, en.G)(() => {
            if (!el)
              return (
                'loading' === ec && eh(),
                () => {
                  flush();
                }
              );
          }, [ec, eh, el]),
          el ? 'loaded' : ec
        );
      }
      var shouldShowFallbackImage = (w, S) =>
          ('loaded' !== w && 'beforeLoadOrError' === S) || ('failed' === w && 'onError' === S),
        eo = C(69742);
      function omit(w, S = []) {
        let C = Object.assign({}, w);
        for (let w of S) w in C && delete C[w];
        return C;
      }
      var es = (0, I.G)(function (w, S) {
        let {
            fallbackSrc: C,
            fallback: I,
            src: en,
            srcSet: ei,
            align: es,
            fit: el,
            loading: ec,
            ignoreFallback: eu,
            crossOrigin: ed,
            fallbackStrategy: eh = 'beforeLoadOrError',
            referrerPolicy: ef,
            ...ep
          } = w,
          em = null != ec || eu || !(void 0 !== C || void 0 !== I),
          eg = useImage({ ...w, crossOrigin: ed, ignoreFallback: em }),
          ey = shouldShowFallbackImage(eg, eh),
          ev = { ref: S, objectFit: el, objectPosition: es, ...(em ? ep : omit(ep, ['onError', 'onLoad'])) };
        return ey
          ? I || (0, $.jsx)(eo.m.img, { as: er, className: 'chakra-image__placeholder', src: C, ...ev })
          : (0, $.jsx)(eo.m.img, {
              as: er,
              src: en,
              srcSet: ei,
              crossOrigin: ed,
              loading: ec,
              referrerPolicy: ef,
              className: 'chakra-image',
              ...ev
            });
      });
      es.displayName = 'Image';
    },
    2910: function (w, S, C) {
      'use strict';
      C.d(S, {
        I: function () {
          return ep;
        }
      });
      var I = C(310),
        $ = C(45663),
        er = C(58250),
        en = C(45655),
        ei = C(50446),
        eo = C(69742),
        es = C(16465),
        el = C(2265),
        ec = C(57437),
        [eu, ed] = (0, I.k)({
          name: 'FormControlStylesContext',
          errorMessage:
            'useFormControlStyles returned is \'undefined\'. Seems you forgot to wrap the components in "<FormControl />" '
        }),
        [eh, ef] = (0, I.k)({ strict: !1, name: 'FormControlContext' });
      function useFormControlProvider(w) {
        let { id: S, isRequired: C, isInvalid: I, isDisabled: er, isReadOnly: en, ...ei } = w,
          eo = (0, el.useId)(),
          ec = S || `field-${eo}`,
          eu = `${ec}-label`,
          ed = `${ec}-feedback`,
          eh = `${ec}-helptext`,
          [ef, ep] = (0, el.useState)(!1),
          [em, eg] = (0, el.useState)(!1),
          [ey, ev] = (0, el.useState)(!1),
          eb = (0, el.useCallback)(
            (w = {}, S = null) => ({
              id: eh,
              ...w,
              ref: (0, $.lq)(S, (w) => {
                w && eg(!0);
              })
            }),
            [eh]
          ),
          e_ = (0, el.useCallback)(
            (w = {}, S = null) => ({
              ...w,
              ref: S,
              'data-focus': (0, es.PB)(ey),
              'data-disabled': (0, es.PB)(er),
              'data-invalid': (0, es.PB)(I),
              'data-readonly': (0, es.PB)(en),
              id: void 0 !== w.id ? w.id : eu,
              htmlFor: void 0 !== w.htmlFor ? w.htmlFor : ec
            }),
            [ec, er, ey, I, en, eu]
          ),
          ex = (0, el.useCallback)(
            (w = {}, S = null) => ({
              id: ed,
              ...w,
              ref: (0, $.lq)(S, (w) => {
                w && ep(!0);
              }),
              'aria-live': 'polite'
            }),
            [ed]
          ),
          ew = (0, el.useCallback)((w = {}, S = null) => ({ ...w, ...ei, ref: S, role: 'group' }), [ei]),
          ek = (0, el.useCallback)(
            (w = {}, S = null) => ({
              ...w,
              ref: S,
              role: 'presentation',
              'aria-hidden': !0,
              children: w.children || '*'
            }),
            []
          );
        return {
          isRequired: !!C,
          isInvalid: !!I,
          isReadOnly: !!en,
          isDisabled: !!er,
          isFocused: !!ey,
          onFocus: () => ev(!0),
          onBlur: () => ev(!1),
          hasFeedbackText: ef,
          setHasFeedbackText: ep,
          hasHelpText: em,
          setHasHelpText: eg,
          id: ec,
          labelId: eu,
          feedbackId: ed,
          helpTextId: eh,
          htmlProps: ei,
          getHelpTextProps: eb,
          getErrorMessageProps: ex,
          getRootProps: ew,
          getLabelProps: e_,
          getRequiredIndicatorProps: ek
        };
      }
      function useFormControl(w) {
        let { isDisabled: S, isInvalid: C, isReadOnly: I, isRequired: $, ...er } = useFormControlProps(w);
        return {
          ...er,
          disabled: S,
          readOnly: I,
          required: $,
          'aria-invalid': (0, es.Qm)(C),
          'aria-required': (0, es.Qm)($),
          'aria-readonly': (0, es.Qm)(I)
        };
      }
      function useFormControlProps(w) {
        var S, C, I;
        let $ = ef(),
          {
            id: er,
            disabled: en,
            readOnly: ei,
            required: eo,
            isRequired: el,
            isInvalid: ec,
            isReadOnly: eu,
            isDisabled: ed,
            onFocus: eh,
            onBlur: ep,
            ...em
          } = w,
          eg = w['aria-describedby'] ? [w['aria-describedby']] : [];
        return (
          (null == $ ? void 0 : $.hasFeedbackText) && (null == $ ? void 0 : $.isInvalid) && eg.push($.feedbackId),
          (null == $ ? void 0 : $.hasHelpText) && eg.push($.helpTextId),
          {
            ...em,
            'aria-describedby': eg.join(' ') || void 0,
            id: null != er ? er : null == $ ? void 0 : $.id,
            isDisabled: null != (S = null != en ? en : ed) ? S : null == $ ? void 0 : $.isDisabled,
            isReadOnly: null != (C = null != ei ? ei : eu) ? C : null == $ ? void 0 : $.isReadOnly,
            isRequired: null != (I = null != eo ? eo : el) ? I : null == $ ? void 0 : $.isRequired,
            isInvalid: null != ec ? ec : null == $ ? void 0 : $.isInvalid,
            onFocus: (0, es.v0)(null == $ ? void 0 : $.onFocus, eh),
            onBlur: (0, es.v0)(null == $ ? void 0 : $.onBlur, ep)
          }
        );
      }
      ((0, er.G)(function (w, S) {
        let C = (0, en.jC)('Form', w),
          I = (0, ei.Lr)(w),
          { getRootProps: $, htmlProps: er, ...el } = useFormControlProvider(I),
          ed = (0, es.cx)('chakra-form-control', w.className);
        return (0, ec.jsx)(eh, {
          value: el,
          children: (0, ec.jsx)(eu, {
            value: C,
            children: (0, ec.jsx)(eo.m.div, { ...$({}, S), className: ed, __css: C.container })
          })
        });
      }).displayName = 'FormControl'),
        ((0, er.G)(function (w, S) {
          let C = ef(),
            I = ed(),
            $ = (0, es.cx)('chakra-form__helper-text', w.className);
          return (0, ec.jsx)(eo.m.div, {
            ...(null == C ? void 0 : C.getHelpTextProps(w, S)),
            __css: I.helperText,
            className: $
          });
        }).displayName = 'FormHelperText');
      var ep = (0, er.G)(function (w, S) {
        let { htmlSize: C, ...I } = w,
          $ = (0, en.jC)('Input', I),
          er = (0, ei.Lr)(I),
          el = useFormControl(er),
          eu = (0, es.cx)('chakra-input', w.className);
        return (0, ec.jsx)(eo.m.input, { size: C, ...el, __css: $.field, ref: S, className: eu });
      });
      (ep.displayName = 'Input'), (ep.id = 'Input');
    },
    99126: function (w, S, C) {
      'use strict';
      C.d(S, {
        x: function () {
          return es;
        }
      });
      var I = C(58250),
        $ = C(45655),
        er = C(50446),
        en = C(69742),
        ei = C(16465);
      function compact(w) {
        let S = Object.assign({}, w);
        for (let w in S) void 0 === S[w] && delete S[w];
        return S;
      }
      var eo = C(57437),
        es = (0, I.G)(function (w, S) {
          let C = (0, $.mq)('Text', w),
            { className: I, align: es, decoration: el, casing: ec, ...eu } = (0, er.Lr)(w),
            ed = compact({ textAlign: w.align, textDecoration: w.decoration, textTransform: w.casing });
          return (0, eo.jsx)(en.m.p, {
            ref: S,
            className: (0, ei.cx)('chakra-text', w.className),
            ...ed,
            ...eu,
            __css: C
          });
        });
      es.displayName = 'Text';
    },
    45310: function (w, S, C) {
      'use strict';
      C.d(S, {
        L: function () {
          return I;
        }
      });
      var I = (0, C(69742).m)('div', { baseStyle: { flex: 1, justifySelf: 'stretch', alignSelf: 'stretch' } });
      I.displayName = 'Spacer';
    },
    26621: function (w, S, C) {
      'use strict';
      C.d(S, {
        k: function () {
          return en;
        }
      });
      var I = C(58250),
        $ = C(69742),
        er = C(57437),
        en = (0, I.G)(function (w, S) {
          let { direction: C, align: I, justify: en, wrap: ei, basis: eo, grow: es, shrink: el, ...ec } = w;
          return (0, er.jsx)($.m.div, {
            ref: S,
            __css: {
              display: 'flex',
              flexDirection: C,
              alignItems: I,
              justifyContent: en,
              flexWrap: ei,
              flexBasis: eo,
              flexGrow: es,
              flexShrink: el
            },
            ...ec
          });
        });
      en.displayName = 'Flex';
    },
    97766: function (w, S, C) {
      'use strict';
      C.d(S, {
        g: function () {
          return en;
        }
      });
      var I = C(52830),
        $ = C(58250),
        er = C(57437),
        en = (0, $.G)((w, S) => (0, er.jsx)(I.K, { align: 'center', ...w, direction: 'column', ref: S }));
      en.displayName = 'VStack';
    },
    13621: function (w, S, C) {
      'use strict';
      C.d(S, {
        xu: function () {
          return en;
        }
      });
      var I = C(69742),
        $ = C(58250),
        er = C(57437),
        en = (0, I.m)('div');
      en.displayName = 'Box';
      var ei = (0, $.G)(function (w, S) {
        let { size: C, centerContent: I = !0, ...$ } = w;
        return (0, er.jsx)(en, {
          ref: S,
          boxSize: C,
          __css: {
            ...(I ? { display: 'flex', alignItems: 'center', justifyContent: 'center' } : {}),
            flexShrink: 0,
            flexGrow: 0
          },
          ...$
        });
      });
      (ei.displayName = 'Square'),
        ((0, $.G)(function (w, S) {
          let { size: C, ...I } = w;
          return (0, er.jsx)(ei, { size: C, ref: S, borderRadius: '9999px', ...I });
        }).displayName = 'Circle');
    },
    52830: function (w, S, C) {
      'use strict';
      C.d(S, {
        K: function () {
          return ei;
        }
      });
      var I = C(69742),
        $ = C(57437),
        StackItem = (w) =>
          (0, $.jsx)(I.m.div, {
            className: 'chakra-stack__item',
            ...w,
            __css: { display: 'inline-block', flex: '0 0 auto', minWidth: 0, ...w.__css }
          });
      StackItem.displayName = 'StackItem';
      var er = C(16465);
      function mapResponsive(w, S) {
        return Array.isArray(w)
          ? w.map((w) => (null === w ? null : S(w)))
          : (0, er.Kn)(w)
          ? Object.keys(w).reduce((C, I) => ((C[I] = S(w[I])), C), {})
          : null != w
          ? S(w)
          : null;
      }
      function getDividerStyles(w) {
        let { spacing: S, direction: C } = w,
          I = {
            column: { my: S, mx: 0, borderLeftWidth: 0, borderBottomWidth: '1px' },
            'column-reverse': { my: S, mx: 0, borderLeftWidth: 0, borderBottomWidth: '1px' },
            row: { mx: S, my: 0, borderLeftWidth: '1px', borderBottomWidth: 0 },
            'row-reverse': { mx: S, my: 0, borderLeftWidth: '1px', borderBottomWidth: 0 }
          };
        return { '&': mapResponsive(C, (w) => I[w]) };
      }
      Object.freeze(['base', 'sm', 'md', 'lg', 'xl', '2xl']);
      var en = C(2265);
      function getValidChildren(w) {
        return en.Children.toArray(w).filter((w) => (0, en.isValidElement)(w));
      }
      var ei = (0, C(58250).G)((w, S) => {
        let {
            isInline: C,
            direction: ei,
            align: eo,
            justify: es,
            spacing: el = '0.5rem',
            wrap: ec,
            children: eu,
            divider: ed,
            className: eh,
            shouldWrapChildren: ef,
            ...ep
          } = w,
          em = C ? 'row' : null != ei ? ei : 'column',
          eg = (0, en.useMemo)(() => getDividerStyles({ spacing: el, direction: em }), [el, em]),
          ey = !!ed,
          ev = !ef && !ey,
          eb = (0, en.useMemo)(() => {
            let w = getValidChildren(eu);
            return ev
              ? w
              : w.map((S, C) => {
                  let I = void 0 !== S.key ? S.key : C,
                    er = C + 1 === w.length,
                    ei = (0, $.jsx)(StackItem, { children: S }, I),
                    eo = ef ? ei : S;
                  if (!ey) return eo;
                  let es = (0, en.cloneElement)(ed, { __css: eg });
                  return (0, $.jsxs)(en.Fragment, { children: [eo, er ? null : es] }, I);
                });
          }, [ed, eg, ey, ev, ef, eu]),
          e_ = (0, er.cx)('chakra-stack', eh);
        return (0, $.jsx)(I.m.div, {
          ref: S,
          display: 'flex',
          alignItems: eo,
          justifyContent: es,
          flexDirection: em,
          flexWrap: ec,
          gap: ey ? void 0 : el,
          className: e_,
          ...ep,
          children: eb
        });
      });
      ei.displayName = 'Stack';
    },
    310: function (w, S, C) {
      'use strict';
      C.d(S, {
        k: function () {
          return createContext;
        }
      });
      var I = C(2265);
      function getErrorMessage(w, S) {
        return `${w} returned \`undefined\`. Seems you forgot to wrap component within ${S}`;
      }
      function createContext(w = {}) {
        let {
            name: S,
            strict: C = !0,
            hookName: $ = 'useContext',
            providerName: er = 'Provider',
            errorMessage: en,
            defaultValue: ei
          } = w,
          eo = (0, I.createContext)(ei);
        function useContext() {
          var w;
          let S = (0, I.useContext)(eo);
          if (!S && C) {
            let S = Error(null != en ? en : getErrorMessage($, er));
            throw ((S.name = 'ContextError'), null == (w = Error.captureStackTrace) || w.call(Error, S, useContext), S);
          }
          return S;
        }
        return (eo.displayName = S), [eo.Provider, useContext, eo];
      }
    },
    45663: function (w, S, C) {
      'use strict';
      C.d(S, {
        lq: function () {
          return mergeRefs;
        },
        qq: function () {
          return useMergeRefs;
        }
      });
      var I = C(2265);
      function assignRef(w, S) {
        if (null != w) {
          if ('function' == typeof w) {
            w(S);
            return;
          }
          try {
            w.current = S;
          } catch (C) {
            throw Error(`Cannot assign value '${S}' to ref '${w}'`);
          }
        }
      }
      function mergeRefs(...w) {
        return (S) => {
          w.forEach((w) => {
            assignRef(w, S);
          });
        };
      }
      function useMergeRefs(...w) {
        return (0, I.useMemo)(() => mergeRefs(...w), w);
      }
    },
    67673: function (w, S, C) {
      'use strict';
      C.d(S, {
        G: function () {
          return $;
        }
      });
      var I = C(2265),
        $ = (null == globalThis ? void 0 : globalThis.document) ? I.useLayoutEffect : I.useEffect;
    },
    94427: function (w, S, C) {
      'use strict';
      C.d(S, {
        x: function () {
          return rY;
        }
      });
      var I,
        $ = C(99538),
        er = C(57437),
        en = String.raw,
        ei = en`
  :root,
  :host {
    --chakra-vh: 100vh;
  }

  @supports (height: -webkit-fill-available) {
    :root,
    :host {
      --chakra-vh: -webkit-fill-available;
    }
  }

  @supports (height: -moz-fill-available) {
    :root,
    :host {
      --chakra-vh: -moz-fill-available;
    }
  }

  @supports (height: 100dvh) {
    :root,
    :host {
      --chakra-vh: 100dvh;
    }
  }
`,
        CSSPolyfill = () => (0, er.jsx)($.xB, { styles: ei }),
        CSSReset = ({ scope: w = '' }) =>
          (0, er.jsx)($.xB, {
            styles: en`
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        font-family: system-ui, sans-serif;
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        -moz-osx-font-smoothing: grayscale;
        touch-action: manipulation;
      }

      body {
        position: relative;
        min-height: 100%;
        margin: 0;
        font-feature-settings: "kern";
      }

      ${w} :where(*, *::before, *::after) {
        border-width: 0;
        border-style: solid;
        box-sizing: border-box;
        word-wrap: break-word;
      }

      main {
        display: block;
      }

      ${w} hr {
        border-top-width: 1px;
        box-sizing: content-box;
        height: 0;
        overflow: visible;
      }

      ${w} :where(pre, code, kbd,samp) {
        font-family: SFMono-Regular, Menlo, Monaco, Consolas, monospace;
        font-size: 1em;
      }

      ${w} a {
        background-color: transparent;
        color: inherit;
        text-decoration: inherit;
      }

      ${w} abbr[title] {
        border-bottom: none;
        text-decoration: underline;
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
      }

      ${w} :where(b, strong) {
        font-weight: bold;
      }

      ${w} small {
        font-size: 80%;
      }

      ${w} :where(sub,sup) {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }

      ${w} sub {
        bottom: -0.25em;
      }

      ${w} sup {
        top: -0.5em;
      }

      ${w} img {
        border-style: none;
      }

      ${w} :where(button, input, optgroup, select, textarea) {
        font-family: inherit;
        font-size: 100%;
        line-height: 1.15;
        margin: 0;
      }

      ${w} :where(button, input) {
        overflow: visible;
      }

      ${w} :where(button, select) {
        text-transform: none;
      }

      ${w} :where(
          button::-moz-focus-inner,
          [type="button"]::-moz-focus-inner,
          [type="reset"]::-moz-focus-inner,
          [type="submit"]::-moz-focus-inner
        ) {
        border-style: none;
        padding: 0;
      }

      ${w} fieldset {
        padding: 0.35em 0.75em 0.625em;
      }

      ${w} legend {
        box-sizing: border-box;
        color: inherit;
        display: table;
        max-width: 100%;
        padding: 0;
        white-space: normal;
      }

      ${w} progress {
        vertical-align: baseline;
      }

      ${w} textarea {
        overflow: auto;
      }

      ${w} :where([type="checkbox"], [type="radio"]) {
        box-sizing: border-box;
        padding: 0;
      }

      ${w} input[type="number"]::-webkit-inner-spin-button,
      ${w} input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none !important;
      }

      ${w} input[type="number"] {
        -moz-appearance: textfield;
      }

      ${w} input[type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }

      ${w} input[type="search"]::-webkit-search-decoration {
        -webkit-appearance: none !important;
      }

      ${w} ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }

      ${w} details {
        display: block;
      }

      ${w} summary {
        display: list-item;
      }

      template {
        display: none;
      }

      [hidden] {
        display: none !important;
      }

      ${w} :where(
          blockquote,
          dl,
          dd,
          h1,
          h2,
          h3,
          h4,
          h5,
          h6,
          hr,
          figure,
          p,
          pre
        ) {
        margin: 0;
      }

      ${w} button {
        background: transparent;
        padding: 0;
      }

      ${w} fieldset {
        margin: 0;
        padding: 0;
      }

      ${w} :where(ol, ul) {
        margin: 0;
        padding: 0;
      }

      ${w} textarea {
        resize: vertical;
      }

      ${w} :where(button, [role="button"]) {
        cursor: pointer;
      }

      ${w} button::-moz-focus-inner {
        border: 0 !important;
      }

      ${w} table {
        border-collapse: collapse;
      }

      ${w} :where(h1, h2, h3, h4, h5, h6) {
        font-size: inherit;
        font-weight: inherit;
      }

      ${w} :where(button, input, optgroup, select, textarea) {
        padding: 0;
        line-height: inherit;
        color: inherit;
      }

      ${w} :where(img, svg, video, canvas, audio, iframe, embed, object) {
        display: block;
      }

      ${w} :where(img, video) {
        max-width: 100%;
        height: auto;
      }

      [data-js-focus-visible]
        :focus:not([data-focus-visible-added]):not(
          [data-focus-visible-disabled]
        ) {
        outline: none;
        box-shadow: none;
      }

      ${w} select::-ms-expand {
        display: none;
      }

      ${ei}
    `
          }),
        eo = C(310),
        [es, el] = (0, eo.k)({ strict: !1, name: 'PortalManagerContext' });
      function PortalManager(w) {
        let { children: S, zIndex: C } = w;
        return (0, er.jsx)(es, { value: { zIndex: C }, children: S });
      }
      PortalManager.displayName = 'PortalManager';
      var ec = C(85035),
        eu = C(2265);
      function chunk_ITIKTQWJ_createContext(w = {}) {
        let {
            strict: S = !0,
            errorMessage:
              C = 'useContext: `context` is undefined. Seems you forgot to wrap component within the Provider',
            name: I
          } = w,
          $ = (0, eu.createContext)(void 0);
        function useContext() {
          var w;
          let I = (0, eu.useContext)($);
          if (!I && S) {
            let S = Error(C);
            throw ((S.name = 'ContextError'), null == (w = Error.captureStackTrace) || w.call(Error, S, useContext), S);
          }
          return I;
        }
        return ($.displayName = I), [$.Provider, useContext, $];
      }
      var ed = C(50446),
        eh = C(19307),
        ef = C(19546),
        ep = C(65673);
      function ThemeProvider(w) {
        let { cssVarsRoot: S, theme: C, children: I } = w,
          $ = (0, eu.useMemo)(() => (0, ed.c0)(C), [C]);
        return (0, er.jsxs)(ep.a, { theme: $, children: [(0, er.jsx)(CSSVars, { root: S }), I] });
      }
      function CSSVars({ root: w = ':host, :root' }) {
        let S = [w, '[data-theme]'].join(',');
        return (0, er.jsx)($.xB, { styles: (w) => ({ [S]: w.__cssVars }) });
      }
      var [em, eg] = chunk_ITIKTQWJ_createContext({
        name: 'StylesContext',
        errorMessage:
          'useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` '
      });
      function GlobalStyle() {
        let { colorMode: w } = (0, ec.If)();
        return (0, er.jsx)($.xB, {
          styles: (S) => {
            let C = (0, eh.Wf)(S, 'styles.global'),
              I = (0, ef.Pu)(C, { theme: S, colorMode: w });
            if (!I) return;
            let $ = (0, ed.iv)(I)(S);
            return $;
          }
        });
      }
      var ey = { light: 'chakra-ui-light', dark: 'chakra-ui-dark' };
      function getColorModeUtils(w = {}) {
        let { preventTransition: S = !0 } = w,
          C = {
            setDataset: (w) => {
              let I = S ? C.preventTransition() : void 0;
              (document.documentElement.dataset.theme = w),
                (document.documentElement.style.colorScheme = w),
                null == I || I();
            },
            setClassName(w) {
              document.body.classList.add(w ? ey.dark : ey.light),
                document.body.classList.remove(w ? ey.light : ey.dark);
            },
            query: () => window.matchMedia('(prefers-color-scheme: dark)'),
            getSystemTheme(w) {
              var S;
              let I = null != (S = C.query().matches) ? S : 'dark' === w;
              return I ? 'dark' : 'light';
            },
            addListener(w) {
              let S = C.query(),
                listener = (S) => {
                  w(S.matches ? 'dark' : 'light');
                };
              return (
                'function' == typeof S.addListener ? S.addListener(listener) : S.addEventListener('change', listener),
                () => {
                  'function' == typeof S.removeListener
                    ? S.removeListener(listener)
                    : S.removeEventListener('change', listener);
                }
              );
            },
            preventTransition() {
              let w = document.createElement('style');
              return (
                w.appendChild(
                  document.createTextNode(
                    '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}'
                  )
                ),
                document.head.appendChild(w),
                () => {
                  window.getComputedStyle(document.body),
                    requestAnimationFrame(() => {
                      requestAnimationFrame(() => {
                        document.head.removeChild(w);
                      });
                    });
                }
              );
            }
          };
        return C;
      }
      var ev =
          ((I = 'chakra-ui-color-mode'),
          {
            ssr: !1,
            type: 'localStorage',
            get(w) {
              let S;
              if (!(null == globalThis ? void 0 : globalThis.document)) return w;
              try {
                S = localStorage.getItem(I) || w;
              } catch (w) {}
              return S || w;
            },
            set(w) {
              try {
                localStorage.setItem(I, w);
              } catch (w) {}
            }
          }),
        eb = C(67673),
        noop = () => {};
      function getTheme(w, S) {
        return 'cookie' === w.type && w.ssr ? w.get(S) : S;
      }
      function ColorModeProvider(w) {
        let {
            value: S,
            children: C,
            options: { useSystemColorMode: I, initialColorMode: $, disableTransitionOnChange: en } = {},
            colorModeManager: ei = ev
          } = w,
          eo = 'dark' === $ ? 'dark' : 'light',
          [es, el] = (0, eu.useState)(() => getTheme(ei, eo)),
          [ed, eh] = (0, eu.useState)(() => getTheme(ei)),
          {
            getSystemTheme: ef,
            setClassName: ep,
            setDataset: em,
            addListener: eg
          } = (0, eu.useMemo)(() => getColorModeUtils({ preventTransition: en }), [en]),
          ey = 'system' !== $ || es ? es : ed,
          e_ = (0, eu.useCallback)(
            (w) => {
              let S = 'system' === w ? ef() : w;
              el(S), ep('dark' === S), em(S), ei.set(S);
            },
            [ei, ef, ep, em]
          );
        (0, eb.G)(() => {
          'system' === $ && eh(ef());
        }, []),
          (0, eu.useEffect)(() => {
            let w = ei.get();
            if (w) {
              e_(w);
              return;
            }
            if ('system' === $) {
              e_('system');
              return;
            }
            e_(eo);
          }, [ei, eo, $, e_]);
        let ex = (0, eu.useCallback)(() => {
          e_('dark' === ey ? 'light' : 'dark');
        }, [ey, e_]);
        (0, eu.useEffect)(() => {
          if (I) return eg(e_);
        }, [I, eg, e_]);
        let ew = (0, eu.useMemo)(
          () => ({
            colorMode: null != S ? S : ey,
            toggleColorMode: S ? noop : ex,
            setColorMode: S ? noop : e_,
            forced: void 0 !== S
          }),
          [ey, ex, e_, S]
        );
        return (0, er.jsx)(ec.kc.Provider, { value: ew, children: C });
      }
      ColorModeProvider.displayName = 'ColorModeProvider';
      var e_ = (0, eu.createContext)({ getDocument: () => document, getWindow: () => window });
      function EnvironmentProvider(w) {
        let { children: S, environment: C, disabled: I } = w,
          $ = (0, eu.useRef)(null),
          en = (0, eu.useMemo)(
            () =>
              C || {
                getDocument: () => {
                  var w, S;
                  return null != (S = null == (w = $.current) ? void 0 : w.ownerDocument) ? S : document;
                },
                getWindow: () => {
                  var w, S;
                  return null != (S = null == (w = $.current) ? void 0 : w.ownerDocument.defaultView) ? S : window;
                }
              },
            [C]
          ),
          ei = !I || !C;
        return (0, er.jsxs)(e_.Provider, {
          value: en,
          children: [S, ei && (0, er.jsx)('span', { id: '__chakra_env', hidden: !0, ref: $ })]
        });
      }
      (e_.displayName = 'EnvironmentContext'), (EnvironmentProvider.displayName = 'EnvironmentProvider');
      var ChakraProvider = (w) => {
          let {
              children: S,
              colorModeManager: C,
              portalZIndex: I,
              resetScope: $,
              resetCSS: en = !0,
              theme: ei = {},
              environment: eo,
              cssVarsRoot: es,
              disableEnvironment: el,
              disableGlobalStyle: ec
            } = w,
            eu = (0, er.jsx)(EnvironmentProvider, { environment: eo, disabled: el, children: S });
          return (0, er.jsx)(ThemeProvider, {
            theme: ei,
            cssVarsRoot: es,
            children: (0, er.jsxs)(ColorModeProvider, {
              colorModeManager: C,
              options: ei.config,
              children: [
                en ? (0, er.jsx)(CSSReset, { scope: $ }) : (0, er.jsx)(CSSPolyfill, {}),
                !ec && (0, er.jsx)(GlobalStyle, {}),
                I ? (0, er.jsx)(PortalManager, { zIndex: I, children: eu }) : eu
              ]
            })
          });
        },
        ex = C(62952),
        findById = (w, S) => w.find((w) => w.id === S);
      function findToast(w, S) {
        let C = getToastPosition(w, S),
          I = C ? w[C].findIndex((w) => w.id === S) : -1;
        return { position: C, index: I };
      }
      function getToastPosition(w, S) {
        for (let [C, I] of Object.entries(w)) if (findById(I, S)) return C;
      }
      function getToastStyle(w) {
        let S = w.includes('right'),
          C = w.includes('left'),
          I = 'center';
        return (
          S && (I = 'flex-end'), C && (I = 'flex-start'), { display: 'flex', flexDirection: 'column', alignItems: I }
        );
      }
      function getToastListStyle(w) {
        let S = w.includes('top') ? 'env(safe-area-inset-top, 0px)' : void 0,
          C = w.includes('bottom') ? 'env(safe-area-inset-bottom, 0px)' : void 0,
          I = w.includes('left') ? void 0 : 'env(safe-area-inset-right, 0px)',
          $ = w.includes('right') ? void 0 : 'env(safe-area-inset-left, 0px)';
        return {
          position: 'fixed',
          zIndex: 'var(--toast-z-index, 5500)',
          pointerEvents: 'none',
          display: 'flex',
          flexDirection: 'column',
          margin: 'top' === w || 'bottom' === w ? '0 auto' : void 0,
          top: S,
          bottom: C,
          right: I,
          left: $
        };
      }
      function useCallbackRef(w, S = []) {
        let C = (0, eu.useRef)(w);
        return (
          (0, eu.useEffect)(() => {
            C.current = w;
          }),
          (0, eu.useCallback)((...w) => {
            var S;
            return null == (S = C.current) ? void 0 : S.call(C, ...w);
          }, S)
        );
      }
      function useTimeout(w, S) {
        let C = useCallbackRef(w);
        (0, eu.useEffect)(() => {
          if (null == S) return;
          let w = null;
          return (
            (w = window.setTimeout(() => {
              C();
            }, S)),
            () => {
              w && window.clearTimeout(w);
            }
          );
        }, [S, C]);
      }
      function useUpdateEffect(w, S) {
        let C = (0, eu.useRef)(!1),
          I = (0, eu.useRef)(!1);
        (0, eu.useEffect)(() => {
          let S = C.current,
            $ = S && I.current;
          if ($) return w();
          I.current = !0;
        }, S),
          (0, eu.useEffect)(
            () => (
              (C.current = !0),
              () => {
                C.current = !1;
              }
            ),
            []
          );
      }
      var ew = C(16465);
      let ek = (0, eu.createContext)(null);
      function usePresence() {
        let w = (0, eu.useContext)(ek);
        if (null === w) return [!0, null];
        let { isPresent: S, onExitComplete: C, register: I } = w,
          $ = (0, eu.useId)();
        return (0, eu.useEffect)(() => I($), []), !S && C ? [!1, () => C && C($)] : [!0];
      }
      function useIsPresent() {
        return isPresent((0, eu.useContext)(ek));
      }
      function isPresent(w) {
        return null === w || w.isPresent;
      }
      let eS = (0, eu.createContext)({ transformPagePoint: (w) => w, isStatic: !1, reducedMotion: 'never' }),
        eC = (0, eu.createContext)({}),
        eP = 'undefined' != typeof document,
        eA = eP ? eu.useLayoutEffect : eu.useEffect,
        eT = (0, eu.createContext)({ strict: !1 });
      function useVisualElement(w, S, C, I) {
        let { visualElement: $ } = (0, eu.useContext)(eC),
          er = (0, eu.useContext)(eT),
          en = (0, eu.useContext)(ek),
          ei = (0, eu.useContext)(eS).reducedMotion,
          eo = (0, eu.useRef)();
        (I = I || er.renderer),
          !eo.current &&
            I &&
            (eo.current = I(w, {
              visualState: S,
              parent: $,
              props: C,
              presenceContext: en,
              blockInitialAnimation: !!en && !1 === en.initial,
              reducedMotionConfig: ei
            }));
        let es = eo.current;
        (0, eu.useInsertionEffect)(() => {
          es && es.update(C, en);
        });
        let el = (0, eu.useRef)(!!window.HandoffAppearAnimations);
        return (
          eA(() => {
            es && (es.render(), el.current && es.animationState && es.animationState.animateChanges());
          }),
          (0, eu.useEffect)(() => {
            es &&
              (es.updateFeatures(),
              !el.current && es.animationState && es.animationState.animateChanges(),
              (window.HandoffAppearAnimations = void 0),
              (el.current = !1));
          }),
          es
        );
      }
      function isRefObject(w) {
        return 'object' == typeof w && Object.prototype.hasOwnProperty.call(w, 'current');
      }
      function useMotionRef(w, S, C) {
        return (0, eu.useCallback)(
          (I) => {
            I && w.mount && w.mount(I),
              S && (I ? S.mount(I) : S.unmount()),
              C && ('function' == typeof C ? C(I) : isRefObject(C) && (C.current = I));
          },
          [S]
        );
      }
      function isVariantLabel(w) {
        return 'string' == typeof w || Array.isArray(w);
      }
      function isAnimationControls(w) {
        return 'object' == typeof w && 'function' == typeof w.start;
      }
      let eE = ['animate', 'whileInView', 'whileFocus', 'whileHover', 'whileTap', 'whileDrag', 'exit'],
        ez = ['initial', ...eE];
      function isControllingVariants(w) {
        return isAnimationControls(w.animate) || ez.some((S) => isVariantLabel(w[S]));
      }
      function isVariantNode(w) {
        return !!(isControllingVariants(w) || w.variants);
      }
      function getCurrentTreeVariants(w, S) {
        if (isControllingVariants(w)) {
          let { initial: S, animate: C } = w;
          return { initial: !1 === S || isVariantLabel(S) ? S : void 0, animate: isVariantLabel(C) ? C : void 0 };
        }
        return !1 !== w.inherit ? S : {};
      }
      function useCreateMotionContext(w) {
        let { initial: S, animate: C } = getCurrentTreeVariants(w, (0, eu.useContext)(eC));
        return (0, eu.useMemo)(
          () => ({ initial: S, animate: C }),
          [variantLabelsAsDependency(S), variantLabelsAsDependency(C)]
        );
      }
      function variantLabelsAsDependency(w) {
        return Array.isArray(w) ? w.join(' ') : w;
      }
      let eI = {
          animation: [
            'animate',
            'variants',
            'whileHover',
            'whileTap',
            'exit',
            'whileInView',
            'whileFocus',
            'whileDrag'
          ],
          exit: ['exit'],
          drag: ['drag', 'dragControls'],
          focus: ['whileFocus'],
          hover: ['whileHover', 'onHoverStart', 'onHoverEnd'],
          tap: ['whileTap', 'onTap', 'onTapStart', 'onTapCancel'],
          pan: ['onPan', 'onPanStart', 'onPanSessionStart', 'onPanEnd'],
          inView: ['whileInView', 'onViewportEnter', 'onViewportLeave'],
          layout: ['layout', 'layoutId']
        },
        eB = {};
      for (let w in eI) eB[w] = { isEnabled: (S) => eI[w].some((w) => !!S[w]) };
      function loadFeatures(w) {
        for (let S in w) eB[S] = { ...eB[S], ...w[S] };
      }
      let eR = (0, eu.createContext)({}),
        eO = (0, eu.createContext)({}),
        eM = Symbol.for('motionComponentSymbol');
      function motion_createMotionComponent({
        preloadedFeatures: w,
        createVisualElement: S,
        useRender: C,
        useVisualState: I,
        Component: $
      }) {
        function MotionComponent(er, en) {
          let ei;
          let eo = { ...(0, eu.useContext)(eS), ...er, layoutId: useLayoutId(er) },
            { isStatic: es } = eo,
            el = useCreateMotionContext(er),
            ec = I(er, es);
          if (!es && eP) {
            el.visualElement = useVisualElement($, ec, eo, S);
            let C = (0, eu.useContext)(eO),
              I = (0, eu.useContext)(eT).strict;
            el.visualElement && (ei = el.visualElement.loadFeatures(eo, I, w, C));
          }
          return eu.createElement(
            eC.Provider,
            { value: el },
            ei && el.visualElement ? eu.createElement(ei, { visualElement: el.visualElement, ...eo }) : null,
            C($, er, useMotionRef(ec, el.visualElement, en), ec, es, el.visualElement)
          );
        }
        w && loadFeatures(w);
        let er = (0, eu.forwardRef)(MotionComponent);
        return (er[eM] = $), er;
      }
      function useLayoutId({ layoutId: w }) {
        let S = (0, eu.useContext)(eR).id;
        return S && void 0 !== w ? S + '-' + w : w;
      }
      function createMotionProxy(w) {
        function custom(S, C = {}) {
          return motion_createMotionComponent(w(S, C));
        }
        if ('undefined' == typeof Proxy) return custom;
        let S = new Map();
        return new Proxy(custom, { get: (w, C) => (S.has(C) || S.set(C, custom(C)), S.get(C)) });
      }
      let eD = [
        'animate',
        'circle',
        'defs',
        'desc',
        'ellipse',
        'g',
        'image',
        'line',
        'filter',
        'marker',
        'mask',
        'metadata',
        'path',
        'pattern',
        'polygon',
        'polyline',
        'rect',
        'stop',
        'switch',
        'symbol',
        'svg',
        'text',
        'tspan',
        'use',
        'view'
      ];
      function isSVGComponent(w) {
        if ('string' != typeof w || w.includes('-'));
        else if (eD.indexOf(w) > -1 || /[A-Z]/.test(w)) return !0;
        return !1;
      }
      let ej = {};
      function addScaleCorrector(w) {
        Object.assign(ej, w);
      }
      let eL = [
          'transformPerspective',
          'x',
          'y',
          'z',
          'translateX',
          'translateY',
          'translateZ',
          'scale',
          'scaleX',
          'scaleY',
          'rotate',
          'rotateX',
          'rotateY',
          'rotateZ',
          'skew',
          'skewX',
          'skewY'
        ],
        eF = new Set(eL);
      function isForcedMotionValue(w, { layout: S, layoutId: C }) {
        return eF.has(w) || w.startsWith('origin') || ((S || void 0 !== C) && (!!ej[w] || 'opacity' === w));
      }
      let isMotionValue = (w) => !!(w && w.getVelocity),
        eV = { x: 'translateX', y: 'translateY', z: 'translateZ', transformPerspective: 'perspective' },
        eN = eL.length;
      function buildTransform(w, { enableHardwareAcceleration: S = !0, allowTransformNone: C = !0 }, I, $) {
        let er = '';
        for (let S = 0; S < eN; S++) {
          let C = eL[S];
          if (void 0 !== w[C]) {
            let S = eV[C] || C;
            er += `${S}(${w[C]}) `;
          }
        }
        return (
          S && !w.z && (er += 'translateZ(0)'),
          (er = er.trim()),
          $ ? (er = $(w, I ? '' : er)) : C && I && (er = 'none'),
          er
        );
      }
      let checkStringStartsWith = (w) => (S) => 'string' == typeof S && S.startsWith(w),
        eU = checkStringStartsWith('--'),
        e$ = checkStringStartsWith('var(--'),
        getValueAsType = (w, S) => (S && 'number' == typeof w ? S.transform(w) : w),
        clamp = (w, S, C) => Math.min(Math.max(C, w), S),
        eW = { test: (w) => 'number' == typeof w, parse: parseFloat, transform: (w) => w },
        eG = { ...eW, transform: (w) => clamp(0, 1, w) },
        eH = { ...eW, default: 1 },
        sanitize = (w) => Math.round(1e5 * w) / 1e5,
        eZ = /(-)?([\d]*\.?[\d])+/g,
        eY = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,
        eK = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;
      function isString(w) {
        return 'string' == typeof w;
      }
      let createUnitType = (w) => ({
          test: (S) => isString(S) && S.endsWith(w) && 1 === S.split(' ').length,
          parse: parseFloat,
          transform: (S) => `${S}${w}`
        }),
        eX = createUnitType('deg'),
        eJ = createUnitType('%'),
        eQ = createUnitType('px'),
        e0 = createUnitType('vh'),
        e1 = createUnitType('vw'),
        e2 = { ...eJ, parse: (w) => eJ.parse(w) / 100, transform: (w) => eJ.transform(100 * w) },
        e5 = { ...eW, transform: Math.round },
        e3 = {
          borderWidth: eQ,
          borderTopWidth: eQ,
          borderRightWidth: eQ,
          borderBottomWidth: eQ,
          borderLeftWidth: eQ,
          borderRadius: eQ,
          radius: eQ,
          borderTopLeftRadius: eQ,
          borderTopRightRadius: eQ,
          borderBottomRightRadius: eQ,
          borderBottomLeftRadius: eQ,
          width: eQ,
          maxWidth: eQ,
          height: eQ,
          maxHeight: eQ,
          size: eQ,
          top: eQ,
          right: eQ,
          bottom: eQ,
          left: eQ,
          padding: eQ,
          paddingTop: eQ,
          paddingRight: eQ,
          paddingBottom: eQ,
          paddingLeft: eQ,
          margin: eQ,
          marginTop: eQ,
          marginRight: eQ,
          marginBottom: eQ,
          marginLeft: eQ,
          rotate: eX,
          rotateX: eX,
          rotateY: eX,
          rotateZ: eX,
          scale: eH,
          scaleX: eH,
          scaleY: eH,
          scaleZ: eH,
          skew: eX,
          skewX: eX,
          skewY: eX,
          distance: eQ,
          translateX: eQ,
          translateY: eQ,
          translateZ: eQ,
          x: eQ,
          y: eQ,
          z: eQ,
          perspective: eQ,
          transformPerspective: eQ,
          opacity: eG,
          originX: e2,
          originY: e2,
          originZ: eQ,
          zIndex: e5,
          fillOpacity: eG,
          strokeOpacity: eG,
          numOctaves: e5
        };
      function buildHTMLStyles(w, S, C, I) {
        let { style: $, vars: er, transform: en, transformOrigin: ei } = w,
          eo = !1,
          es = !1,
          el = !0;
        for (let w in S) {
          let C = S[w];
          if (eU(w)) {
            er[w] = C;
            continue;
          }
          let I = e3[w],
            ec = getValueAsType(C, I);
          if (eF.has(w)) {
            if (((eo = !0), (en[w] = ec), !el)) continue;
            C !== (I.default || 0) && (el = !1);
          } else w.startsWith('origin') ? ((es = !0), (ei[w] = ec)) : ($[w] = ec);
        }
        if (
          (!S.transform &&
            (eo || I ? ($.transform = buildTransform(w.transform, C, el, I)) : $.transform && ($.transform = 'none')),
          es)
        ) {
          let { originX: w = '50%', originY: S = '50%', originZ: C = 0 } = ei;
          $.transformOrigin = `${w} ${S} ${C}`;
        }
      }
      let createHtmlRenderState = () => ({ style: {}, transform: {}, transformOrigin: {}, vars: {} });
      function copyRawValuesOnly(w, S, C) {
        for (let I in S) isMotionValue(S[I]) || isForcedMotionValue(I, C) || (w[I] = S[I]);
      }
      function useInitialMotionValues({ transformTemplate: w }, S, C) {
        return (0, eu.useMemo)(() => {
          let I = createHtmlRenderState();
          return buildHTMLStyles(I, S, { enableHardwareAcceleration: !C }, w), Object.assign({}, I.vars, I.style);
        }, [S]);
      }
      function useStyle(w, S, C) {
        let I = w.style || {},
          $ = {};
        return (
          copyRawValuesOnly($, I, w),
          Object.assign($, useInitialMotionValues(w, S, C)),
          w.transformValues ? w.transformValues($) : $
        );
      }
      function useHTMLProps(w, S, C) {
        let I = {},
          $ = useStyle(w, S, C);
        return (
          w.drag &&
            !1 !== w.dragListener &&
            ((I.draggable = !1),
            ($.userSelect = $.WebkitUserSelect = $.WebkitTouchCallout = 'none'),
            ($.touchAction = !0 === w.drag ? 'none' : `pan-${'x' === w.drag ? 'y' : 'x'}`)),
          void 0 === w.tabIndex && (w.onTap || w.onTapStart || w.whileTap) && (I.tabIndex = 0),
          (I.style = $),
          I
        );
      }
      let e4 = new Set([
        'animate',
        'exit',
        'variants',
        'initial',
        'style',
        'values',
        'variants',
        'transition',
        'transformTemplate',
        'transformValues',
        'custom',
        'inherit',
        'onLayoutAnimationStart',
        'onLayoutAnimationComplete',
        'onLayoutMeasure',
        'onBeforeLayoutMeasure',
        'onAnimationStart',
        'onAnimationComplete',
        'onUpdate',
        'onDragStart',
        'onDrag',
        'onDragEnd',
        'onMeasureDragConstraints',
        'onDirectionLock',
        'onDragTransitionEnd',
        '_dragX',
        '_dragY',
        'onHoverStart',
        'onHoverEnd',
        'onViewportEnter',
        'onViewportLeave',
        'ignoreStrict',
        'viewport'
      ]);
      function isValidMotionProp(w) {
        return (
          w.startsWith('while') ||
          (w.startsWith('drag') && 'draggable' !== w) ||
          w.startsWith('layout') ||
          w.startsWith('onTap') ||
          w.startsWith('onPan') ||
          e4.has(w)
        );
      }
      let shouldForward = (w) => !isValidMotionProp(w);
      function loadExternalIsValidProp(w) {
        w && (shouldForward = (S) => (S.startsWith('on') ? !isValidMotionProp(S) : w(S)));
      }
      try {
        loadExternalIsValidProp(require('@emotion/is-prop-valid').default);
      } catch (w) {}
      function filterProps(w, S, C) {
        let I = {};
        for (let $ in w)
          ('values' !== $ || 'object' != typeof w.values) &&
            (shouldForward($) ||
              (!0 === C && isValidMotionProp($)) ||
              (!S && !isValidMotionProp($)) ||
              (w.draggable && $.startsWith('onDrag'))) &&
            (I[$] = w[$]);
        return I;
      }
      function calcOrigin(w, S, C) {
        return 'string' == typeof w ? w : eQ.transform(S + C * w);
      }
      function calcSVGTransformOrigin(w, S, C) {
        let I = calcOrigin(S, w.x, w.width),
          $ = calcOrigin(C, w.y, w.height);
        return `${I} ${$}`;
      }
      let e6 = { offset: 'stroke-dashoffset', array: 'stroke-dasharray' },
        e8 = { offset: 'strokeDashoffset', array: 'strokeDasharray' };
      function buildSVGPath(w, S, C = 1, I = 0, $ = !0) {
        w.pathLength = 1;
        let er = $ ? e6 : e8;
        w[er.offset] = eQ.transform(-I);
        let en = eQ.transform(S),
          ei = eQ.transform(C);
        w[er.array] = `${en} ${ei}`;
      }
      function buildSVGAttrs(
        w,
        {
          attrX: S,
          attrY: C,
          attrScale: I,
          originX: $,
          originY: er,
          pathLength: en,
          pathSpacing: ei = 1,
          pathOffset: eo = 0,
          ...es
        },
        el,
        ec,
        eu
      ) {
        if ((buildHTMLStyles(w, es, el, eu), ec)) {
          w.style.viewBox && (w.attrs.viewBox = w.style.viewBox);
          return;
        }
        (w.attrs = w.style), (w.style = {});
        let { attrs: ed, style: eh, dimensions: ef } = w;
        ed.transform && (ef && (eh.transform = ed.transform), delete ed.transform),
          ef &&
            (void 0 !== $ || void 0 !== er || eh.transform) &&
            (eh.transformOrigin = calcSVGTransformOrigin(ef, void 0 !== $ ? $ : 0.5, void 0 !== er ? er : 0.5)),
          void 0 !== S && (ed.x = S),
          void 0 !== C && (ed.y = C),
          void 0 !== I && (ed.scale = I),
          void 0 !== en && buildSVGPath(ed, en, ei, eo, !1);
      }
      let createSvgRenderState = () => ({ ...createHtmlRenderState(), attrs: {} }),
        isSVGTag = (w) => 'string' == typeof w && 'svg' === w.toLowerCase();
      function useSVGProps(w, S, C, I) {
        let $ = (0, eu.useMemo)(() => {
          let C = createSvgRenderState();
          return (
            buildSVGAttrs(C, S, { enableHardwareAcceleration: !1 }, isSVGTag(I), w.transformTemplate),
            { ...C.attrs, style: { ...C.style } }
          );
        }, [S]);
        if (w.style) {
          let S = {};
          copyRawValuesOnly(S, w.style, w), ($.style = { ...S, ...$.style });
        }
        return $;
      }
      function createUseRender(w = !1) {
        return (S, C, I, { latestValues: $ }, er) => {
          let en = isSVGComponent(S) ? useSVGProps : useHTMLProps,
            ei = en(C, $, er, S),
            eo = filterProps(C, 'string' == typeof S, w),
            es = { ...eo, ...ei, ref: I },
            { children: el } = C,
            ec = (0, eu.useMemo)(() => (isMotionValue(el) ? el.get() : el), [el]);
          return (0, eu.createElement)(S, { ...es, children: ec });
        };
      }
      let camelToDash = (w) => w.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      function renderHTML(w, { style: S, vars: C }, I, $) {
        for (let er in (Object.assign(w.style, S, $ && $.getProjectionStyles(I)), C)) w.style.setProperty(er, C[er]);
      }
      let e9 = new Set([
        'baseFrequency',
        'diffuseConstant',
        'kernelMatrix',
        'kernelUnitLength',
        'keySplines',
        'keyTimes',
        'limitingConeAngle',
        'markerHeight',
        'markerWidth',
        'numOctaves',
        'targetX',
        'targetY',
        'surfaceScale',
        'specularConstant',
        'specularExponent',
        'stdDeviation',
        'tableValues',
        'viewBox',
        'gradientTransform',
        'pathLength',
        'startOffset',
        'textLength',
        'lengthAdjust'
      ]);
      function renderSVG(w, S, C, I) {
        for (let C in (renderHTML(w, S, void 0, I), S.attrs))
          w.setAttribute(e9.has(C) ? C : camelToDash(C), S.attrs[C]);
      }
      function scrapeMotionValuesFromProps(w, S) {
        let { style: C } = w,
          I = {};
        for (let $ in C)
          (isMotionValue(C[$]) || (S.style && isMotionValue(S.style[$])) || isForcedMotionValue($, w)) && (I[$] = C[$]);
        return I;
      }
      function scrape_motion_values_scrapeMotionValuesFromProps(w, S) {
        let C = scrapeMotionValuesFromProps(w, S);
        for (let I in w)
          if (isMotionValue(w[I]) || isMotionValue(S[I])) {
            let S = -1 !== eL.indexOf(I) ? 'attr' + I.charAt(0).toUpperCase() + I.substring(1) : I;
            C[S] = w[I];
          }
        return C;
      }
      function resolveVariantFromProps(w, S, C, I = {}, $ = {}) {
        return (
          'function' == typeof S && (S = S(void 0 !== C ? C : w.custom, I, $)),
          'string' == typeof S && (S = w.variants && w.variants[S]),
          'function' == typeof S && (S = S(void 0 !== C ? C : w.custom, I, $)),
          S
        );
      }
      function useConstant(w) {
        let S = (0, eu.useRef)(null);
        return null === S.current && (S.current = w()), S.current;
      }
      let isKeyframesTarget = (w) => Array.isArray(w),
        isCustomValue = (w) => !!(w && 'object' == typeof w && w.mix && w.toValue),
        resolveFinalValueInKeyframes = (w) => (isKeyframesTarget(w) ? w[w.length - 1] || 0 : w);
      function resolveMotionValue(w) {
        let S = isMotionValue(w) ? w.get() : w;
        return isCustomValue(S) ? S.toValue() : S;
      }
      function makeState({ scrapeMotionValuesFromProps: w, createRenderState: S, onMount: C }, I, $, er) {
        let en = { latestValues: makeLatestValues(I, $, er, w), renderState: S() };
        return C && (en.mount = (w) => C(I, w, en)), en;
      }
      let makeUseVisualState = (w) => (S, C) => {
        let I = (0, eu.useContext)(eC),
          $ = (0, eu.useContext)(ek),
          make = () => makeState(w, S, I, $);
        return C ? make() : useConstant(make);
      };
      function makeLatestValues(w, S, C, I) {
        let $ = {},
          er = I(w, {});
        for (let w in er) $[w] = resolveMotionValue(er[w]);
        let { initial: en, animate: ei } = w,
          eo = isControllingVariants(w),
          es = isVariantNode(w);
        S && es && !eo && !1 !== w.inherit && (void 0 === en && (en = S.initial), void 0 === ei && (ei = S.animate));
        let el = !!C && !1 === C.initial;
        el = el || !1 === en;
        let ec = el ? ei : en;
        if (ec && 'boolean' != typeof ec && !isAnimationControls(ec)) {
          let S = Array.isArray(ec) ? ec : [ec];
          S.forEach((S) => {
            let C = resolveVariantFromProps(w, S);
            if (!C) return;
            let { transitionEnd: I, transition: er, ...en } = C;
            for (let w in en) {
              let S = en[w];
              if (Array.isArray(S)) {
                let w = el ? S.length - 1 : 0;
                S = S[w];
              }
              null !== S && ($[w] = S);
            }
            for (let w in I) $[w] = I[w];
          });
        }
        return $;
      }
      let noop_noop = (w) => w;
      let Queue = class Queue {
        constructor() {
          (this.order = []), (this.scheduled = new Set());
        }
        add(w) {
          if (!this.scheduled.has(w)) return this.scheduled.add(w), this.order.push(w), !0;
        }
        remove(w) {
          let S = this.order.indexOf(w);
          -1 !== S && (this.order.splice(S, 1), this.scheduled.delete(w));
        }
        clear() {
          (this.order.length = 0), this.scheduled.clear();
        }
      };
      function createRenderStep(w) {
        let S = new Queue(),
          C = new Queue(),
          I = 0,
          $ = !1,
          er = !1,
          en = new WeakSet(),
          ei = {
            schedule: (w, er = !1, ei = !1) => {
              let eo = ei && $,
                es = eo ? S : C;
              return er && en.add(w), es.add(w) && eo && $ && (I = S.order.length), w;
            },
            cancel: (w) => {
              C.remove(w), en.delete(w);
            },
            process: (eo) => {
              if ($) {
                er = !0;
                return;
              }
              if ((($ = !0), ([S, C] = [C, S]), C.clear(), (I = S.order.length)))
                for (let C = 0; C < I; C++) {
                  let I = S.order[C];
                  I(eo), en.has(I) && (ei.schedule(I), w());
                }
              ($ = !1), er && ((er = !1), ei.process(eo));
            }
          };
        return ei;
      }
      let e7 = ['prepare', 'read', 'update', 'preRender', 'render', 'postRender'];
      function createRenderBatcher(w, S) {
        let C = !1,
          I = !0,
          $ = { delta: 0, timestamp: 0, isProcessing: !1 },
          er = e7.reduce((w, S) => ((w[S] = createRenderStep(() => (C = !0))), w), {}),
          processStep = (w) => er[w].process($),
          processBatch = () => {
            let er = performance.now();
            (C = !1),
              ($.delta = I ? 1e3 / 60 : Math.max(Math.min(er - $.timestamp, 40), 1)),
              ($.timestamp = er),
              ($.isProcessing = !0),
              e7.forEach(processStep),
              ($.isProcessing = !1),
              C && S && ((I = !1), w(processBatch));
          },
          wake = () => {
            (C = !0), (I = !0), $.isProcessing || w(processBatch);
          },
          en = e7.reduce((w, S) => {
            let I = er[S];
            return (w[S] = (w, S = !1, $ = !1) => (C || wake(), I.schedule(w, S, $))), w;
          }, {});
        return { schedule: en, cancel: (w) => e7.forEach((S) => er[S].cancel(w)), state: $, steps: er };
      }
      let {
          schedule: tr,
          cancel: tn,
          state: ti,
          steps: ta
        } = createRenderBatcher('undefined' != typeof requestAnimationFrame ? requestAnimationFrame : noop_noop, !0),
        to = {
          useVisualState: makeUseVisualState({
            scrapeMotionValuesFromProps: scrape_motion_values_scrapeMotionValuesFromProps,
            createRenderState: createSvgRenderState,
            onMount: (w, S, { renderState: C, latestValues: I }) => {
              tr.read(() => {
                try {
                  C.dimensions = 'function' == typeof S.getBBox ? S.getBBox() : S.getBoundingClientRect();
                } catch (w) {
                  C.dimensions = { x: 0, y: 0, width: 0, height: 0 };
                }
              }),
                tr.render(() => {
                  buildSVGAttrs(C, I, { enableHardwareAcceleration: !1 }, isSVGTag(S.tagName), w.transformTemplate),
                    renderSVG(S, C);
                });
            }
          })
        },
        ts = {
          useVisualState: makeUseVisualState({
            scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,
            createRenderState: createHtmlRenderState
          })
        };
      function create_config_createDomMotionConfig(w, { forwardMotionProps: S = !1 }, C, I) {
        let $ = isSVGComponent(w) ? to : ts;
        return { ...$, preloadedFeatures: C, useRender: createUseRender(S), createVisualElement: I, Component: w };
      }
      function addDomEvent(w, S, C, I = { passive: !0 }) {
        return w.addEventListener(S, C, I), () => w.removeEventListener(S, C);
      }
      let isPrimaryPointer = (w) =>
        'mouse' === w.pointerType ? 'number' != typeof w.button || w.button <= 0 : !1 !== w.isPrimary;
      function extractEventInfo(w, S = 'page') {
        return { point: { x: w[S + 'X'], y: w[S + 'Y'] } };
      }
      let addPointerInfo = (w) => (S) => isPrimaryPointer(S) && w(S, extractEventInfo(S));
      function addPointerEvent(w, S, C, I) {
        return addDomEvent(w, S, addPointerInfo(C), I);
      }
      let combineFunctions = (w, S) => (C) => S(w(C)),
        pipe = (...w) => w.reduce(combineFunctions);
      function createLock(w) {
        let S = null;
        return () =>
          null === S &&
          ((S = w),
          () => {
            S = null;
          });
      }
      let tl = createLock('dragHorizontal'),
        tc = createLock('dragVertical');
      function getGlobalLock(w) {
        let S = !1;
        if ('y' === w) S = tc();
        else if ('x' === w) S = tl();
        else {
          let w = tl(),
            C = tc();
          w && C
            ? (S = () => {
                w(), C();
              })
            : (w && w(), C && C());
        }
        return S;
      }
      function isDragActive() {
        let w = getGlobalLock(!0);
        return !w || (w(), !1);
      }
      let Feature = class Feature {
        constructor(w) {
          (this.isMounted = !1), (this.node = w);
        }
        update() {}
      };
      function addHoverEvent(w, S) {
        let C = 'pointer' + (S ? 'enter' : 'leave'),
          I = 'onHover' + (S ? 'Start' : 'End');
        return addPointerEvent(
          w.current,
          C,
          (C, $) => {
            if ('touch' === C.type || isDragActive()) return;
            let er = w.getProps();
            w.animationState && er.whileHover && w.animationState.setActive('whileHover', S),
              er[I] && tr.update(() => er[I](C, $));
          },
          { passive: !w.getProps()[I] }
        );
      }
      let HoverGesture = class HoverGesture extends Feature {
        mount() {
          this.unmount = pipe(addHoverEvent(this.node, !0), addHoverEvent(this.node, !1));
        }
        unmount() {}
      };
      let FocusGesture = class FocusGesture extends Feature {
        constructor() {
          super(...arguments), (this.isActive = !1);
        }
        onFocus() {
          let w = !1;
          try {
            w = this.node.current.matches(':focus-visible');
          } catch (S) {
            w = !0;
          }
          w && this.node.animationState && (this.node.animationState.setActive('whileFocus', !0), (this.isActive = !0));
        }
        onBlur() {
          this.isActive &&
            this.node.animationState &&
            (this.node.animationState.setActive('whileFocus', !1), (this.isActive = !1));
        }
        mount() {
          this.unmount = pipe(
            addDomEvent(this.node.current, 'focus', () => this.onFocus()),
            addDomEvent(this.node.current, 'blur', () => this.onBlur())
          );
        }
        unmount() {}
      };
      let isNodeOrChild = (w, S) => !!S && (w === S || isNodeOrChild(w, S.parentElement));
      function fireSyntheticPointerEvent(w, S) {
        if (!S) return;
        let C = new PointerEvent('pointer' + w);
        S(C, extractEventInfo(C));
      }
      let PressGesture = class PressGesture extends Feature {
        constructor() {
          super(...arguments),
            (this.removeStartListeners = noop_noop),
            (this.removeEndListeners = noop_noop),
            (this.removeAccessibleListeners = noop_noop),
            (this.startPointerPress = (w, S) => {
              if ((this.removeEndListeners(), this.isPressing)) return;
              let C = this.node.getProps(),
                I = addPointerEvent(
                  window,
                  'pointerup',
                  (w, S) => {
                    if (!this.checkPressEnd()) return;
                    let { onTap: C, onTapCancel: I } = this.node.getProps();
                    tr.update(() => {
                      isNodeOrChild(this.node.current, w.target) ? C && C(w, S) : I && I(w, S);
                    });
                  },
                  { passive: !(C.onTap || C.onPointerUp) }
                ),
                $ = addPointerEvent(window, 'pointercancel', (w, S) => this.cancelPress(w, S), {
                  passive: !(C.onTapCancel || C.onPointerCancel)
                });
              (this.removeEndListeners = pipe(I, $)), this.startPress(w, S);
            }),
            (this.startAccessiblePress = () => {
              let w = addDomEvent(this.node.current, 'keydown', (w) => {
                  'Enter' !== w.key ||
                    this.isPressing ||
                    (this.removeEndListeners(),
                    (this.removeEndListeners = addDomEvent(this.node.current, 'keyup', (w) => {
                      'Enter' === w.key &&
                        this.checkPressEnd() &&
                        fireSyntheticPointerEvent('up', (w, S) => {
                          let { onTap: C } = this.node.getProps();
                          C && tr.update(() => C(w, S));
                        });
                    })),
                    fireSyntheticPointerEvent('down', (w, S) => {
                      this.startPress(w, S);
                    }));
                }),
                S = addDomEvent(this.node.current, 'blur', () => {
                  this.isPressing && fireSyntheticPointerEvent('cancel', (w, S) => this.cancelPress(w, S));
                });
              this.removeAccessibleListeners = pipe(w, S);
            });
        }
        startPress(w, S) {
          this.isPressing = !0;
          let { onTapStart: C, whileTap: I } = this.node.getProps();
          I && this.node.animationState && this.node.animationState.setActive('whileTap', !0),
            C && tr.update(() => C(w, S));
        }
        checkPressEnd() {
          this.removeEndListeners(), (this.isPressing = !1);
          let w = this.node.getProps();
          return (
            w.whileTap && this.node.animationState && this.node.animationState.setActive('whileTap', !1),
            !isDragActive()
          );
        }
        cancelPress(w, S) {
          if (!this.checkPressEnd()) return;
          let { onTapCancel: C } = this.node.getProps();
          C && tr.update(() => C(w, S));
        }
        mount() {
          let w = this.node.getProps(),
            S = addPointerEvent(this.node.current, 'pointerdown', this.startPointerPress, {
              passive: !(w.onTapStart || w.onPointerStart)
            }),
            C = addDomEvent(this.node.current, 'focus', this.startAccessiblePress);
          this.removeStartListeners = pipe(S, C);
        }
        unmount() {
          this.removeStartListeners(), this.removeEndListeners(), this.removeAccessibleListeners();
        }
      };
      let tu = new WeakMap(),
        td = new WeakMap(),
        fireObserverCallback = (w) => {
          let S = tu.get(w.target);
          S && S(w);
        },
        fireAllObserverCallbacks = (w) => {
          w.forEach(fireObserverCallback);
        };
      function initIntersectionObserver({ root: w, ...S }) {
        let C = w || document;
        td.has(C) || td.set(C, {});
        let I = td.get(C),
          $ = JSON.stringify(S);
        return I[$] || (I[$] = new IntersectionObserver(fireAllObserverCallbacks, { root: w, ...S })), I[$];
      }
      function observeIntersection(w, S, C) {
        let I = initIntersectionObserver(S);
        return (
          tu.set(w, C),
          I.observe(w),
          () => {
            tu.delete(w), I.unobserve(w);
          }
        );
      }
      let th = { some: 0, all: 1 };
      let InViewFeature = class InViewFeature extends Feature {
        constructor() {
          super(...arguments), (this.hasEnteredView = !1), (this.isInView = !1);
        }
        startObserver() {
          this.unmount();
          let { viewport: w = {} } = this.node.getProps(),
            { root: S, margin: C, amount: I = 'some', once: $ } = w,
            er = { root: S ? S.current : void 0, rootMargin: C, threshold: 'number' == typeof I ? I : th[I] };
          return observeIntersection(this.node.current, er, (w) => {
            let { isIntersecting: S } = w;
            if (this.isInView === S || ((this.isInView = S), $ && !S && this.hasEnteredView)) return;
            S && (this.hasEnteredView = !0),
              this.node.animationState && this.node.animationState.setActive('whileInView', S);
            let { onViewportEnter: C, onViewportLeave: I } = this.node.getProps(),
              er = S ? C : I;
            er && er(w);
          });
        }
        mount() {
          this.startObserver();
        }
        update() {
          if ('undefined' == typeof IntersectionObserver) return;
          let { props: w, prevProps: S } = this.node,
            C = ['amount', 'margin', 'root'].some(hasViewportOptionChanged(w, S));
          C && this.startObserver();
        }
        unmount() {}
      };
      function hasViewportOptionChanged({ viewport: w = {} }, { viewport: S = {} } = {}) {
        return (C) => w[C] !== S[C];
      }
      function shallowCompare(w, S) {
        if (!Array.isArray(S)) return !1;
        let C = S.length;
        if (C !== w.length) return !1;
        for (let I = 0; I < C; I++) if (S[I] !== w[I]) return !1;
        return !0;
      }
      function getCurrent(w) {
        let S = {};
        return w.values.forEach((w, C) => (S[C] = w.get())), S;
      }
      function getVelocity(w) {
        let S = {};
        return w.values.forEach((w, C) => (S[C] = w.getVelocity())), S;
      }
      function resolveVariant(w, S, C) {
        let I = w.getProps();
        return resolveVariantFromProps(I, S, void 0 !== C ? C : I.custom, getCurrent(w), getVelocity(w));
      }
      let tf = 'data-' + camelToDash('framerAppearId'),
        secondsToMilliseconds = (w) => 1e3 * w,
        millisecondsToSeconds = (w) => w / 1e3,
        tp = { current: !1 },
        isBezierDefinition = (w) => Array.isArray(w) && 'number' == typeof w[0];
      function isWaapiSupportedEasing(w) {
        return !!(
          !w ||
          ('string' == typeof w && tm[w]) ||
          isBezierDefinition(w) ||
          (Array.isArray(w) && w.every(isWaapiSupportedEasing))
        );
      }
      let cubicBezierAsString = ([w, S, C, I]) => `cubic-bezier(${w}, ${S}, ${C}, ${I})`,
        tm = {
          linear: 'linear',
          ease: 'ease',
          easeIn: 'ease-in',
          easeOut: 'ease-out',
          easeInOut: 'ease-in-out',
          circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),
          circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),
          backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),
          backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99])
        };
      function mapEasingToNativeEasing(w) {
        if (w)
          return isBezierDefinition(w)
            ? cubicBezierAsString(w)
            : Array.isArray(w)
            ? w.map(mapEasingToNativeEasing)
            : tm[w];
      }
      function animateStyle(
        w,
        S,
        C,
        { delay: I = 0, duration: $, repeat: er = 0, repeatType: en = 'loop', ease: ei, times: eo } = {}
      ) {
        let es = { [S]: C };
        eo && (es.offset = eo);
        let el = mapEasingToNativeEasing(ei);
        return (
          Array.isArray(el) && (es.easing = el),
          w.animate(es, {
            delay: I,
            duration: $,
            easing: Array.isArray(el) ? 'linear' : el,
            fill: 'both',
            iterations: er + 1,
            direction: 'reverse' === en ? 'alternate' : 'normal'
          })
        );
      }
      function getFinalKeyframe(w, { repeat: S, repeatType: C = 'loop' }) {
        let I = S && 'loop' !== C && S % 2 == 1 ? 0 : w.length - 1;
        return w[I];
      }
      let calcBezier = (w, S, C) => (((1 - 3 * C + 3 * S) * w + (3 * C - 6 * S)) * w + 3 * S) * w;
      function binarySubdivide(w, S, C, I, $) {
        let er, en;
        let ei = 0;
        do (er = calcBezier((en = S + (C - S) / 2), I, $) - w) > 0 ? (C = en) : (S = en);
        while (Math.abs(er) > 1e-7 && ++ei < 12);
        return en;
      }
      function cubicBezier(w, S, C, I) {
        if (w === S && C === I) return noop_noop;
        let getTForX = (S) => binarySubdivide(S, 0, 1, w, C);
        return (w) => (0 === w || 1 === w ? w : calcBezier(getTForX(w), S, I));
      }
      let tg = cubicBezier(0.42, 0, 1, 1),
        ty = cubicBezier(0, 0, 0.58, 1),
        tv = cubicBezier(0.42, 0, 0.58, 1),
        isEasingArray = (w) => Array.isArray(w) && 'number' != typeof w[0],
        mirrorEasing = (w) => (S) => (S <= 0.5 ? w(2 * S) / 2 : (2 - w(2 * (1 - S))) / 2),
        reverseEasing = (w) => (S) => 1 - w(1 - S),
        circIn = (w) => 1 - Math.sin(Math.acos(w)),
        tb = reverseEasing(circIn),
        t_ = mirrorEasing(tb),
        tx = cubicBezier(0.33, 1.53, 0.69, 0.99),
        tw = reverseEasing(tx),
        tk = mirrorEasing(tw),
        tS = {
          linear: noop_noop,
          easeIn: tg,
          easeInOut: tv,
          easeOut: ty,
          circIn: circIn,
          circInOut: t_,
          circOut: tb,
          backIn: tw,
          backInOut: tk,
          backOut: tx,
          anticipate: (w) => ((w *= 2) < 1 ? 0.5 * tw(w) : 0.5 * (2 - Math.pow(2, -10 * (w - 1))))
        },
        easingDefinitionToFunction = (w) => {
          if (Array.isArray(w)) {
            noop_noop(4 === w.length, 'Cubic bezier arrays must contain four numerical values.');
            let [S, C, I, $] = w;
            return cubicBezier(S, C, I, $);
          }
          return 'string' == typeof w ? (noop_noop(void 0 !== tS[w], `Invalid easing type '${w}'`), tS[w]) : w;
        },
        isColorString = (w, S) => (C) =>
          !!((isString(C) && eK.test(C) && C.startsWith(w)) || (S && Object.prototype.hasOwnProperty.call(C, S))),
        splitColor = (w, S, C) => (I) => {
          if (!isString(I)) return I;
          let [$, er, en, ei] = I.match(eZ);
          return {
            [w]: parseFloat($),
            [S]: parseFloat(er),
            [C]: parseFloat(en),
            alpha: void 0 !== ei ? parseFloat(ei) : 1
          };
        },
        clampRgbUnit = (w) => clamp(0, 255, w),
        tC = { ...eW, transform: (w) => Math.round(clampRgbUnit(w)) },
        tP = {
          test: isColorString('rgb', 'red'),
          parse: splitColor('red', 'green', 'blue'),
          transform: ({ red: w, green: S, blue: C, alpha: I = 1 }) =>
            'rgba(' +
            tC.transform(w) +
            ', ' +
            tC.transform(S) +
            ', ' +
            tC.transform(C) +
            ', ' +
            sanitize(eG.transform(I)) +
            ')'
        };
      function parseHex(w) {
        let S = '',
          C = '',
          I = '',
          $ = '';
        return (
          w.length > 5
            ? ((S = w.substring(1, 3)), (C = w.substring(3, 5)), (I = w.substring(5, 7)), ($ = w.substring(7, 9)))
            : ((S = w.substring(1, 2)),
              (C = w.substring(2, 3)),
              (I = w.substring(3, 4)),
              ($ = w.substring(4, 5)),
              (S += S),
              (C += C),
              (I += I),
              ($ += $)),
          { red: parseInt(S, 16), green: parseInt(C, 16), blue: parseInt(I, 16), alpha: $ ? parseInt($, 16) / 255 : 1 }
        );
      }
      let tA = { test: isColorString('#'), parse: parseHex, transform: tP.transform },
        tT = {
          test: isColorString('hsl', 'hue'),
          parse: splitColor('hue', 'saturation', 'lightness'),
          transform: ({ hue: w, saturation: S, lightness: C, alpha: I = 1 }) =>
            'hsla(' +
            Math.round(w) +
            ', ' +
            eJ.transform(sanitize(S)) +
            ', ' +
            eJ.transform(sanitize(C)) +
            ', ' +
            sanitize(eG.transform(I)) +
            ')'
        },
        tE = {
          test: (w) => tP.test(w) || tA.test(w) || tT.test(w),
          parse: (w) => (tP.test(w) ? tP.parse(w) : tT.test(w) ? tT.parse(w) : tA.parse(w)),
          transform: (w) => (isString(w) ? w : w.hasOwnProperty('red') ? tP.transform(w) : tT.transform(w))
        },
        mix = (w, S, C) => -C * w + C * S + w;
      function hueToRgb(w, S, C) {
        return (C < 0 && (C += 1), C > 1 && (C -= 1), C < 1 / 6)
          ? w + (S - w) * 6 * C
          : C < 0.5
          ? S
          : C < 2 / 3
          ? w + (S - w) * (2 / 3 - C) * 6
          : w;
      }
      function hslaToRgba({ hue: w, saturation: S, lightness: C, alpha: I }) {
        (w /= 360), (C /= 100);
        let $ = 0,
          er = 0,
          en = 0;
        if ((S /= 100)) {
          let I = C < 0.5 ? C * (1 + S) : C + S - C * S,
            ei = 2 * C - I;
          ($ = hueToRgb(ei, I, w + 1 / 3)), (er = hueToRgb(ei, I, w)), (en = hueToRgb(ei, I, w - 1 / 3));
        } else $ = er = en = C;
        return { red: Math.round(255 * $), green: Math.round(255 * er), blue: Math.round(255 * en), alpha: I };
      }
      let mixLinearColor = (w, S, C) => {
          let I = w * w;
          return Math.sqrt(Math.max(0, C * (S * S - I) + I));
        },
        tz = [tA, tP, tT],
        getColorType = (w) => tz.find((S) => S.test(w));
      function asRGBA(w) {
        let S = getColorType(w);
        noop_noop(!!S, `'${w}' is not an animatable color. Use the equivalent color code instead.`);
        let C = S.parse(w);
        return S === tT && (C = hslaToRgba(C)), C;
      }
      let mixColor = (w, S) => {
        let C = asRGBA(w),
          I = asRGBA(S),
          $ = { ...C };
        return (w) => (
          ($.red = mixLinearColor(C.red, I.red, w)),
          ($.green = mixLinearColor(C.green, I.green, w)),
          ($.blue = mixLinearColor(C.blue, I.blue, w)),
          ($.alpha = mix(C.alpha, I.alpha, w)),
          tP.transform($)
        );
      };
      function test(w) {
        var S, C;
        return (
          isNaN(w) &&
          isString(w) &&
          ((null === (S = w.match(eZ)) || void 0 === S ? void 0 : S.length) || 0) +
            ((null === (C = w.match(eY)) || void 0 === C ? void 0 : C.length) || 0) >
            0
        );
      }
      let tI = {
          regex: /var\s*\(\s*--[\w-]+(\s*,\s*(?:(?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)+)?\s*\)/g,
          countKey: 'Vars',
          token: '${v}',
          parse: noop_noop
        },
        tB = { regex: eY, countKey: 'Colors', token: '${c}', parse: tE.parse },
        tR = { regex: eZ, countKey: 'Numbers', token: '${n}', parse: eW.parse };
      function tokenise(w, { regex: S, countKey: C, token: I, parse: $ }) {
        let er = w.tokenised.match(S);
        er && ((w['num' + C] = er.length), (w.tokenised = w.tokenised.replace(S, I)), w.values.push(...er.map($)));
      }
      function analyseComplexValue(w) {
        let S = w.toString(),
          C = { value: S, tokenised: S, values: [], numVars: 0, numColors: 0, numNumbers: 0 };
        return C.value.includes('var(--') && tokenise(C, tI), tokenise(C, tB), tokenise(C, tR), C;
      }
      function parseComplexValue(w) {
        return analyseComplexValue(w).values;
      }
      function createTransformer(w) {
        let { values: S, numColors: C, numVars: I, tokenised: $ } = analyseComplexValue(w),
          er = S.length;
        return (w) => {
          let S = $;
          for (let $ = 0; $ < er; $++)
            S =
              $ < I
                ? S.replace(tI.token, w[$])
                : $ < I + C
                ? S.replace(tB.token, tE.transform(w[$]))
                : S.replace(tR.token, sanitize(w[$]));
          return S;
        };
      }
      let convertNumbersToZero = (w) => ('number' == typeof w ? 0 : w);
      function getAnimatableNone(w) {
        let S = parseComplexValue(w),
          C = createTransformer(w);
        return C(S.map(convertNumbersToZero));
      }
      let tO = { test, parse: parseComplexValue, createTransformer, getAnimatableNone },
        mixImmediate = (w, S) => (C) => `${C > 0 ? S : w}`;
      function getMixer(w, S) {
        return 'number' == typeof w
          ? (C) => mix(w, S, C)
          : tE.test(w)
          ? mixColor(w, S)
          : w.startsWith('var(')
          ? mixImmediate(w, S)
          : mixComplex(w, S);
      }
      let mixArray = (w, S) => {
          let C = [...w],
            I = C.length,
            $ = w.map((w, C) => getMixer(w, S[C]));
          return (w) => {
            for (let S = 0; S < I; S++) C[S] = $[S](w);
            return C;
          };
        },
        mixObject = (w, S) => {
          let C = { ...w, ...S },
            I = {};
          for (let $ in C) void 0 !== w[$] && void 0 !== S[$] && (I[$] = getMixer(w[$], S[$]));
          return (w) => {
            for (let S in I) C[S] = I[S](w);
            return C;
          };
        },
        mixComplex = (w, S) => {
          let C = tO.createTransformer(S),
            I = analyseComplexValue(w),
            $ = analyseComplexValue(S),
            er = I.numVars === $.numVars && I.numColors === $.numColors && I.numNumbers >= $.numNumbers;
          return er
            ? pipe(mixArray(I.values, $.values), C)
            : (noop_noop(
                !0,
                `Complex values '${w}' and '${S}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`
              ),
              mixImmediate(w, S));
        },
        progress = (w, S, C) => {
          let I = S - w;
          return 0 === I ? 1 : (C - w) / I;
        },
        mixNumber = (w, S) => (C) => mix(w, S, C);
      function detectMixerFactory(w) {
        if ('number' == typeof w);
        else if ('string' == typeof w) return tE.test(w) ? mixColor : mixComplex;
        else if (Array.isArray(w)) return mixArray;
        else if ('object' == typeof w) return mixObject;
        return mixNumber;
      }
      function createMixers(w, S, C) {
        let I = [],
          $ = C || detectMixerFactory(w[0]),
          er = w.length - 1;
        for (let C = 0; C < er; C++) {
          let er = $(w[C], w[C + 1]);
          if (S) {
            let w = Array.isArray(S) ? S[C] || noop_noop : S;
            er = pipe(w, er);
          }
          I.push(er);
        }
        return I;
      }
      function interpolate(w, S, { clamp: C = !0, ease: I, mixer: $ } = {}) {
        let er = w.length;
        if ((noop_noop(er === S.length, 'Both input and output ranges must be the same length'), 1 === er))
          return () => S[0];
        w[0] > w[er - 1] && ((w = [...w].reverse()), (S = [...S].reverse()));
        let en = createMixers(S, I, $),
          ei = en.length,
          interpolator = (S) => {
            let C = 0;
            if (ei > 1) for (; C < w.length - 2 && !(S < w[C + 1]); C++);
            let I = progress(w[C], w[C + 1], S);
            return en[C](I);
          };
        return C ? (S) => interpolator(clamp(w[0], w[er - 1], S)) : interpolator;
      }
      function fillOffset(w, S) {
        let C = w[w.length - 1];
        for (let I = 1; I <= S; I++) {
          let $ = progress(0, S, I);
          w.push(mix(C, 1, $));
        }
      }
      function defaultOffset(w) {
        let S = [0];
        return fillOffset(S, w.length - 1), S;
      }
      function convertOffsetToTimes(w, S) {
        return w.map((w) => w * S);
      }
      function defaultEasing(w, S) {
        return w.map(() => S || tv).splice(0, w.length - 1);
      }
      function keyframes({ duration: w = 300, keyframes: S, times: C, ease: I = 'easeInOut' }) {
        let $ = isEasingArray(I) ? I.map(easingDefinitionToFunction) : easingDefinitionToFunction(I),
          er = { done: !1, value: S[0] },
          en = convertOffsetToTimes(C && C.length === S.length ? C : defaultOffset(S), w),
          ei = interpolate(en, S, { ease: Array.isArray($) ? $ : defaultEasing(S, $) });
        return { calculatedDuration: w, next: (S) => ((er.value = ei(S)), (er.done = S >= w), er) };
      }
      function calcGeneratorVelocity(w, S, C) {
        var I, $;
        let er = Math.max(S - 5, 0);
        return (I = C - w(er)), ($ = S - er) ? I * (1e3 / $) : 0;
      }
      function findSpring({ duration: w = 800, bounce: S = 0.25, velocity: C = 0, mass: I = 1 }) {
        let $, er;
        noop_noop(w <= secondsToMilliseconds(10), 'Spring duration must be 10 seconds or less');
        let en = 1 - S;
        (en = clamp(0.05, 1, en)),
          (w = clamp(0.01, 10, millisecondsToSeconds(w))),
          en < 1
            ? (($ = (S) => {
                let I = S * en,
                  $ = I * w,
                  er = calcAngularFreq(S, en);
                return 0.001 - ((I - C) / er) * Math.exp(-$);
              }),
              (er = (S) => {
                let I = S * en,
                  er = I * w,
                  ei = Math.pow(en, 2) * Math.pow(S, 2) * w,
                  eo = calcAngularFreq(Math.pow(S, 2), en),
                  es = -$(S) + 0.001 > 0 ? -1 : 1;
                return (es * ((er * C + C - ei) * Math.exp(-er))) / eo;
              }))
            : (($ = (S) => {
                let I = Math.exp(-S * w),
                  $ = (S - C) * w + 1;
                return -0.001 + I * $;
              }),
              (er = (S) => {
                let I = Math.exp(-S * w),
                  $ = (C - S) * (w * w);
                return I * $;
              }));
        let ei = 5 / w,
          eo = approximateRoot($, er, ei);
        if (((w = secondsToMilliseconds(w)), isNaN(eo))) return { stiffness: 100, damping: 10, duration: w };
        {
          let S = Math.pow(eo, 2) * I;
          return { stiffness: S, damping: 2 * en * Math.sqrt(I * S), duration: w };
        }
      }
      function approximateRoot(w, S, C) {
        let I = C;
        for (let C = 1; C < 12; C++) I -= w(I) / S(I);
        return I;
      }
      function calcAngularFreq(w, S) {
        return w * Math.sqrt(1 - S * S);
      }
      let tM = ['duration', 'bounce'],
        tD = ['stiffness', 'damping', 'mass'];
      function isSpringType(w, S) {
        return S.some((S) => void 0 !== w[S]);
      }
      function getSpringOptions(w) {
        let S = { velocity: 0, stiffness: 100, damping: 10, mass: 1, isResolvedFromDuration: !1, ...w };
        if (!isSpringType(w, tD) && isSpringType(w, tM)) {
          let C = findSpring(w);
          (S = { ...S, ...C, velocity: 0, mass: 1 }).isResolvedFromDuration = !0;
        }
        return S;
      }
      function spring({ keyframes: w, restDelta: S, restSpeed: C, ...I }) {
        let $;
        let er = w[0],
          en = w[w.length - 1],
          ei = { done: !1, value: er },
          {
            stiffness: eo,
            damping: es,
            mass: el,
            velocity: ec,
            duration: eu,
            isResolvedFromDuration: ed
          } = getSpringOptions(I),
          eh = ec ? -millisecondsToSeconds(ec) : 0,
          ef = es / (2 * Math.sqrt(eo * el)),
          ep = en - er,
          em = millisecondsToSeconds(Math.sqrt(eo / el)),
          eg = 5 > Math.abs(ep);
        if ((C || (C = eg ? 0.01 : 2), S || (S = eg ? 0.005 : 0.5), ef < 1)) {
          let w = calcAngularFreq(em, ef);
          $ = (S) => {
            let C = Math.exp(-ef * em * S);
            return en - C * (((eh + ef * em * ep) / w) * Math.sin(w * S) + ep * Math.cos(w * S));
          };
        } else if (1 === ef) $ = (w) => en - Math.exp(-em * w) * (ep + (eh + em * ep) * w);
        else {
          let w = em * Math.sqrt(ef * ef - 1);
          $ = (S) => {
            let C = Math.exp(-ef * em * S),
              I = Math.min(w * S, 300);
            return en - (C * ((eh + ef * em * ep) * Math.sinh(I) + w * ep * Math.cosh(I))) / w;
          };
        }
        return {
          calculatedDuration: (ed && eu) || null,
          next: (w) => {
            let I = $(w);
            if (ed) ei.done = w >= eu;
            else {
              let er = eh;
              0 !== w && (er = ef < 1 ? calcGeneratorVelocity($, w, I) : 0);
              let eo = Math.abs(er) <= C,
                es = Math.abs(en - I) <= S;
              ei.done = eo && es;
            }
            return (ei.value = ei.done ? en : I), ei;
          }
        };
      }
      function inertia({
        keyframes: w,
        velocity: S = 0,
        power: C = 0.8,
        timeConstant: I = 325,
        bounceDamping: $ = 10,
        bounceStiffness: er = 500,
        modifyTarget: en,
        min: ei,
        max: eo,
        restDelta: es = 0.5,
        restSpeed: el
      }) {
        let ec, eu;
        let ed = w[0],
          eh = { done: !1, value: ed },
          isOutOfBounds = (w) => (void 0 !== ei && w < ei) || (void 0 !== eo && w > eo),
          nearestBoundary = (w) =>
            void 0 === ei ? eo : void 0 === eo ? ei : Math.abs(ei - w) < Math.abs(eo - w) ? ei : eo,
          ef = C * S,
          ep = ed + ef,
          em = void 0 === en ? ep : en(ep);
        em !== ep && (ef = em - ed);
        let calcDelta = (w) => -ef * Math.exp(-w / I),
          calcLatest = (w) => em + calcDelta(w),
          applyFriction = (w) => {
            let S = calcDelta(w),
              C = calcLatest(w);
            (eh.done = Math.abs(S) <= es), (eh.value = eh.done ? em : C);
          },
          checkCatchBoundary = (w) => {
            isOutOfBounds(eh.value) &&
              ((ec = w),
              (eu = spring({
                keyframes: [eh.value, nearestBoundary(eh.value)],
                velocity: calcGeneratorVelocity(calcLatest, w, eh.value),
                damping: $,
                stiffness: er,
                restDelta: es,
                restSpeed: el
              })));
          };
        return (
          checkCatchBoundary(0),
          {
            calculatedDuration: null,
            next: (w) => {
              let S = !1;
              return (eu || void 0 !== ec || ((S = !0), applyFriction(w), checkCatchBoundary(w)),
              void 0 !== ec && w > ec)
                ? eu.next(w - ec)
                : (S || applyFriction(w), eh);
            }
          }
        );
      }
      let frameloopDriver = (w) => {
        let passTimestamp = ({ timestamp: S }) => w(S);
        return {
          start: () => tr.update(passTimestamp, !0),
          stop: () => tn(passTimestamp),
          now: () => (ti.isProcessing ? ti.timestamp : performance.now())
        };
      };
      function calcGeneratorDuration(w) {
        let S = 0,
          C = w.next(S);
        for (; !C.done && S < 2e4; ) (S += 50), (C = w.next(S));
        return S >= 2e4 ? 1 / 0 : S;
      }
      let tj = { decay: inertia, inertia: inertia, tween: keyframes, keyframes: keyframes, spring: spring };
      function animateValue({
        autoplay: w = !0,
        delay: S = 0,
        driver: C = frameloopDriver,
        keyframes: I,
        type: $ = 'keyframes',
        repeat: er = 0,
        repeatDelay: en = 0,
        repeatType: ei = 'loop',
        onPlay: eo,
        onStop: es,
        onComplete: el,
        onUpdate: ec,
        ...eu
      }) {
        let ed,
          eh,
          ef,
          ep,
          em,
          eg = 1,
          ey = !1,
          updateFinishedPromise = () => {
            eh = new Promise((w) => {
              ed = w;
            });
          };
        updateFinishedPromise();
        let ev = tj[$] || keyframes;
        ev !== keyframes && 'number' != typeof I[0] && ((ep = interpolate([0, 100], I, { clamp: !1 })), (I = [0, 100]));
        let eb = ev({ ...eu, keyframes: I });
        'mirror' === ei && (em = ev({ ...eu, keyframes: [...I].reverse(), velocity: -(eu.velocity || 0) }));
        let e_ = 'idle',
          ex = null,
          ew = null,
          ek = null;
        null === eb.calculatedDuration && er && (eb.calculatedDuration = calcGeneratorDuration(eb));
        let { calculatedDuration: eS } = eb,
          eC = 1 / 0,
          eP = 1 / 0;
        null !== eS && (eP = (eC = eS + en) * (er + 1) - en);
        let eA = 0,
          tick = (w) => {
            if (null === ew) return;
            eg > 0 && (ew = Math.min(ew, w)),
              eg < 0 && (ew = Math.min(w - eP / eg, ew)),
              (eA = null !== ex ? ex : Math.round(w - ew) * eg);
            let C = eA - S * (eg >= 0 ? 1 : -1),
              $ = eg >= 0 ? C < 0 : C > eP;
            (eA = Math.max(C, 0)), 'finished' === e_ && null === ex && (eA = eP);
            let eo = eA,
              es = eb;
            if (er) {
              let w = eA / eC,
                S = Math.floor(w),
                C = w % 1;
              !C && w >= 1 && (C = 1), 1 === C && S--, (S = Math.min(S, er + 1));
              let I = !!(S % 2);
              I && ('reverse' === ei ? ((C = 1 - C), en && (C -= en / eC)) : 'mirror' === ei && (es = em));
              let $ = clamp(0, 1, C);
              eA > eP && ($ = 'reverse' === ei && I ? 1 : 0), (eo = $ * eC);
            }
            let el = $ ? { done: !1, value: I[0] } : es.next(eo);
            ep && (el.value = ep(el.value));
            let { done: eu } = el;
            $ || null === eS || (eu = eg >= 0 ? eA >= eP : eA <= 0);
            let ed = null === ex && ('finished' === e_ || ('running' === e_ && eu));
            return ec && ec(el.value), ed && finish(), el;
          },
          stopAnimationDriver = () => {
            ef && ef.stop(), (ef = void 0);
          },
          cancel = () => {
            (e_ = 'idle'), stopAnimationDriver(), ed(), updateFinishedPromise(), (ew = ek = null);
          },
          finish = () => {
            (e_ = 'finished'), el && el(), stopAnimationDriver(), ed();
          },
          play = () => {
            if (ey) return;
            ef || (ef = C(tick));
            let w = ef.now();
            eo && eo(),
              null !== ex ? (ew = w - ex) : (ew && 'finished' !== e_) || (ew = w),
              'finished' === e_ && updateFinishedPromise(),
              (ek = ew),
              (ex = null),
              (e_ = 'running'),
              ef.start();
          };
        w && play();
        let eT = {
          then: (w, S) => eh.then(w, S),
          get time() {
            return millisecondsToSeconds(eA);
          },
          set time(newTime) {
            (eA = newTime = secondsToMilliseconds(newTime)),
              null === ex && ef && 0 !== eg ? (ew = ef.now() - newTime / eg) : (ex = newTime);
          },
          get duration() {
            let w = null === eb.calculatedDuration ? calcGeneratorDuration(eb) : eb.calculatedDuration;
            return millisecondsToSeconds(w);
          },
          get speed() {
            return eg;
          },
          set speed(newSpeed) {
            if (newSpeed === eg || !ef) return;
            (eg = newSpeed), (eT.time = millisecondsToSeconds(eA));
          },
          get state() {
            return e_;
          },
          play,
          pause: () => {
            (e_ = 'paused'), (ex = eA);
          },
          stop: () => {
            (ey = !0), 'idle' !== e_ && ((e_ = 'idle'), es && es(), cancel());
          },
          cancel: () => {
            null !== ek && tick(ek), cancel();
          },
          complete: () => {
            e_ = 'finished';
          },
          sample: (w) => ((ew = 0), tick(w))
        };
        return eT;
      }
      function memo(w) {
        let S;
        return () => (void 0 === S && (S = w()), S);
      }
      let tL = memo(() => Object.hasOwnProperty.call(Element.prototype, 'animate')),
        tF = new Set(['opacity', 'clipPath', 'filter', 'transform', 'backgroundColor']),
        requiresPregeneratedKeyframes = (w, S) =>
          'spring' === S.type || 'backgroundColor' === w || !isWaapiSupportedEasing(S.ease);
      function createAcceleratedAnimation(w, S, { onUpdate: C, onComplete: I, ...$ }) {
        let er, en;
        let ei =
          tL() && tF.has(S) && !$.repeatDelay && 'mirror' !== $.repeatType && 0 !== $.damping && 'inertia' !== $.type;
        if (!ei) return !1;
        let eo = !1,
          updateFinishedPromise = () => {
            en = new Promise((w) => {
              er = w;
            });
          };
        updateFinishedPromise();
        let { keyframes: es, duration: el = 300, ease: ec, times: eu } = $;
        if (requiresPregeneratedKeyframes(S, $)) {
          let w = animateValue({ ...$, repeat: 0, delay: 0 }),
            S = { done: !1, value: es[0] },
            C = [],
            I = 0;
          for (; !S.done && I < 2e4; ) (S = w.sample(I)), C.push(S.value), (I += 10);
          (eu = void 0), (es = C), (el = I - 10), (ec = 'linear');
        }
        let ed = animateStyle(w.owner.current, S, es, { ...$, duration: el, ease: ec, times: eu });
        $.syncStart &&
          (ed.startTime = ti.isProcessing
            ? ti.timestamp
            : document.timeline
            ? document.timeline.currentTime
            : performance.now());
        let cancelAnimation = () => ed.cancel(),
          safeCancel = () => {
            tr.update(cancelAnimation), er(), updateFinishedPromise();
          };
        return (
          (ed.onfinish = () => {
            w.set(getFinalKeyframe(es, $)), I && I(), safeCancel();
          }),
          {
            then: (w, S) => en.then(w, S),
            attachTimeline: (w) => ((ed.timeline = w), (ed.onfinish = null), noop_noop),
            get time() {
              return millisecondsToSeconds(ed.currentTime || 0);
            },
            set time(newTime) {
              ed.currentTime = secondsToMilliseconds(newTime);
            },
            get speed() {
              return ed.playbackRate;
            },
            set speed(newSpeed) {
              ed.playbackRate = newSpeed;
            },
            get duration() {
              return millisecondsToSeconds(el);
            },
            play: () => {
              eo || (ed.play(), tn(cancelAnimation));
            },
            pause: () => ed.pause(),
            stop: () => {
              if (((eo = !0), 'idle' === ed.playState)) return;
              let { currentTime: S } = ed;
              if (S) {
                let C = animateValue({ ...$, autoplay: !1 });
                w.setWithVelocity(C.sample(S - 10).value, C.sample(S).value, 10);
              }
              safeCancel();
            },
            complete: () => ed.finish(),
            cancel: safeCancel
          }
        );
      }
      function createInstantAnimation({ keyframes: w, delay: S, onUpdate: C, onComplete: I }) {
        let setValue = () => (
          C && C(w[w.length - 1]),
          I && I(),
          {
            time: 0,
            speed: 1,
            duration: 0,
            play: noop_noop,
            pause: noop_noop,
            stop: noop_noop,
            then: (w) => (w(), Promise.resolve()),
            cancel: noop_noop,
            complete: noop_noop
          }
        );
        return S ? animateValue({ keyframes: [0, 1], duration: 0, delay: S, onComplete: setValue }) : setValue();
      }
      let tV = { type: 'spring', stiffness: 500, damping: 25, restSpeed: 10 },
        criticallyDampedSpring = (w) => ({
          type: 'spring',
          stiffness: 550,
          damping: 0 === w ? 2 * Math.sqrt(550) : 30,
          restSpeed: 10
        }),
        tN = { type: 'keyframes', duration: 0.8 },
        tU = { type: 'keyframes', ease: [0.25, 0.1, 0.35, 1], duration: 0.3 },
        getDefaultTransition = (w, { keyframes: S }) =>
          S.length > 2 ? tN : eF.has(w) ? (w.startsWith('scale') ? criticallyDampedSpring(S[1]) : tV) : tU,
        isAnimatable = (w, S) =>
          'zIndex' !== w &&
          !!(
            'number' == typeof S ||
            Array.isArray(S) ||
            ('string' == typeof S && (tO.test(S) || '0' === S) && !S.startsWith('url('))
          ),
        t$ = new Set(['brightness', 'contrast', 'saturate', 'opacity']);
      function applyDefaultFilter(w) {
        let [S, C] = w.slice(0, -1).split('(');
        if ('drop-shadow' === S) return w;
        let [I] = C.match(eZ) || [];
        if (!I) return w;
        let $ = C.replace(I, ''),
          er = t$.has(S) ? 1 : 0;
        return I !== C && (er *= 100), S + '(' + er + $ + ')';
      }
      let tW = /([a-z-]*)\(.*?\)/g,
        tG = {
          ...tO,
          getAnimatableNone: (w) => {
            let S = w.match(tW);
            return S ? S.map(applyDefaultFilter).join(' ') : w;
          }
        },
        tH = {
          ...e3,
          color: tE,
          backgroundColor: tE,
          outlineColor: tE,
          fill: tE,
          stroke: tE,
          borderColor: tE,
          borderTopColor: tE,
          borderRightColor: tE,
          borderBottomColor: tE,
          borderLeftColor: tE,
          filter: tG,
          WebkitFilter: tG
        },
        getDefaultValueType = (w) => tH[w];
      function animatable_none_getAnimatableNone(w, S) {
        let C = getDefaultValueType(w);
        return C !== tG && (C = tO), C.getAnimatableNone ? C.getAnimatableNone(S) : void 0;
      }
      let isZeroValueString = (w) => /^0[^.\s]+$/.test(w);
      function isNone(w) {
        return 'number' == typeof w ? 0 === w : null !== w ? 'none' === w || '0' === w || isZeroValueString(w) : void 0;
      }
      function getKeyframes(w, S, C, I) {
        let $, er;
        let en = isAnimatable(S, C);
        $ = Array.isArray(C) ? [...C] : [null, C];
        let ei = void 0 !== I.from ? I.from : w.get(),
          eo = [];
        for (let w = 0; w < $.length; w++)
          null === $[w] && ($[w] = 0 === w ? ei : $[w - 1]),
            isNone($[w]) && eo.push(w),
            'string' == typeof $[w] && 'none' !== $[w] && '0' !== $[w] && (er = $[w]);
        if (en && eo.length && er)
          for (let w = 0; w < eo.length; w++) {
            let C = eo[w];
            $[C] = animatable_none_getAnimatableNone(S, er);
          }
        return $;
      }
      function isTransitionDefined({
        when: w,
        delay: S,
        delayChildren: C,
        staggerChildren: I,
        staggerDirection: $,
        repeat: er,
        repeatType: en,
        repeatDelay: ei,
        from: eo,
        elapsed: es,
        ...el
      }) {
        return !!Object.keys(el).length;
      }
      function getValueTransition(w, S) {
        return w[S] || w.default || w;
      }
      let animateMotionValue =
        (w, S, C, I = {}) =>
        ($) => {
          let er = getValueTransition(I, w) || {},
            en = er.delay || I.delay || 0,
            { elapsed: ei = 0 } = I;
          ei -= secondsToMilliseconds(en);
          let eo = getKeyframes(S, w, C, er),
            es = eo[0],
            el = eo[eo.length - 1],
            ec = isAnimatable(w, es),
            eu = isAnimatable(w, el);
          noop_noop(
            ec === eu,
            `You are trying to animate ${w} from "${es}" to "${el}". ${es} is not an animatable value - to enable this animation set ${es} to a value animatable to ${el} via the \`style\` property.`
          );
          let ed = {
            keyframes: eo,
            velocity: S.getVelocity(),
            ease: 'easeOut',
            ...er,
            delay: -ei,
            onUpdate: (w) => {
              S.set(w), er.onUpdate && er.onUpdate(w);
            },
            onComplete: () => {
              $(), er.onComplete && er.onComplete();
            }
          };
          if (
            (isTransitionDefined(er) || (ed = { ...ed, ...getDefaultTransition(w, ed) }),
            ed.duration && (ed.duration = secondsToMilliseconds(ed.duration)),
            ed.repeatDelay && (ed.repeatDelay = secondsToMilliseconds(ed.repeatDelay)),
            !ec || !eu || tp.current || !1 === er.type)
          )
            return createInstantAnimation(tp.current ? { ...ed, delay: 0 } : ed);
          if (S.owner && S.owner.current instanceof HTMLElement && !S.owner.getProps().onUpdate) {
            let C = createAcceleratedAnimation(S, w, ed);
            if (C) return C;
          }
          return animateValue(ed);
        };
      function isWillChangeMotionValue(w) {
        return !!(isMotionValue(w) && w.add);
      }
      let isNumericalString = (w) => /^\-?\d*\.?\d+$/.test(w);
      function addUniqueItem(w, S) {
        -1 === w.indexOf(S) && w.push(S);
      }
      function removeItem(w, S) {
        let C = w.indexOf(S);
        C > -1 && w.splice(C, 1);
      }
      let SubscriptionManager = class SubscriptionManager {
        constructor() {
          this.subscriptions = [];
        }
        add(w) {
          return addUniqueItem(this.subscriptions, w), () => removeItem(this.subscriptions, w);
        }
        notify(w, S, C) {
          let I = this.subscriptions.length;
          if (I) {
            if (1 === I) this.subscriptions[0](w, S, C);
            else
              for (let $ = 0; $ < I; $++) {
                let I = this.subscriptions[$];
                I && I(w, S, C);
              }
          }
        }
        getSize() {
          return this.subscriptions.length;
        }
        clear() {
          this.subscriptions.length = 0;
        }
      };
      let isFloat = (w) => !isNaN(parseFloat(w)),
        tq = { current: void 0 };
      let MotionValue = class MotionValue {
        constructor(w, S = {}) {
          (this.version = '10.16.4'),
            (this.timeDelta = 0),
            (this.lastUpdated = 0),
            (this.canTrackVelocity = !1),
            (this.events = {}),
            (this.updateAndNotify = (w, S = !0) => {
              (this.prev = this.current), (this.current = w);
              let { delta: C, timestamp: I } = ti;
              this.lastUpdated !== I &&
                ((this.timeDelta = C), (this.lastUpdated = I), tr.postRender(this.scheduleVelocityCheck)),
                this.prev !== this.current && this.events.change && this.events.change.notify(this.current),
                this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()),
                S && this.events.renderRequest && this.events.renderRequest.notify(this.current);
            }),
            (this.scheduleVelocityCheck = () => tr.postRender(this.velocityCheck)),
            (this.velocityCheck = ({ timestamp: w }) => {
              w !== this.lastUpdated &&
                ((this.prev = this.current),
                this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()));
            }),
            (this.hasAnimated = !1),
            (this.prev = this.current = w),
            (this.canTrackVelocity = isFloat(this.current)),
            (this.owner = S.owner);
        }
        onChange(w) {
          return this.on('change', w);
        }
        on(w, S) {
          this.events[w] || (this.events[w] = new SubscriptionManager());
          let C = this.events[w].add(S);
          return 'change' === w
            ? () => {
                C(),
                  tr.read(() => {
                    this.events.change.getSize() || this.stop();
                  });
              }
            : C;
        }
        clearListeners() {
          for (let w in this.events) this.events[w].clear();
        }
        attach(w, S) {
          (this.passiveEffect = w), (this.stopPassiveEffect = S);
        }
        set(w, S = !0) {
          S && this.passiveEffect ? this.passiveEffect(w, this.updateAndNotify) : this.updateAndNotify(w, S);
        }
        setWithVelocity(w, S, C) {
          this.set(S), (this.prev = w), (this.timeDelta = C);
        }
        jump(w) {
          this.updateAndNotify(w), (this.prev = w), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
        }
        get() {
          return tq.current && tq.current.push(this), this.current;
        }
        getPrevious() {
          return this.prev;
        }
        getVelocity() {
          var w, S;
          return this.canTrackVelocity
            ? ((w = parseFloat(this.current) - parseFloat(this.prev)), (S = this.timeDelta) ? w * (1e3 / S) : 0)
            : 0;
        }
        start(w) {
          return (
            this.stop(),
            new Promise((S) => {
              (this.hasAnimated = !0),
                (this.animation = w(S)),
                this.events.animationStart && this.events.animationStart.notify();
            }).then(() => {
              this.events.animationComplete && this.events.animationComplete.notify(), this.clearAnimation();
            })
          );
        }
        stop() {
          this.animation &&
            (this.animation.stop(), this.events.animationCancel && this.events.animationCancel.notify()),
            this.clearAnimation();
        }
        isAnimating() {
          return !!this.animation;
        }
        clearAnimation() {
          delete this.animation;
        }
        destroy() {
          this.clearListeners(), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
        }
      };
      function motionValue(w, S) {
        return new MotionValue(w, S);
      }
      let testValueType = (w) => (S) => S.test(w),
        tZ = [eW, eQ, eJ, eX, e1, e0, { test: (w) => 'auto' === w, parse: (w) => w }],
        findDimensionValueType = (w) => tZ.find(testValueType(w)),
        tY = [...tZ, tE, tO],
        findValueType = (w) => tY.find(testValueType(w));
      function setMotionValue(w, S, C) {
        w.hasValue(S) ? w.getValue(S).set(C) : w.addValue(S, motionValue(C));
      }
      function setTarget(w, S) {
        let C = resolveVariant(w, S),
          { transitionEnd: I = {}, transition: $ = {}, ...er } = C ? w.makeTargetAnimatable(C, !1) : {};
        for (let S in (er = { ...er, ...I })) {
          let C = resolveFinalValueInKeyframes(er[S]);
          setMotionValue(w, S, C);
        }
      }
      function checkTargetForNewValues(w, S, C) {
        var I, $;
        let er = Object.keys(S).filter((S) => !w.hasValue(S)),
          en = er.length;
        if (en)
          for (let ei = 0; ei < en; ei++) {
            let en = er[ei],
              eo = S[en],
              es = null;
            Array.isArray(eo) && (es = eo[0]),
              null === es &&
                (es =
                  null !== ($ = null !== (I = C[en]) && void 0 !== I ? I : w.readValue(en)) && void 0 !== $
                    ? $
                    : S[en]),
              null != es &&
                ('string' == typeof es && (isNumericalString(es) || isZeroValueString(es))
                  ? (es = parseFloat(es))
                  : !findValueType(es) && tO.test(eo) && (es = animatable_none_getAnimatableNone(en, eo)),
                w.addValue(en, motionValue(es, { owner: w })),
                void 0 === C[en] && (C[en] = es),
                null !== es && w.setBaseTarget(en, es));
          }
      }
      function getOriginFromTransition(w, S) {
        if (!S) return;
        let C = S[w] || S.default || S;
        return C.from;
      }
      function getOrigin(w, S, C) {
        let I = {};
        for (let $ in w) {
          let w = getOriginFromTransition($, S);
          if (void 0 !== w) I[$] = w;
          else {
            let w = C.getValue($);
            w && (I[$] = w.get());
          }
        }
        return I;
      }
      function shouldBlockAnimation({ protectedKeys: w, needsAnimating: S }, C) {
        let I = w.hasOwnProperty(C) && !0 !== S[C];
        return (S[C] = !1), I;
      }
      function animateTarget(w, S, { delay: C = 0, transitionOverride: I, type: $ } = {}) {
        let { transition: er = w.getDefaultTransition(), transitionEnd: en, ...ei } = w.makeTargetAnimatable(S),
          eo = w.getValue('willChange');
        I && (er = I);
        let es = [],
          el = $ && w.animationState && w.animationState.getState()[$];
        for (let S in ei) {
          let I = w.getValue(S),
            $ = ei[S];
          if (!I || void 0 === $ || (el && shouldBlockAnimation(el, S))) continue;
          let en = { delay: C, elapsed: 0, ...er };
          if (window.HandoffAppearAnimations && !I.hasAnimated) {
            let C = w.getProps()[tf];
            C && ((en.elapsed = window.HandoffAppearAnimations(C, S, I, tr)), (en.syncStart = !0));
          }
          I.start(animateMotionValue(S, I, $, w.shouldReduceMotion && eF.has(S) ? { type: !1 } : en));
          let ec = I.animation;
          isWillChangeMotionValue(eo) && (eo.add(S), ec.then(() => eo.remove(S))), es.push(ec);
        }
        return (
          en &&
            Promise.all(es).then(() => {
              en && setTarget(w, en);
            }),
          es
        );
      }
      function animateVariant(w, S, C = {}) {
        let I = resolveVariant(w, S, C.custom),
          { transition: $ = w.getDefaultTransition() || {} } = I || {};
        C.transitionOverride && ($ = C.transitionOverride);
        let er = I ? () => Promise.all(animateTarget(w, I, C)) : () => Promise.resolve(),
          en =
            w.variantChildren && w.variantChildren.size
              ? (I = 0) => {
                  let { delayChildren: er = 0, staggerChildren: en, staggerDirection: ei } = $;
                  return animateChildren(w, S, er + I, en, ei, C);
                }
              : () => Promise.resolve(),
          { when: ei } = $;
        if (!ei) return Promise.all([er(), en(C.delay)]);
        {
          let [w, S] = 'beforeChildren' === ei ? [er, en] : [en, er];
          return w().then(() => S());
        }
      }
      function animateChildren(w, S, C = 0, I = 0, $ = 1, er) {
        let en = [],
          ei = (w.variantChildren.size - 1) * I,
          eo = 1 === $ ? (w = 0) => w * I : (w = 0) => ei - w * I;
        return (
          Array.from(w.variantChildren)
            .sort(sortByTreeOrder)
            .forEach((w, I) => {
              w.notify('AnimationStart', S),
                en.push(animateVariant(w, S, { ...er, delay: C + eo(I) }).then(() => w.notify('AnimationComplete', S)));
            }),
          Promise.all(en)
        );
      }
      function sortByTreeOrder(w, S) {
        return w.sortNodePosition(S);
      }
      function animateVisualElement(w, S, C = {}) {
        let I;
        if ((w.notify('AnimationStart', S), Array.isArray(S))) {
          let $ = S.map((S) => animateVariant(w, S, C));
          I = Promise.all($);
        } else if ('string' == typeof S) I = animateVariant(w, S, C);
        else {
          let $ = 'function' == typeof S ? resolveVariant(w, S, C.custom) : S;
          I = Promise.all(animateTarget(w, $, C));
        }
        return I.then(() => w.notify('AnimationComplete', S));
      }
      let tK = [...eE].reverse(),
        tX = eE.length;
      function animateList(w) {
        return (S) => Promise.all(S.map(({ animation: S, options: C }) => animateVisualElement(w, S, C)));
      }
      function createAnimationState(w) {
        let S = animateList(w),
          C = createState(),
          I = !0,
          buildResolvedTypeValues = (S, C) => {
            let I = resolveVariant(w, C);
            if (I) {
              let { transition: w, transitionEnd: C, ...$ } = I;
              S = { ...S, ...$, ...C };
            }
            return S;
          };
        function animateChanges($, er) {
          let en = w.getProps(),
            ei = w.getVariantContext(!0) || {},
            eo = [],
            es = new Set(),
            el = {},
            ec = 1 / 0;
          for (let S = 0; S < tX; S++) {
            let eu = tK[S],
              ed = C[eu],
              eh = void 0 !== en[eu] ? en[eu] : ei[eu],
              ef = isVariantLabel(eh),
              ep = eu === er ? ed.isActive : null;
            !1 === ep && (ec = S);
            let em = eh === ei[eu] && eh !== en[eu] && ef;
            if (
              (em && I && w.manuallyAnimateOnMount && (em = !1),
              (ed.protectedKeys = { ...el }),
              (!ed.isActive && null === ep) ||
                (!eh && !ed.prevProp) ||
                isAnimationControls(eh) ||
                'boolean' == typeof eh)
            )
              continue;
            let eg = checkVariantsDidChange(ed.prevProp, eh),
              ey = eg || (eu === er && ed.isActive && !em && ef) || (S > ec && ef),
              ev = Array.isArray(eh) ? eh : [eh],
              eb = ev.reduce(buildResolvedTypeValues, {});
            !1 === ep && (eb = {});
            let { prevResolvedValues: e_ = {} } = ed,
              ex = { ...e_, ...eb },
              markToAnimate = (w) => {
                (ey = !0), es.delete(w), (ed.needsAnimating[w] = !0);
              };
            for (let w in ex) {
              let S = eb[w],
                C = e_[w];
              el.hasOwnProperty(w) ||
                (S !== C
                  ? isKeyframesTarget(S) && isKeyframesTarget(C)
                    ? !shallowCompare(S, C) || eg
                      ? markToAnimate(w)
                      : (ed.protectedKeys[w] = !0)
                    : void 0 !== S
                    ? markToAnimate(w)
                    : es.add(w)
                  : void 0 !== S && es.has(w)
                  ? markToAnimate(w)
                  : (ed.protectedKeys[w] = !0));
            }
            (ed.prevProp = eh),
              (ed.prevResolvedValues = eb),
              ed.isActive && (el = { ...el, ...eb }),
              I && w.blockInitialAnimation && (ey = !1),
              ey && !em && eo.push(...ev.map((w) => ({ animation: w, options: { type: eu, ...$ } })));
          }
          if (es.size) {
            let S = {};
            es.forEach((C) => {
              let I = w.getBaseTarget(C);
              void 0 !== I && (S[C] = I);
            }),
              eo.push({ animation: S });
          }
          let eu = !!eo.length;
          return (
            I && !1 === en.initial && !w.manuallyAnimateOnMount && (eu = !1), (I = !1), eu ? S(eo) : Promise.resolve()
          );
        }
        function setActive(S, I, $) {
          var er;
          if (C[S].isActive === I) return Promise.resolve();
          null === (er = w.variantChildren) ||
            void 0 === er ||
            er.forEach((w) => {
              var C;
              return null === (C = w.animationState) || void 0 === C ? void 0 : C.setActive(S, I);
            }),
            (C[S].isActive = I);
          let en = animateChanges($, S);
          for (let w in C) C[w].protectedKeys = {};
          return en;
        }
        return {
          animateChanges,
          setActive,
          setAnimateFunction: function (C) {
            S = C(w);
          },
          getState: () => C
        };
      }
      function checkVariantsDidChange(w, S) {
        return 'string' == typeof S ? S !== w : !!Array.isArray(S) && !shallowCompare(S, w);
      }
      function createTypeState(w = !1) {
        return { isActive: w, protectedKeys: {}, needsAnimating: {}, prevResolvedValues: {} };
      }
      function createState() {
        return {
          animate: createTypeState(!0),
          whileInView: createTypeState(),
          whileHover: createTypeState(),
          whileTap: createTypeState(),
          whileDrag: createTypeState(),
          whileFocus: createTypeState(),
          exit: createTypeState()
        };
      }
      let AnimationFeature = class AnimationFeature extends Feature {
        constructor(w) {
          super(w), w.animationState || (w.animationState = createAnimationState(w));
        }
        updateAnimationControlsSubscription() {
          let { animate: w } = this.node.getProps();
          this.unmount(), isAnimationControls(w) && (this.unmount = w.subscribe(this.node));
        }
        mount() {
          this.updateAnimationControlsSubscription();
        }
        update() {
          let { animate: w } = this.node.getProps(),
            { animate: S } = this.node.prevProps || {};
          w !== S && this.updateAnimationControlsSubscription();
        }
        unmount() {}
      };
      let tJ = 0;
      let ExitAnimationFeature = class ExitAnimationFeature extends Feature {
        constructor() {
          super(...arguments), (this.id = tJ++);
        }
        update() {
          if (!this.node.presenceContext) return;
          let { isPresent: w, onExitComplete: S, custom: C } = this.node.presenceContext,
            { isPresent: I } = this.node.prevPresenceContext || {};
          if (!this.node.animationState || w === I) return;
          let $ = this.node.animationState.setActive('exit', !w, {
            custom: null != C ? C : this.node.getProps().custom
          });
          S && !w && $.then(() => S(this.id));
        }
        mount() {
          let { register: w } = this.node.presenceContext || {};
          w && (this.unmount = w(this.id));
        }
        unmount() {}
      };
      let distance = (w, S) => Math.abs(w - S);
      function distance2D(w, S) {
        let C = distance(w.x, S.x),
          I = distance(w.y, S.y);
        return Math.sqrt(C ** 2 + I ** 2);
      }
      let PanSession = class PanSession {
        constructor(w, S, { transformPagePoint: C } = {}) {
          if (
            ((this.startEvent = null),
            (this.lastMoveEvent = null),
            (this.lastMoveEventInfo = null),
            (this.handlers = {}),
            (this.updatePoint = () => {
              if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
              let w = getPanInfo(this.lastMoveEventInfo, this.history),
                S = null !== this.startEvent,
                C = distance2D(w.offset, { x: 0, y: 0 }) >= 3;
              if (!S && !C) return;
              let { point: I } = w,
                { timestamp: $ } = ti;
              this.history.push({ ...I, timestamp: $ });
              let { onStart: er, onMove: en } = this.handlers;
              S || (er && er(this.lastMoveEvent, w), (this.startEvent = this.lastMoveEvent)),
                en && en(this.lastMoveEvent, w);
            }),
            (this.handlePointerMove = (w, S) => {
              (this.lastMoveEvent = w),
                (this.lastMoveEventInfo = transformPoint(S, this.transformPagePoint)),
                tr.update(this.updatePoint, !0);
            }),
            (this.handlePointerUp = (w, S) => {
              if ((this.end(), !(this.lastMoveEvent && this.lastMoveEventInfo))) return;
              let { onEnd: C, onSessionEnd: I } = this.handlers,
                $ = getPanInfo(
                  'pointercancel' === w.type ? this.lastMoveEventInfo : transformPoint(S, this.transformPagePoint),
                  this.history
                );
              this.startEvent && C && C(w, $), I && I(w, $);
            }),
            !isPrimaryPointer(w))
          )
            return;
          (this.handlers = S), (this.transformPagePoint = C);
          let I = extractEventInfo(w),
            $ = transformPoint(I, this.transformPagePoint),
            { point: er } = $,
            { timestamp: en } = ti;
          this.history = [{ ...er, timestamp: en }];
          let { onSessionStart: ei } = S;
          ei && ei(w, getPanInfo($, this.history)),
            (this.removeListeners = pipe(
              addPointerEvent(window, 'pointermove', this.handlePointerMove),
              addPointerEvent(window, 'pointerup', this.handlePointerUp),
              addPointerEvent(window, 'pointercancel', this.handlePointerUp)
            ));
        }
        updateHandlers(w) {
          this.handlers = w;
        }
        end() {
          this.removeListeners && this.removeListeners(), tn(this.updatePoint);
        }
      };
      function transformPoint(w, S) {
        return S ? { point: S(w.point) } : w;
      }
      function subtractPoint(w, S) {
        return { x: w.x - S.x, y: w.y - S.y };
      }
      function getPanInfo({ point: w }, S) {
        return {
          point: w,
          delta: subtractPoint(w, lastDevicePoint(S)),
          offset: subtractPoint(w, startDevicePoint(S)),
          velocity: PanSession_getVelocity(S, 0.1)
        };
      }
      function startDevicePoint(w) {
        return w[0];
      }
      function lastDevicePoint(w) {
        return w[w.length - 1];
      }
      function PanSession_getVelocity(w, S) {
        if (w.length < 2) return { x: 0, y: 0 };
        let C = w.length - 1,
          I = null,
          $ = lastDevicePoint(w);
        for (; C >= 0 && ((I = w[C]), !($.timestamp - I.timestamp > secondsToMilliseconds(S))); ) C--;
        if (!I) return { x: 0, y: 0 };
        let er = millisecondsToSeconds($.timestamp - I.timestamp);
        if (0 === er) return { x: 0, y: 0 };
        let en = { x: ($.x - I.x) / er, y: ($.y - I.y) / er };
        return en.x === 1 / 0 && (en.x = 0), en.y === 1 / 0 && (en.y = 0), en;
      }
      function calcLength(w) {
        return w.max - w.min;
      }
      function isNear(w, S = 0, C = 0.01) {
        return Math.abs(w - S) <= C;
      }
      function calcAxisDelta(w, S, C, I = 0.5) {
        (w.origin = I),
          (w.originPoint = mix(S.min, S.max, w.origin)),
          (w.scale = calcLength(C) / calcLength(S)),
          (isNear(w.scale, 1, 1e-4) || isNaN(w.scale)) && (w.scale = 1),
          (w.translate = mix(C.min, C.max, w.origin) - w.originPoint),
          (isNear(w.translate) || isNaN(w.translate)) && (w.translate = 0);
      }
      function calcBoxDelta(w, S, C, I) {
        calcAxisDelta(w.x, S.x, C.x, I ? I.originX : void 0), calcAxisDelta(w.y, S.y, C.y, I ? I.originY : void 0);
      }
      function calcRelativeAxis(w, S, C) {
        (w.min = C.min + S.min), (w.max = w.min + calcLength(S));
      }
      function calcRelativeBox(w, S, C) {
        calcRelativeAxis(w.x, S.x, C.x), calcRelativeAxis(w.y, S.y, C.y);
      }
      function calcRelativeAxisPosition(w, S, C) {
        (w.min = S.min - C.min), (w.max = w.min + calcLength(S));
      }
      function calcRelativePosition(w, S, C) {
        calcRelativeAxisPosition(w.x, S.x, C.x), calcRelativeAxisPosition(w.y, S.y, C.y);
      }
      function applyConstraints(w, { min: S, max: C }, I) {
        return (
          void 0 !== S && w < S
            ? (w = I ? mix(S, w, I.min) : Math.max(w, S))
            : void 0 !== C && w > C && (w = I ? mix(C, w, I.max) : Math.min(w, C)),
          w
        );
      }
      function calcRelativeAxisConstraints(w, S, C) {
        return { min: void 0 !== S ? w.min + S : void 0, max: void 0 !== C ? w.max + C - (w.max - w.min) : void 0 };
      }
      function calcRelativeConstraints(w, { top: S, left: C, bottom: I, right: $ }) {
        return { x: calcRelativeAxisConstraints(w.x, C, $), y: calcRelativeAxisConstraints(w.y, S, I) };
      }
      function calcViewportAxisConstraints(w, S) {
        let C = S.min - w.min,
          I = S.max - w.max;
        return S.max - S.min < w.max - w.min && ([C, I] = [I, C]), { min: C, max: I };
      }
      function calcViewportConstraints(w, S) {
        return { x: calcViewportAxisConstraints(w.x, S.x), y: calcViewportAxisConstraints(w.y, S.y) };
      }
      function constraints_calcOrigin(w, S) {
        let C = 0.5,
          I = calcLength(w),
          $ = calcLength(S);
        return (
          $ > I ? (C = progress(S.min, S.max - I, w.min)) : I > $ && (C = progress(w.min, w.max - $, S.min)),
          clamp(0, 1, C)
        );
      }
      function rebaseAxisConstraints(w, S) {
        let C = {};
        return void 0 !== S.min && (C.min = S.min - w.min), void 0 !== S.max && (C.max = S.max - w.min), C;
      }
      function resolveDragElastic(w = 0.35) {
        return (
          !1 === w ? (w = 0) : !0 === w && (w = 0.35),
          { x: resolveAxisElastic(w, 'left', 'right'), y: resolveAxisElastic(w, 'top', 'bottom') }
        );
      }
      function resolveAxisElastic(w, S, C) {
        return { min: resolvePointElastic(w, S), max: resolvePointElastic(w, C) };
      }
      function resolvePointElastic(w, S) {
        return 'number' == typeof w ? w : w[S] || 0;
      }
      let createAxisDelta = () => ({ translate: 0, scale: 1, origin: 0, originPoint: 0 }),
        createDelta = () => ({ x: createAxisDelta(), y: createAxisDelta() }),
        createAxis = () => ({ min: 0, max: 0 }),
        createBox = () => ({ x: createAxis(), y: createAxis() });
      function eachAxis(w) {
        return [w('x'), w('y')];
      }
      function convertBoundingBoxToBox({ top: w, left: S, right: C, bottom: I }) {
        return { x: { min: S, max: C }, y: { min: w, max: I } };
      }
      function convertBoxToBoundingBox({ x: w, y: S }) {
        return { top: S.min, right: w.max, bottom: S.max, left: w.min };
      }
      function transformBoxPoints(w, S) {
        if (!S) return w;
        let C = S({ x: w.left, y: w.top }),
          I = S({ x: w.right, y: w.bottom });
        return { top: C.y, left: C.x, bottom: I.y, right: I.x };
      }
      function isIdentityScale(w) {
        return void 0 === w || 1 === w;
      }
      function hasScale({ scale: w, scaleX: S, scaleY: C }) {
        return !isIdentityScale(w) || !isIdentityScale(S) || !isIdentityScale(C);
      }
      function hasTransform(w) {
        return hasScale(w) || has2DTranslate(w) || w.z || w.rotate || w.rotateX || w.rotateY;
      }
      function has2DTranslate(w) {
        var S, C;
        return ((S = w.x) && '0%' !== S) || ((C = w.y) && '0%' !== C);
      }
      function applyPointDelta(w, S, C, I, $) {
        return void 0 !== $ && (w = I + $ * (w - I)), I + C * (w - I) + S;
      }
      function applyAxisDelta(w, S = 0, C = 1, I, $) {
        (w.min = applyPointDelta(w.min, S, C, I, $)), (w.max = applyPointDelta(w.max, S, C, I, $));
      }
      function applyBoxDelta(w, { x: S, y: C }) {
        applyAxisDelta(w.x, S.translate, S.scale, S.originPoint),
          applyAxisDelta(w.y, C.translate, C.scale, C.originPoint);
      }
      function applyTreeDeltas(w, S, C, I = !1) {
        let $, er;
        let en = C.length;
        if (en) {
          S.x = S.y = 1;
          for (let ei = 0; ei < en; ei++) {
            er = ($ = C[ei]).projectionDelta;
            let en = $.instance;
            (!en || !en.style || 'contents' !== en.style.display) &&
              (I &&
                $.options.layoutScroll &&
                $.scroll &&
                $ !== $.root &&
                transformBox(w, { x: -$.scroll.offset.x, y: -$.scroll.offset.y }),
              er && ((S.x *= er.x.scale), (S.y *= er.y.scale), applyBoxDelta(w, er)),
              I && hasTransform($.latestValues) && transformBox(w, $.latestValues));
          }
          (S.x = snapToDefault(S.x)), (S.y = snapToDefault(S.y));
        }
      }
      function snapToDefault(w) {
        return Number.isInteger(w) ? w : w > 1.0000000000001 || w < 0.999999999999 ? w : 1;
      }
      function translateAxis(w, S) {
        (w.min = w.min + S), (w.max = w.max + S);
      }
      function transformAxis(w, S, [C, I, $]) {
        let er = void 0 !== S[$] ? S[$] : 0.5,
          en = mix(w.min, w.max, er);
        applyAxisDelta(w, S[C], S[I], en, S.scale);
      }
      let tQ = ['x', 'scaleX', 'originX'],
        t0 = ['y', 'scaleY', 'originY'];
      function transformBox(w, S) {
        transformAxis(w.x, S, tQ), transformAxis(w.y, S, t0);
      }
      function measureViewportBox(w, S) {
        return convertBoundingBoxToBox(transformBoxPoints(w.getBoundingClientRect(), S));
      }
      function measurePageBox(w, S, C) {
        let I = measureViewportBox(w, C),
          { scroll: $ } = S;
        return $ && (translateAxis(I.x, $.offset.x), translateAxis(I.y, $.offset.y)), I;
      }
      let t1 = new WeakMap();
      let VisualElementDragControls = class VisualElementDragControls {
        constructor(w) {
          (this.openGlobalLock = null),
            (this.isDragging = !1),
            (this.currentDirection = null),
            (this.originPoint = { x: 0, y: 0 }),
            (this.constraints = !1),
            (this.hasMutatedConstraints = !1),
            (this.elastic = createBox()),
            (this.visualElement = w);
        }
        start(w, { snapToCursor: S = !1 } = {}) {
          let { presenceContext: C } = this.visualElement;
          (C && !1 === C.isPresent) ||
            (this.panSession = new PanSession(
              w,
              {
                onSessionStart: (w) => {
                  this.stopAnimation(), S && this.snapToCursor(extractEventInfo(w, 'page').point);
                },
                onStart: (w, S) => {
                  let { drag: C, dragPropagation: I, onDragStart: $ } = this.getProps();
                  if (
                    C &&
                    !I &&
                    (this.openGlobalLock && this.openGlobalLock(),
                    (this.openGlobalLock = getGlobalLock(C)),
                    !this.openGlobalLock)
                  )
                    return;
                  (this.isDragging = !0),
                    (this.currentDirection = null),
                    this.resolveConstraints(),
                    this.visualElement.projection &&
                      ((this.visualElement.projection.isAnimationBlocked = !0),
                      (this.visualElement.projection.target = void 0)),
                    eachAxis((w) => {
                      let S = this.getAxisMotionValue(w).get() || 0;
                      if (eJ.test(S)) {
                        let { projection: C } = this.visualElement;
                        if (C && C.layout) {
                          let I = C.layout.layoutBox[w];
                          if (I) {
                            let w = calcLength(I);
                            S = w * (parseFloat(S) / 100);
                          }
                        }
                      }
                      this.originPoint[w] = S;
                    }),
                    $ && tr.update(() => $(w, S), !1, !0);
                  let { animationState: er } = this.visualElement;
                  er && er.setActive('whileDrag', !0);
                },
                onMove: (w, S) => {
                  let { dragPropagation: C, dragDirectionLock: I, onDirectionLock: $, onDrag: er } = this.getProps();
                  if (!C && !this.openGlobalLock) return;
                  let { offset: en } = S;
                  if (I && null === this.currentDirection) {
                    (this.currentDirection = getCurrentDirection(en)),
                      null !== this.currentDirection && $ && $(this.currentDirection);
                    return;
                  }
                  this.updateAxis('x', S.point, en),
                    this.updateAxis('y', S.point, en),
                    this.visualElement.render(),
                    er && er(w, S);
                },
                onSessionEnd: (w, S) => this.stop(w, S)
              },
              { transformPagePoint: this.visualElement.getTransformPagePoint() }
            ));
        }
        stop(w, S) {
          let C = this.isDragging;
          if ((this.cancel(), !C)) return;
          let { velocity: I } = S;
          this.startAnimation(I);
          let { onDragEnd: $ } = this.getProps();
          $ && tr.update(() => $(w, S));
        }
        cancel() {
          this.isDragging = !1;
          let { projection: w, animationState: S } = this.visualElement;
          w && (w.isAnimationBlocked = !1), this.panSession && this.panSession.end(), (this.panSession = void 0);
          let { dragPropagation: C } = this.getProps();
          !C && this.openGlobalLock && (this.openGlobalLock(), (this.openGlobalLock = null)),
            S && S.setActive('whileDrag', !1);
        }
        updateAxis(w, S, C) {
          let { drag: I } = this.getProps();
          if (!C || !shouldDrag(w, I, this.currentDirection)) return;
          let $ = this.getAxisMotionValue(w),
            er = this.originPoint[w] + C[w];
          this.constraints && this.constraints[w] && (er = applyConstraints(er, this.constraints[w], this.elastic[w])),
            $.set(er);
        }
        resolveConstraints() {
          let { dragConstraints: w, dragElastic: S } = this.getProps(),
            { layout: C } = this.visualElement.projection || {},
            I = this.constraints;
          w && isRefObject(w)
            ? this.constraints || (this.constraints = this.resolveRefConstraints())
            : w && C
            ? (this.constraints = calcRelativeConstraints(C.layoutBox, w))
            : (this.constraints = !1),
            (this.elastic = resolveDragElastic(S)),
            I !== this.constraints &&
              C &&
              this.constraints &&
              !this.hasMutatedConstraints &&
              eachAxis((w) => {
                this.getAxisMotionValue(w) &&
                  (this.constraints[w] = rebaseAxisConstraints(C.layoutBox[w], this.constraints[w]));
              });
        }
        resolveRefConstraints() {
          let { dragConstraints: w, onMeasureDragConstraints: S } = this.getProps();
          if (!w || !isRefObject(w)) return !1;
          let C = w.current;
          noop_noop(
            null !== C,
            "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop."
          );
          let { projection: I } = this.visualElement;
          if (!I || !I.layout) return !1;
          let $ = measurePageBox(C, I.root, this.visualElement.getTransformPagePoint()),
            er = calcViewportConstraints(I.layout.layoutBox, $);
          if (S) {
            let w = S(convertBoxToBoundingBox(er));
            (this.hasMutatedConstraints = !!w), w && (er = convertBoundingBoxToBox(w));
          }
          return er;
        }
        startAnimation(w) {
          let {
              drag: S,
              dragMomentum: C,
              dragElastic: I,
              dragTransition: $,
              dragSnapToOrigin: er,
              onDragTransitionEnd: en
            } = this.getProps(),
            ei = this.constraints || {},
            eo = eachAxis((en) => {
              if (!shouldDrag(en, S, this.currentDirection)) return;
              let eo = (ei && ei[en]) || {};
              er && (eo = { min: 0, max: 0 });
              let es = {
                type: 'inertia',
                velocity: C ? w[en] : 0,
                bounceStiffness: I ? 200 : 1e6,
                bounceDamping: I ? 40 : 1e7,
                timeConstant: 750,
                restDelta: 1,
                restSpeed: 10,
                ...$,
                ...eo
              };
              return this.startAxisValueAnimation(en, es);
            });
          return Promise.all(eo).then(en);
        }
        startAxisValueAnimation(w, S) {
          let C = this.getAxisMotionValue(w);
          return C.start(animateMotionValue(w, C, 0, S));
        }
        stopAnimation() {
          eachAxis((w) => this.getAxisMotionValue(w).stop());
        }
        getAxisMotionValue(w) {
          let S = '_drag' + w.toUpperCase(),
            C = this.visualElement.getProps(),
            I = C[S];
          return I || this.visualElement.getValue(w, (C.initial ? C.initial[w] : void 0) || 0);
        }
        snapToCursor(w) {
          eachAxis((S) => {
            let { drag: C } = this.getProps();
            if (!shouldDrag(S, C, this.currentDirection)) return;
            let { projection: I } = this.visualElement,
              $ = this.getAxisMotionValue(S);
            if (I && I.layout) {
              let { min: C, max: er } = I.layout.layoutBox[S];
              $.set(w[S] - mix(C, er, 0.5));
            }
          });
        }
        scalePositionWithinConstraints() {
          if (!this.visualElement.current) return;
          let { drag: w, dragConstraints: S } = this.getProps(),
            { projection: C } = this.visualElement;
          if (!isRefObject(S) || !C || !this.constraints) return;
          this.stopAnimation();
          let I = { x: 0, y: 0 };
          eachAxis((w) => {
            let S = this.getAxisMotionValue(w);
            if (S) {
              let C = S.get();
              I[w] = constraints_calcOrigin({ min: C, max: C }, this.constraints[w]);
            }
          });
          let { transformTemplate: $ } = this.visualElement.getProps();
          (this.visualElement.current.style.transform = $ ? $({}, '') : 'none'),
            C.root && C.root.updateScroll(),
            C.updateLayout(),
            this.resolveConstraints(),
            eachAxis((S) => {
              if (!shouldDrag(S, w, null)) return;
              let C = this.getAxisMotionValue(S),
                { min: $, max: er } = this.constraints[S];
              C.set(mix($, er, I[S]));
            });
        }
        addListeners() {
          if (!this.visualElement.current) return;
          t1.set(this.visualElement, this);
          let w = this.visualElement.current,
            S = addPointerEvent(w, 'pointerdown', (w) => {
              let { drag: S, dragListener: C = !0 } = this.getProps();
              S && C && this.start(w);
            }),
            measureDragConstraints = () => {
              let { dragConstraints: w } = this.getProps();
              isRefObject(w) && (this.constraints = this.resolveRefConstraints());
            },
            { projection: C } = this.visualElement,
            I = C.addEventListener('measure', measureDragConstraints);
          C && !C.layout && (C.root && C.root.updateScroll(), C.updateLayout()), measureDragConstraints();
          let $ = addDomEvent(window, 'resize', () => this.scalePositionWithinConstraints()),
            er = C.addEventListener('didUpdate', ({ delta: w, hasLayoutChanged: S }) => {
              this.isDragging &&
                S &&
                (eachAxis((S) => {
                  let C = this.getAxisMotionValue(S);
                  C && ((this.originPoint[S] += w[S].translate), C.set(C.get() + w[S].translate));
                }),
                this.visualElement.render());
            });
          return () => {
            $(), S(), I(), er && er();
          };
        }
        getProps() {
          let w = this.visualElement.getProps(),
            {
              drag: S = !1,
              dragDirectionLock: C = !1,
              dragPropagation: I = !1,
              dragConstraints: $ = !1,
              dragElastic: er = 0.35,
              dragMomentum: en = !0
            } = w;
          return {
            ...w,
            drag: S,
            dragDirectionLock: C,
            dragPropagation: I,
            dragConstraints: $,
            dragElastic: er,
            dragMomentum: en
          };
        }
      };
      function shouldDrag(w, S, C) {
        return (!0 === S || S === w) && (null === C || C === w);
      }
      function getCurrentDirection(w, S = 10) {
        let C = null;
        return Math.abs(w.y) > S ? (C = 'y') : Math.abs(w.x) > S && (C = 'x'), C;
      }
      let DragGesture = class DragGesture extends Feature {
        constructor(w) {
          super(w),
            (this.removeGroupControls = noop_noop),
            (this.removeListeners = noop_noop),
            (this.controls = new VisualElementDragControls(w));
        }
        mount() {
          let { dragControls: w } = this.node.getProps();
          w && (this.removeGroupControls = w.subscribe(this.controls)),
            (this.removeListeners = this.controls.addListeners() || noop_noop);
        }
        unmount() {
          this.removeGroupControls(), this.removeListeners();
        }
      };
      let asyncHandler = (w) => (S, C) => {
        w && tr.update(() => w(S, C));
      };
      let PanGesture = class PanGesture extends Feature {
        constructor() {
          super(...arguments), (this.removePointerDownListener = noop_noop);
        }
        onPointerDown(w) {
          this.session = new PanSession(w, this.createPanHandlers(), {
            transformPagePoint: this.node.getTransformPagePoint()
          });
        }
        createPanHandlers() {
          let { onPanSessionStart: w, onPanStart: S, onPan: C, onPanEnd: I } = this.node.getProps();
          return {
            onSessionStart: asyncHandler(w),
            onStart: asyncHandler(S),
            onMove: C,
            onEnd: (w, S) => {
              delete this.session, I && tr.update(() => I(w, S));
            }
          };
        }
        mount() {
          this.removePointerDownListener = addPointerEvent(this.node.current, 'pointerdown', (w) =>
            this.onPointerDown(w)
          );
        }
        update() {
          this.session && this.session.updateHandlers(this.createPanHandlers());
        }
        unmount() {
          this.removePointerDownListener(), this.session && this.session.end();
        }
      };
      let t2 = { hasAnimatedSinceResize: !0, hasEverUpdated: !1 };
      function pixelsToPercent(w, S) {
        return S.max === S.min ? 0 : (w / (S.max - S.min)) * 100;
      }
      let t5 = {
        correct: (w, S) => {
          if (!S.target) return w;
          if ('string' == typeof w) {
            if (!eQ.test(w)) return w;
            w = parseFloat(w);
          }
          let C = pixelsToPercent(w, S.target.x),
            I = pixelsToPercent(w, S.target.y);
          return `${C}% ${I}%`;
        }
      };
      let MeasureLayoutWithContext = class MeasureLayoutWithContext extends eu.Component {
        componentDidMount() {
          let { visualElement: w, layoutGroup: S, switchLayoutGroup: C, layoutId: I } = this.props,
            { projection: $ } = w;
          addScaleCorrector(t3),
            $ &&
              (S.group && S.group.add($),
              C && C.register && I && C.register($),
              $.root.didUpdate(),
              $.addEventListener('animationComplete', () => {
                this.safeToRemove();
              }),
              $.setOptions({ ...$.options, onExitComplete: () => this.safeToRemove() })),
            (t2.hasEverUpdated = !0);
        }
        getSnapshotBeforeUpdate(w) {
          let { layoutDependency: S, visualElement: C, drag: I, isPresent: $ } = this.props,
            er = C.projection;
          return (
            er &&
              ((er.isPresent = $),
              I || w.layoutDependency !== S || void 0 === S ? er.willUpdate() : this.safeToRemove(),
              w.isPresent === $ ||
                ($
                  ? er.promote()
                  : er.relegate() ||
                    tr.postRender(() => {
                      let w = er.getStack();
                      (w && w.members.length) || this.safeToRemove();
                    }))),
            null
          );
        }
        componentDidUpdate() {
          let { projection: w } = this.props.visualElement;
          w &&
            (w.root.didUpdate(),
            queueMicrotask(() => {
              !w.currentAnimation && w.isLead() && this.safeToRemove();
            }));
        }
        componentWillUnmount() {
          let { visualElement: w, layoutGroup: S, switchLayoutGroup: C } = this.props,
            { projection: I } = w;
          I && (I.scheduleCheckAfterUnmount(), S && S.group && S.group.remove(I), C && C.deregister && C.deregister(I));
        }
        safeToRemove() {
          let { safeToRemove: w } = this.props;
          w && w();
        }
        render() {
          return null;
        }
      };
      function MeasureLayout(w) {
        let [S, C] = usePresence(),
          I = (0, eu.useContext)(eR);
        return eu.createElement(MeasureLayoutWithContext, {
          ...w,
          layoutGroup: I,
          switchLayoutGroup: (0, eu.useContext)(eO),
          isPresent: S,
          safeToRemove: C
        });
      }
      let t3 = {
          borderRadius: {
            ...t5,
            applyTo: [
              'borderTopLeftRadius',
              'borderTopRightRadius',
              'borderBottomLeftRadius',
              'borderBottomRightRadius'
            ]
          },
          borderTopLeftRadius: t5,
          borderTopRightRadius: t5,
          borderBottomLeftRadius: t5,
          borderBottomRightRadius: t5,
          boxShadow: {
            correct: (w, { treeScale: S, projectionDelta: C }) => {
              let I = tO.parse(w);
              if (I.length > 5) return w;
              let $ = tO.createTransformer(w),
                er = 'number' != typeof I[0] ? 1 : 0,
                en = C.x.scale * S.x,
                ei = C.y.scale * S.y;
              (I[0 + er] /= en), (I[1 + er] /= ei);
              let eo = mix(en, ei, 0.5);
              return (
                'number' == typeof I[2 + er] && (I[2 + er] /= eo),
                'number' == typeof I[3 + er] && (I[3 + er] /= eo),
                $(I)
              );
            }
          }
        },
        t4 = ['TopLeft', 'TopRight', 'BottomLeft', 'BottomRight'],
        t6 = t4.length,
        asNumber = (w) => ('string' == typeof w ? parseFloat(w) : w),
        isPx = (w) => 'number' == typeof w || eQ.test(w);
      function mixValues(w, S, C, I, $, er) {
        $
          ? ((w.opacity = mix(0, void 0 !== C.opacity ? C.opacity : 1, t8(I))),
            (w.opacityExit = mix(void 0 !== S.opacity ? S.opacity : 1, 0, t9(I))))
          : er && (w.opacity = mix(void 0 !== S.opacity ? S.opacity : 1, void 0 !== C.opacity ? C.opacity : 1, I));
        for (let $ = 0; $ < t6; $++) {
          let er = `border${t4[$]}Radius`,
            en = getRadius(S, er),
            ei = getRadius(C, er);
          if (void 0 === en && void 0 === ei) continue;
          en || (en = 0), ei || (ei = 0);
          let eo = 0 === en || 0 === ei || isPx(en) === isPx(ei);
          eo
            ? ((w[er] = Math.max(mix(asNumber(en), asNumber(ei), I), 0)),
              (eJ.test(ei) || eJ.test(en)) && (w[er] += '%'))
            : (w[er] = ei);
        }
        (S.rotate || C.rotate) && (w.rotate = mix(S.rotate || 0, C.rotate || 0, I));
      }
      function getRadius(w, S) {
        return void 0 !== w[S] ? w[S] : w.borderRadius;
      }
      let t8 = compress(0, 0.5, tb),
        t9 = compress(0.5, 0.95, noop_noop);
      function compress(w, S, C) {
        return (I) => (I < w ? 0 : I > S ? 1 : C(progress(w, S, I)));
      }
      function copyAxisInto(w, S) {
        (w.min = S.min), (w.max = S.max);
      }
      function copyBoxInto(w, S) {
        copyAxisInto(w.x, S.x), copyAxisInto(w.y, S.y);
      }
      function removePointDelta(w, S, C, I, $) {
        return (w -= S), (w = I + (1 / C) * (w - I)), void 0 !== $ && (w = I + (1 / $) * (w - I)), w;
      }
      function removeAxisDelta(w, S = 0, C = 1, I = 0.5, $, er = w, en = w) {
        if (eJ.test(S)) {
          S = parseFloat(S);
          let w = mix(en.min, en.max, S / 100);
          S = w - en.min;
        }
        if ('number' != typeof S) return;
        let ei = mix(er.min, er.max, I);
        w === er && (ei -= S),
          (w.min = removePointDelta(w.min, S, C, ei, $)),
          (w.max = removePointDelta(w.max, S, C, ei, $));
      }
      function removeAxisTransforms(w, S, [C, I, $], er, en) {
        removeAxisDelta(w, S[C], S[I], S[$], S.scale, er, en);
      }
      let t7 = ['x', 'scaleX', 'originX'],
        rr = ['y', 'scaleY', 'originY'];
      function removeBoxTransforms(w, S, C, I) {
        removeAxisTransforms(w.x, S, t7, C ? C.x : void 0, I ? I.x : void 0),
          removeAxisTransforms(w.y, S, rr, C ? C.y : void 0, I ? I.y : void 0);
      }
      function isAxisDeltaZero(w) {
        return 0 === w.translate && 1 === w.scale;
      }
      function isDeltaZero(w) {
        return isAxisDeltaZero(w.x) && isAxisDeltaZero(w.y);
      }
      function boxEquals(w, S) {
        return w.x.min === S.x.min && w.x.max === S.x.max && w.y.min === S.y.min && w.y.max === S.y.max;
      }
      function boxEqualsRounded(w, S) {
        return (
          Math.round(w.x.min) === Math.round(S.x.min) &&
          Math.round(w.x.max) === Math.round(S.x.max) &&
          Math.round(w.y.min) === Math.round(S.y.min) &&
          Math.round(w.y.max) === Math.round(S.y.max)
        );
      }
      function aspectRatio(w) {
        return calcLength(w.x) / calcLength(w.y);
      }
      let NodeStack = class NodeStack {
        constructor() {
          this.members = [];
        }
        add(w) {
          addUniqueItem(this.members, w), w.scheduleRender();
        }
        remove(w) {
          if ((removeItem(this.members, w), w === this.prevLead && (this.prevLead = void 0), w === this.lead)) {
            let w = this.members[this.members.length - 1];
            w && this.promote(w);
          }
        }
        relegate(w) {
          let S;
          let C = this.members.findIndex((S) => w === S);
          if (0 === C) return !1;
          for (let w = C; w >= 0; w--) {
            let C = this.members[w];
            if (!1 !== C.isPresent) {
              S = C;
              break;
            }
          }
          return !!S && (this.promote(S), !0);
        }
        promote(w, S) {
          let C = this.lead;
          if (w !== C && ((this.prevLead = C), (this.lead = w), w.show(), C)) {
            C.instance && C.scheduleRender(),
              w.scheduleRender(),
              (w.resumeFrom = C),
              S && (w.resumeFrom.preserveOpacity = !0),
              C.snapshot &&
                ((w.snapshot = C.snapshot), (w.snapshot.latestValues = C.animationValues || C.latestValues)),
              w.root && w.root.isUpdating && (w.isLayoutDirty = !0);
            let { crossfade: I } = w.options;
            !1 === I && C.hide();
          }
        }
        exitAnimationComplete() {
          this.members.forEach((w) => {
            let { options: S, resumingFrom: C } = w;
            S.onExitComplete && S.onExitComplete(), C && C.options.onExitComplete && C.options.onExitComplete();
          });
        }
        scheduleRender() {
          this.members.forEach((w) => {
            w.instance && w.scheduleRender(!1);
          });
        }
        removeLeadSnapshot() {
          this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
        }
      };
      function buildProjectionTransform(w, S, C) {
        let I = '',
          $ = w.x.translate / S.x,
          er = w.y.translate / S.y;
        if (
          (($ || er) && (I = `translate3d(${$}px, ${er}px, 0) `),
          (1 !== S.x || 1 !== S.y) && (I += `scale(${1 / S.x}, ${1 / S.y}) `),
          C)
        ) {
          let { rotate: w, rotateX: S, rotateY: $ } = C;
          w && (I += `rotate(${w}deg) `), S && (I += `rotateX(${S}deg) `), $ && (I += `rotateY(${$}deg) `);
        }
        let en = w.x.scale * S.x,
          ei = w.y.scale * S.y;
        return (1 !== en || 1 !== ei) && (I += `scale(${en}, ${ei})`), I || 'none';
      }
      let compareByDepth = (w, S) => w.depth - S.depth;
      let FlatTree = class FlatTree {
        constructor() {
          (this.children = []), (this.isDirty = !1);
        }
        add(w) {
          addUniqueItem(this.children, w), (this.isDirty = !0);
        }
        remove(w) {
          removeItem(this.children, w), (this.isDirty = !0);
        }
        forEach(w) {
          this.isDirty && this.children.sort(compareByDepth), (this.isDirty = !1), this.children.forEach(w);
        }
      };
      function delay(w, S) {
        let C = performance.now(),
          checkElapsed = ({ timestamp: I }) => {
            let $ = I - C;
            $ >= S && (tn(checkElapsed), w($ - S));
          };
        return tr.read(checkElapsed, !0), () => tn(checkElapsed);
      }
      function record(w) {
        window.MotionDebug && window.MotionDebug.record(w);
      }
      function isSVGElement(w) {
        return w instanceof SVGElement && 'svg' !== w.tagName;
      }
      function animateSingleValue(w, S, C) {
        let I = isMotionValue(w) ? w : motionValue(w);
        return I.start(animateMotionValue('', I, S, C)), I.animation;
      }
      let rn = ['', 'X', 'Y', 'Z'],
        ri = 0,
        ra = { type: 'projectionFrame', totalNodes: 0, resolvedTargetDeltas: 0, recalculatedProjection: 0 };
      function createProjectionNode({
        attachResizeListener: w,
        defaultParent: S,
        measureScroll: C,
        checkIsScrollRoot: I,
        resetTransform: $
      }) {
        return class {
          constructor(w = {}, C = null == S ? void 0 : S()) {
            (this.id = ri++),
              (this.animationId = 0),
              (this.children = new Set()),
              (this.options = {}),
              (this.isTreeAnimating = !1),
              (this.isAnimationBlocked = !1),
              (this.isLayoutDirty = !1),
              (this.isProjectionDirty = !1),
              (this.isSharedProjectionDirty = !1),
              (this.isTransformDirty = !1),
              (this.updateManuallyBlocked = !1),
              (this.updateBlockedByResize = !1),
              (this.isUpdating = !1),
              (this.isSVG = !1),
              (this.needsReset = !1),
              (this.shouldResetTransform = !1),
              (this.treeScale = { x: 1, y: 1 }),
              (this.eventHandlers = new Map()),
              (this.hasTreeAnimated = !1),
              (this.updateScheduled = !1),
              (this.checkUpdateFailed = () => {
                this.isUpdating && ((this.isUpdating = !1), this.clearAllSnapshots());
              }),
              (this.updateProjection = () => {
                (ra.totalNodes = ra.resolvedTargetDeltas = ra.recalculatedProjection = 0),
                  this.nodes.forEach(propagateDirtyNodes),
                  this.nodes.forEach(resolveTargetDelta),
                  this.nodes.forEach(calcProjection),
                  this.nodes.forEach(cleanDirtyNodes),
                  record(ra);
              }),
              (this.hasProjected = !1),
              (this.isVisible = !0),
              (this.animationProgress = 0),
              (this.sharedNodes = new Map()),
              (this.latestValues = w),
              (this.root = C ? C.root || C : this),
              (this.path = C ? [...C.path, C] : []),
              (this.parent = C),
              (this.depth = C ? C.depth + 1 : 0);
            for (let w = 0; w < this.path.length; w++) this.path[w].shouldResetTransform = !0;
            this.root === this && (this.nodes = new FlatTree());
          }
          addEventListener(w, S) {
            return (
              this.eventHandlers.has(w) || this.eventHandlers.set(w, new SubscriptionManager()),
              this.eventHandlers.get(w).add(S)
            );
          }
          notifyListeners(w, ...S) {
            let C = this.eventHandlers.get(w);
            C && C.notify(...S);
          }
          hasListeners(w) {
            return this.eventHandlers.has(w);
          }
          mount(S, C = this.root.hasTreeAnimated) {
            if (this.instance) return;
            (this.isSVG = isSVGElement(S)), (this.instance = S);
            let { layoutId: I, layout: $, visualElement: er } = this.options;
            if (
              (er && !er.current && er.mount(S),
              this.root.nodes.add(this),
              this.parent && this.parent.children.add(this),
              C && ($ || I) && (this.isLayoutDirty = !0),
              w)
            ) {
              let C;
              let resizeUnblockUpdate = () => (this.root.updateBlockedByResize = !1);
              w(S, () => {
                (this.root.updateBlockedByResize = !0),
                  C && C(),
                  (C = delay(resizeUnblockUpdate, 250)),
                  t2.hasAnimatedSinceResize && ((t2.hasAnimatedSinceResize = !1), this.nodes.forEach(finishAnimation));
              });
            }
            I && this.root.registerSharedNode(I, this),
              !1 !== this.options.animate &&
                er &&
                (I || $) &&
                this.addEventListener(
                  'didUpdate',
                  ({ delta: w, hasLayoutChanged: S, hasRelativeTargetChanged: C, layout: I }) => {
                    if (this.isTreeAnimationBlocked()) {
                      (this.target = void 0), (this.relativeTarget = void 0);
                      return;
                    }
                    let $ = this.options.transition || er.getDefaultTransition() || ro,
                      { onLayoutAnimationStart: en, onLayoutAnimationComplete: ei } = er.getProps(),
                      eo = !this.targetLayout || !boxEqualsRounded(this.targetLayout, I) || C,
                      es = !S && C;
                    if (
                      this.options.layoutRoot ||
                      (this.resumeFrom && this.resumeFrom.instance) ||
                      es ||
                      (S && (eo || !this.currentAnimation))
                    ) {
                      this.resumeFrom &&
                        ((this.resumingFrom = this.resumeFrom), (this.resumingFrom.resumingFrom = void 0)),
                        this.setAnimationOrigin(w, es);
                      let S = { ...getValueTransition($, 'layout'), onPlay: en, onComplete: ei };
                      (er.shouldReduceMotion || this.options.layoutRoot) && ((S.delay = 0), (S.type = !1)),
                        this.startAnimation(S);
                    } else
                      S || finishAnimation(this),
                        this.isLead() && this.options.onExitComplete && this.options.onExitComplete();
                    this.targetLayout = I;
                  }
                );
          }
          unmount() {
            this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
            let w = this.getStack();
            w && w.remove(this),
              this.parent && this.parent.children.delete(this),
              (this.instance = void 0),
              tn(this.updateProjection);
          }
          blockUpdate() {
            this.updateManuallyBlocked = !0;
          }
          unblockUpdate() {
            this.updateManuallyBlocked = !1;
          }
          isUpdateBlocked() {
            return this.updateManuallyBlocked || this.updateBlockedByResize;
          }
          isTreeAnimationBlocked() {
            return this.isAnimationBlocked || (this.parent && this.parent.isTreeAnimationBlocked()) || !1;
          }
          startUpdate() {
            !this.isUpdateBlocked() &&
              ((this.isUpdating = !0), this.nodes && this.nodes.forEach(resetRotation), this.animationId++);
          }
          getTransformTemplate() {
            let { visualElement: w } = this.options;
            return w && w.getProps().transformTemplate;
          }
          willUpdate(w = !0) {
            if (((this.root.hasTreeAnimated = !0), this.root.isUpdateBlocked())) {
              this.options.onExitComplete && this.options.onExitComplete();
              return;
            }
            if ((this.root.isUpdating || this.root.startUpdate(), this.isLayoutDirty)) return;
            this.isLayoutDirty = !0;
            for (let w = 0; w < this.path.length; w++) {
              let S = this.path[w];
              (S.shouldResetTransform = !0), S.updateScroll('snapshot'), S.options.layoutRoot && S.willUpdate(!1);
            }
            let { layoutId: S, layout: C } = this.options;
            if (void 0 === S && !C) return;
            let I = this.getTransformTemplate();
            (this.prevTransformTemplateValue = I ? I(this.latestValues, '') : void 0),
              this.updateSnapshot(),
              w && this.notifyListeners('willUpdate');
          }
          update() {
            this.updateScheduled = !1;
            let w = this.isUpdateBlocked();
            if (w) {
              this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(clearMeasurements);
              return;
            }
            this.isUpdating || this.nodes.forEach(clearIsLayoutDirty),
              (this.isUpdating = !1),
              this.nodes.forEach(resetTransformStyle),
              this.nodes.forEach(updateLayout),
              this.nodes.forEach(notifyLayoutUpdate),
              this.clearAllSnapshots();
            let S = performance.now();
            (ti.delta = clamp(0, 1e3 / 60, S - ti.timestamp)),
              (ti.timestamp = S),
              (ti.isProcessing = !0),
              ta.update.process(ti),
              ta.preRender.process(ti),
              ta.render.process(ti),
              (ti.isProcessing = !1);
          }
          didUpdate() {
            this.updateScheduled || ((this.updateScheduled = !0), queueMicrotask(() => this.update()));
          }
          clearAllSnapshots() {
            this.nodes.forEach(clearSnapshot), this.sharedNodes.forEach(removeLeadSnapshots);
          }
          scheduleUpdateProjection() {
            tr.preRender(this.updateProjection, !1, !0);
          }
          scheduleCheckAfterUnmount() {
            tr.postRender(() => {
              this.isLayoutDirty ? this.root.didUpdate() : this.root.checkUpdateFailed();
            });
          }
          updateSnapshot() {
            !this.snapshot && this.instance && (this.snapshot = this.measure());
          }
          updateLayout() {
            if (
              !this.instance ||
              (this.updateScroll(), !(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty)
            )
              return;
            if (this.resumeFrom && !this.resumeFrom.instance)
              for (let w = 0; w < this.path.length; w++) {
                let S = this.path[w];
                S.updateScroll();
              }
            let w = this.layout;
            (this.layout = this.measure(!1)),
              (this.layoutCorrected = createBox()),
              (this.isLayoutDirty = !1),
              (this.projectionDelta = void 0),
              this.notifyListeners('measure', this.layout.layoutBox);
            let { visualElement: S } = this.options;
            S && S.notify('LayoutMeasure', this.layout.layoutBox, w ? w.layoutBox : void 0);
          }
          updateScroll(w = 'measure') {
            let S = !!(this.options.layoutScroll && this.instance);
            this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === w && (S = !1),
              S &&
                (this.scroll = {
                  animationId: this.root.animationId,
                  phase: w,
                  isRoot: I(this.instance),
                  offset: C(this.instance)
                });
          }
          resetTransform() {
            if (!$) return;
            let w = this.isLayoutDirty || this.shouldResetTransform,
              S = this.projectionDelta && !isDeltaZero(this.projectionDelta),
              C = this.getTransformTemplate(),
              I = C ? C(this.latestValues, '') : void 0,
              er = I !== this.prevTransformTemplateValue;
            w &&
              (S || hasTransform(this.latestValues) || er) &&
              ($(this.instance, I), (this.shouldResetTransform = !1), this.scheduleRender());
          }
          measure(w = !0) {
            let S = this.measurePageBox(),
              C = this.removeElementScroll(S);
            return (
              w && (C = this.removeTransform(C)),
              roundBox(C),
              { animationId: this.root.animationId, measuredBox: S, layoutBox: C, latestValues: {}, source: this.id }
            );
          }
          measurePageBox() {
            let { visualElement: w } = this.options;
            if (!w) return createBox();
            let S = w.measureViewportBox(),
              { scroll: C } = this.root;
            return C && (translateAxis(S.x, C.offset.x), translateAxis(S.y, C.offset.y)), S;
          }
          removeElementScroll(w) {
            let S = createBox();
            copyBoxInto(S, w);
            for (let C = 0; C < this.path.length; C++) {
              let I = this.path[C],
                { scroll: $, options: er } = I;
              if (I !== this.root && $ && er.layoutScroll) {
                if ($.isRoot) {
                  copyBoxInto(S, w);
                  let { scroll: C } = this.root;
                  C && (translateAxis(S.x, -C.offset.x), translateAxis(S.y, -C.offset.y));
                }
                translateAxis(S.x, $.offset.x), translateAxis(S.y, $.offset.y);
              }
            }
            return S;
          }
          applyTransform(w, S = !1) {
            let C = createBox();
            copyBoxInto(C, w);
            for (let w = 0; w < this.path.length; w++) {
              let I = this.path[w];
              !S &&
                I.options.layoutScroll &&
                I.scroll &&
                I !== I.root &&
                transformBox(C, { x: -I.scroll.offset.x, y: -I.scroll.offset.y }),
                hasTransform(I.latestValues) && transformBox(C, I.latestValues);
            }
            return hasTransform(this.latestValues) && transformBox(C, this.latestValues), C;
          }
          removeTransform(w) {
            let S = createBox();
            copyBoxInto(S, w);
            for (let w = 0; w < this.path.length; w++) {
              let C = this.path[w];
              if (!C.instance || !hasTransform(C.latestValues)) continue;
              hasScale(C.latestValues) && C.updateSnapshot();
              let I = createBox(),
                $ = C.measurePageBox();
              copyBoxInto(I, $), removeBoxTransforms(S, C.latestValues, C.snapshot ? C.snapshot.layoutBox : void 0, I);
            }
            return hasTransform(this.latestValues) && removeBoxTransforms(S, this.latestValues), S;
          }
          setTargetDelta(w) {
            (this.targetDelta = w), this.root.scheduleUpdateProjection(), (this.isProjectionDirty = !0);
          }
          setOptions(w) {
            this.options = { ...this.options, ...w, crossfade: void 0 === w.crossfade || w.crossfade };
          }
          clearMeasurements() {
            (this.scroll = void 0),
              (this.layout = void 0),
              (this.snapshot = void 0),
              (this.prevTransformTemplateValue = void 0),
              (this.targetDelta = void 0),
              (this.target = void 0),
              (this.isLayoutDirty = !1);
          }
          forceRelativeParentToResolveTarget() {
            this.relativeParent &&
              this.relativeParent.resolvedRelativeTargetAt !== ti.timestamp &&
              this.relativeParent.resolveTargetDelta(!0);
          }
          resolveTargetDelta(w = !1) {
            var S;
            let C = this.getLead();
            this.isProjectionDirty || (this.isProjectionDirty = C.isProjectionDirty),
              this.isTransformDirty || (this.isTransformDirty = C.isTransformDirty),
              this.isSharedProjectionDirty || (this.isSharedProjectionDirty = C.isSharedProjectionDirty);
            let I = !!this.resumingFrom || this !== C,
              $ = !(
                w ||
                (I && this.isSharedProjectionDirty) ||
                this.isProjectionDirty ||
                (null === (S = this.parent) || void 0 === S ? void 0 : S.isProjectionDirty) ||
                this.attemptToResolveRelativeTarget
              );
            if ($) return;
            let { layout: er, layoutId: en } = this.options;
            if (this.layout && (er || en)) {
              if (((this.resolvedRelativeTargetAt = ti.timestamp), !this.targetDelta && !this.relativeTarget)) {
                let w = this.getClosestProjectingParent();
                w && w.layout && 1 !== this.animationProgress
                  ? ((this.relativeParent = w),
                    this.forceRelativeParentToResolveTarget(),
                    (this.relativeTarget = createBox()),
                    (this.relativeTargetOrigin = createBox()),
                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, w.layout.layoutBox),
                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin))
                  : (this.relativeParent = this.relativeTarget = void 0);
              }
              if (this.relativeTarget || this.targetDelta) {
                if (
                  (this.target || ((this.target = createBox()), (this.targetWithTransforms = createBox())),
                  this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target
                    ? (this.forceRelativeParentToResolveTarget(),
                      calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target))
                    : this.targetDelta
                    ? (this.resumingFrom
                        ? (this.target = this.applyTransform(this.layout.layoutBox))
                        : copyBoxInto(this.target, this.layout.layoutBox),
                      applyBoxDelta(this.target, this.targetDelta))
                    : copyBoxInto(this.target, this.layout.layoutBox),
                  this.attemptToResolveRelativeTarget)
                ) {
                  this.attemptToResolveRelativeTarget = !1;
                  let w = this.getClosestProjectingParent();
                  w &&
                  !!w.resumingFrom == !!this.resumingFrom &&
                  !w.options.layoutScroll &&
                  w.target &&
                  1 !== this.animationProgress
                    ? ((this.relativeParent = w),
                      this.forceRelativeParentToResolveTarget(),
                      (this.relativeTarget = createBox()),
                      (this.relativeTargetOrigin = createBox()),
                      calcRelativePosition(this.relativeTargetOrigin, this.target, w.target),
                      copyBoxInto(this.relativeTarget, this.relativeTargetOrigin))
                    : (this.relativeParent = this.relativeTarget = void 0);
                }
                ra.resolvedTargetDeltas++;
              }
            }
          }
          getClosestProjectingParent() {
            return !this.parent || hasScale(this.parent.latestValues) || has2DTranslate(this.parent.latestValues)
              ? void 0
              : this.parent.isProjecting()
              ? this.parent
              : this.parent.getClosestProjectingParent();
          }
          isProjecting() {
            return !!((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
          }
          calcProjection() {
            var w;
            let S = this.getLead(),
              C = !!this.resumingFrom || this !== S,
              I = !0;
            if (
              ((this.isProjectionDirty ||
                (null === (w = this.parent) || void 0 === w ? void 0 : w.isProjectionDirty)) &&
                (I = !1),
              C && (this.isSharedProjectionDirty || this.isTransformDirty) && (I = !1),
              this.resolvedRelativeTargetAt === ti.timestamp && (I = !1),
              I)
            )
              return;
            let { layout: $, layoutId: er } = this.options;
            if (
              ((this.isTreeAnimating = !!(
                (this.parent && this.parent.isTreeAnimating) ||
                this.currentAnimation ||
                this.pendingAnimation
              )),
              this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0),
              !this.layout || !($ || er))
            )
              return;
            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);
            let en = this.treeScale.x,
              ei = this.treeScale.y;
            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, C),
              S.layout &&
                !S.target &&
                (1 !== this.treeScale.x || 1 !== this.treeScale.y) &&
                (S.target = S.layout.layoutBox);
            let { target: eo } = S;
            if (!eo) {
              this.projectionTransform &&
                ((this.projectionDelta = createDelta()), (this.projectionTransform = 'none'), this.scheduleRender());
              return;
            }
            this.projectionDelta ||
              ((this.projectionDelta = createDelta()), (this.projectionDeltaWithTransform = createDelta()));
            let es = this.projectionTransform;
            calcBoxDelta(this.projectionDelta, this.layoutCorrected, eo, this.latestValues),
              (this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale)),
              (this.projectionTransform !== es || this.treeScale.x !== en || this.treeScale.y !== ei) &&
                ((this.hasProjected = !0), this.scheduleRender(), this.notifyListeners('projectionUpdate', eo)),
              ra.recalculatedProjection++;
          }
          hide() {
            this.isVisible = !1;
          }
          show() {
            this.isVisible = !0;
          }
          scheduleRender(w = !0) {
            if ((this.options.scheduleRender && this.options.scheduleRender(), w)) {
              let w = this.getStack();
              w && w.scheduleRender();
            }
            this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0);
          }
          setAnimationOrigin(w, S = !1) {
            let C;
            let I = this.snapshot,
              $ = I ? I.latestValues : {},
              er = { ...this.latestValues },
              en = createDelta();
            (this.relativeParent && this.relativeParent.options.layoutRoot) ||
              (this.relativeTarget = this.relativeTargetOrigin = void 0),
              (this.attemptToResolveRelativeTarget = !S);
            let ei = createBox(),
              eo = I ? I.source : void 0,
              es = this.layout ? this.layout.source : void 0,
              el = eo !== es,
              ec = this.getStack(),
              eu = !ec || ec.members.length <= 1,
              ed = !!(el && !eu && !0 === this.options.crossfade && !this.path.some(hasOpacityCrossfade));
            (this.animationProgress = 0),
              (this.mixTargetDelta = (S) => {
                let I = S / 1e3;
                mixAxisDelta(en.x, w.x, I),
                  mixAxisDelta(en.y, w.y, I),
                  this.setTargetDelta(en),
                  this.relativeTarget &&
                    this.relativeTargetOrigin &&
                    this.layout &&
                    this.relativeParent &&
                    this.relativeParent.layout &&
                    (calcRelativePosition(ei, this.layout.layoutBox, this.relativeParent.layout.layoutBox),
                    mixBox(this.relativeTarget, this.relativeTargetOrigin, ei, I),
                    C && boxEquals(this.relativeTarget, C) && (this.isProjectionDirty = !1),
                    C || (C = createBox()),
                    copyBoxInto(C, this.relativeTarget)),
                  el && ((this.animationValues = er), mixValues(er, $, this.latestValues, I, ed, eu)),
                  this.root.scheduleUpdateProjection(),
                  this.scheduleRender(),
                  (this.animationProgress = I);
              }),
              this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
          }
          startAnimation(w) {
            this.notifyListeners('animationStart'),
              this.currentAnimation && this.currentAnimation.stop(),
              this.resumingFrom && this.resumingFrom.currentAnimation && this.resumingFrom.currentAnimation.stop(),
              this.pendingAnimation && (tn(this.pendingAnimation), (this.pendingAnimation = void 0)),
              (this.pendingAnimation = tr.update(() => {
                (t2.hasAnimatedSinceResize = !0),
                  (this.currentAnimation = animateSingleValue(0, 1e3, {
                    ...w,
                    onUpdate: (S) => {
                      this.mixTargetDelta(S), w.onUpdate && w.onUpdate(S);
                    },
                    onComplete: () => {
                      w.onComplete && w.onComplete(), this.completeAnimation();
                    }
                  })),
                  this.resumingFrom && (this.resumingFrom.currentAnimation = this.currentAnimation),
                  (this.pendingAnimation = void 0);
              }));
          }
          completeAnimation() {
            this.resumingFrom &&
              ((this.resumingFrom.currentAnimation = void 0), (this.resumingFrom.preserveOpacity = void 0));
            let w = this.getStack();
            w && w.exitAnimationComplete(),
              (this.resumingFrom = this.currentAnimation = this.animationValues = void 0),
              this.notifyListeners('animationComplete');
          }
          finishAnimation() {
            this.currentAnimation && (this.mixTargetDelta && this.mixTargetDelta(1e3), this.currentAnimation.stop()),
              this.completeAnimation();
          }
          applyTransformsToTarget() {
            let w = this.getLead(),
              { targetWithTransforms: S, target: C, layout: I, latestValues: $ } = w;
            if (S && C && I) {
              if (
                this !== w &&
                this.layout &&
                I &&
                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, I.layoutBox)
              ) {
                C = this.target || createBox();
                let S = calcLength(this.layout.layoutBox.x);
                (C.x.min = w.target.x.min), (C.x.max = C.x.min + S);
                let I = calcLength(this.layout.layoutBox.y);
                (C.y.min = w.target.y.min), (C.y.max = C.y.min + I);
              }
              copyBoxInto(S, C),
                transformBox(S, $),
                calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, S, $);
            }
          }
          registerSharedNode(w, S) {
            this.sharedNodes.has(w) || this.sharedNodes.set(w, new NodeStack());
            let C = this.sharedNodes.get(w);
            C.add(S);
            let I = S.options.initialPromotionConfig;
            S.promote({
              transition: I ? I.transition : void 0,
              preserveFollowOpacity: I && I.shouldPreserveFollowOpacity ? I.shouldPreserveFollowOpacity(S) : void 0
            });
          }
          isLead() {
            let w = this.getStack();
            return !w || w.lead === this;
          }
          getLead() {
            var w;
            let { layoutId: S } = this.options;
            return (S && (null === (w = this.getStack()) || void 0 === w ? void 0 : w.lead)) || this;
          }
          getPrevLead() {
            var w;
            let { layoutId: S } = this.options;
            return S ? (null === (w = this.getStack()) || void 0 === w ? void 0 : w.prevLead) : void 0;
          }
          getStack() {
            let { layoutId: w } = this.options;
            if (w) return this.root.sharedNodes.get(w);
          }
          promote({ needsReset: w, transition: S, preserveFollowOpacity: C } = {}) {
            let I = this.getStack();
            I && I.promote(this, C),
              w && ((this.projectionDelta = void 0), (this.needsReset = !0)),
              S && this.setOptions({ transition: S });
          }
          relegate() {
            let w = this.getStack();
            return !!w && w.relegate(this);
          }
          resetRotation() {
            let { visualElement: w } = this.options;
            if (!w) return;
            let S = !1,
              { latestValues: C } = w;
            if (((C.rotate || C.rotateX || C.rotateY || C.rotateZ) && (S = !0), !S)) return;
            let I = {};
            for (let S = 0; S < rn.length; S++) {
              let $ = 'rotate' + rn[S];
              C[$] && ((I[$] = C[$]), w.setStaticValue($, 0));
            }
            for (let S in (w.render(), I)) w.setStaticValue(S, I[S]);
            w.scheduleRender();
          }
          getProjectionStyles(w = {}) {
            var S, C;
            let I = {};
            if (!this.instance || this.isSVG) return I;
            if (!this.isVisible) return { visibility: 'hidden' };
            I.visibility = '';
            let $ = this.getTransformTemplate();
            if (this.needsReset)
              return (
                (this.needsReset = !1),
                (I.opacity = ''),
                (I.pointerEvents = resolveMotionValue(w.pointerEvents) || ''),
                (I.transform = $ ? $(this.latestValues, '') : 'none'),
                I
              );
            let er = this.getLead();
            if (!this.projectionDelta || !this.layout || !er.target) {
              let S = {};
              return (
                this.options.layoutId &&
                  ((S.opacity = void 0 !== this.latestValues.opacity ? this.latestValues.opacity : 1),
                  (S.pointerEvents = resolveMotionValue(w.pointerEvents) || '')),
                this.hasProjected &&
                  !hasTransform(this.latestValues) &&
                  ((S.transform = $ ? $({}, '') : 'none'), (this.hasProjected = !1)),
                S
              );
            }
            let en = er.animationValues || er.latestValues;
            this.applyTransformsToTarget(),
              (I.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, en)),
              $ && (I.transform = $(en, I.transform));
            let { x: ei, y: eo } = this.projectionDelta;
            for (let w in ((I.transformOrigin = `${100 * ei.origin}% ${100 * eo.origin}% 0`),
            er.animationValues
              ? (I.opacity =
                  er === this
                    ? null !== (C = null !== (S = en.opacity) && void 0 !== S ? S : this.latestValues.opacity) &&
                      void 0 !== C
                      ? C
                      : 1
                    : this.preserveOpacity
                    ? this.latestValues.opacity
                    : en.opacityExit)
              : (I.opacity =
                  er === this
                    ? void 0 !== en.opacity
                      ? en.opacity
                      : ''
                    : void 0 !== en.opacityExit
                    ? en.opacityExit
                    : 0),
            ej)) {
              if (void 0 === en[w]) continue;
              let { correct: S, applyTo: C } = ej[w],
                $ = 'none' === I.transform ? en[w] : S(en[w], er);
              if (C) {
                let w = C.length;
                for (let S = 0; S < w; S++) I[C[S]] = $;
              } else I[w] = $;
            }
            return (
              this.options.layoutId &&
                (I.pointerEvents = er === this ? resolveMotionValue(w.pointerEvents) || '' : 'none'),
              I
            );
          }
          clearSnapshot() {
            this.resumeFrom = this.snapshot = void 0;
          }
          resetTree() {
            this.root.nodes.forEach((w) => {
              var S;
              return null === (S = w.currentAnimation) || void 0 === S ? void 0 : S.stop();
            }),
              this.root.nodes.forEach(clearMeasurements),
              this.root.sharedNodes.clear();
          }
        };
      }
      function updateLayout(w) {
        w.updateLayout();
      }
      function notifyLayoutUpdate(w) {
        var S;
        let C = (null === (S = w.resumeFrom) || void 0 === S ? void 0 : S.snapshot) || w.snapshot;
        if (w.isLead() && w.layout && C && w.hasListeners('didUpdate')) {
          let { layoutBox: S, measuredBox: I } = w.layout,
            { animationType: $ } = w.options,
            er = C.source !== w.layout.source;
          'size' === $
            ? eachAxis((w) => {
                let I = er ? C.measuredBox[w] : C.layoutBox[w],
                  $ = calcLength(I);
                (I.min = S[w].min), (I.max = I.min + $);
              })
            : shouldAnimatePositionOnly($, C.layoutBox, S) &&
              eachAxis((I) => {
                let $ = er ? C.measuredBox[I] : C.layoutBox[I],
                  en = calcLength(S[I]);
                ($.max = $.min + en),
                  w.relativeTarget &&
                    !w.currentAnimation &&
                    ((w.isProjectionDirty = !0), (w.relativeTarget[I].max = w.relativeTarget[I].min + en));
              });
          let en = createDelta();
          calcBoxDelta(en, S, C.layoutBox);
          let ei = createDelta();
          er ? calcBoxDelta(ei, w.applyTransform(I, !0), C.measuredBox) : calcBoxDelta(ei, S, C.layoutBox);
          let eo = !isDeltaZero(en),
            es = !1;
          if (!w.resumeFrom) {
            let I = w.getClosestProjectingParent();
            if (I && !I.resumeFrom) {
              let { snapshot: $, layout: er } = I;
              if ($ && er) {
                let en = createBox();
                calcRelativePosition(en, C.layoutBox, $.layoutBox);
                let ei = createBox();
                calcRelativePosition(ei, S, er.layoutBox),
                  boxEqualsRounded(en, ei) || (es = !0),
                  I.options.layoutRoot &&
                    ((w.relativeTarget = ei), (w.relativeTargetOrigin = en), (w.relativeParent = I));
              }
            }
          }
          w.notifyListeners('didUpdate', {
            layout: S,
            snapshot: C,
            delta: ei,
            layoutDelta: en,
            hasLayoutChanged: eo,
            hasRelativeTargetChanged: es
          });
        } else if (w.isLead()) {
          let { onExitComplete: S } = w.options;
          S && S();
        }
        w.options.transition = void 0;
      }
      function propagateDirtyNodes(w) {
        ra.totalNodes++,
          w.parent &&
            (w.isProjecting() || (w.isProjectionDirty = w.parent.isProjectionDirty),
            w.isSharedProjectionDirty ||
              (w.isSharedProjectionDirty = !!(
                w.isProjectionDirty ||
                w.parent.isProjectionDirty ||
                w.parent.isSharedProjectionDirty
              )),
            w.isTransformDirty || (w.isTransformDirty = w.parent.isTransformDirty));
      }
      function cleanDirtyNodes(w) {
        w.isProjectionDirty = w.isSharedProjectionDirty = w.isTransformDirty = !1;
      }
      function clearSnapshot(w) {
        w.clearSnapshot();
      }
      function clearMeasurements(w) {
        w.clearMeasurements();
      }
      function clearIsLayoutDirty(w) {
        w.isLayoutDirty = !1;
      }
      function resetTransformStyle(w) {
        let { visualElement: S } = w.options;
        S && S.getProps().onBeforeLayoutMeasure && S.notify('BeforeLayoutMeasure'), w.resetTransform();
      }
      function finishAnimation(w) {
        w.finishAnimation(), (w.targetDelta = w.relativeTarget = w.target = void 0), (w.isProjectionDirty = !0);
      }
      function resolveTargetDelta(w) {
        w.resolveTargetDelta();
      }
      function calcProjection(w) {
        w.calcProjection();
      }
      function resetRotation(w) {
        w.resetRotation();
      }
      function removeLeadSnapshots(w) {
        w.removeLeadSnapshot();
      }
      function mixAxisDelta(w, S, C) {
        (w.translate = mix(S.translate, 0, C)),
          (w.scale = mix(S.scale, 1, C)),
          (w.origin = S.origin),
          (w.originPoint = S.originPoint);
      }
      function mixAxis(w, S, C, I) {
        (w.min = mix(S.min, C.min, I)), (w.max = mix(S.max, C.max, I));
      }
      function mixBox(w, S, C, I) {
        mixAxis(w.x, S.x, C.x, I), mixAxis(w.y, S.y, C.y, I);
      }
      function hasOpacityCrossfade(w) {
        return w.animationValues && void 0 !== w.animationValues.opacityExit;
      }
      let ro = { duration: 0.45, ease: [0.4, 0, 0.1, 1] },
        userAgentContains = (w) => 'undefined' != typeof navigator && navigator.userAgent.toLowerCase().includes(w),
        rs = userAgentContains('applewebkit/') && !userAgentContains('chrome/') ? Math.round : noop_noop;
      function roundAxis(w) {
        (w.min = rs(w.min)), (w.max = rs(w.max));
      }
      function roundBox(w) {
        roundAxis(w.x), roundAxis(w.y);
      }
      function shouldAnimatePositionOnly(w, S, C) {
        return 'position' === w || ('preserve-aspect' === w && !isNear(aspectRatio(S), aspectRatio(C), 0.2));
      }
      let rl = createProjectionNode({
          attachResizeListener: (w, S) => addDomEvent(w, 'resize', S),
          measureScroll: () => ({
            x: document.documentElement.scrollLeft || document.body.scrollLeft,
            y: document.documentElement.scrollTop || document.body.scrollTop
          }),
          checkIsScrollRoot: () => !0
        }),
        rc = { current: void 0 },
        ru = createProjectionNode({
          measureScroll: (w) => ({ x: w.scrollLeft, y: w.scrollTop }),
          defaultParent: () => {
            if (!rc.current) {
              let w = new rl({});
              w.mount(window), w.setOptions({ layoutScroll: !0 }), (rc.current = w);
            }
            return rc.current;
          },
          resetTransform: (w, S) => {
            w.style.transform = void 0 !== S ? S : 'none';
          },
          checkIsScrollRoot: (w) => 'fixed' === window.getComputedStyle(w).position
        }),
        rd = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
      function parseCSSVariable(w) {
        let S = rd.exec(w);
        if (!S) return [,];
        let [, C, I] = S;
        return [C, I];
      }
      function getVariableValue(w, S, C = 1) {
        noop_noop(
          C <= 4,
          `Max CSS variable fallback depth detected in property "${w}". This may indicate a circular fallback dependency.`
        );
        let [I, $] = parseCSSVariable(w);
        if (!I) return;
        let er = window.getComputedStyle(S).getPropertyValue(I);
        if (er) {
          let w = er.trim();
          return isNumericalString(w) ? parseFloat(w) : w;
        }
        return e$($) ? getVariableValue($, S, C + 1) : $;
      }
      function resolveCSSVariables(w, { ...S }, C) {
        let I = w.current;
        if (!(I instanceof Element)) return { target: S, transitionEnd: C };
        for (let $ in (C && (C = { ...C }),
        w.values.forEach((w) => {
          let S = w.get();
          if (!e$(S)) return;
          let C = getVariableValue(S, I);
          C && w.set(C);
        }),
        S)) {
          let w = S[$];
          if (!e$(w)) continue;
          let er = getVariableValue(w, I);
          er && ((S[$] = er), C || (C = {}), void 0 === C[$] && (C[$] = w));
        }
        return { target: S, transitionEnd: C };
      }
      let rh = new Set(['width', 'height', 'top', 'left', 'right', 'bottom', 'x', 'y', 'translateX', 'translateY']),
        isPositionalKey = (w) => rh.has(w),
        hasPositionalKey = (w) => Object.keys(w).some(isPositionalKey),
        isNumOrPxType = (w) => w === eW || w === eQ,
        getPosFromMatrix = (w, S) => parseFloat(w.split(', ')[S]),
        getTranslateFromMatrix =
          (w, S) =>
          (C, { transform: I }) => {
            if ('none' === I || !I) return 0;
            let $ = I.match(/^matrix3d\((.+)\)$/);
            if ($) return getPosFromMatrix($[1], S);
            {
              let S = I.match(/^matrix\((.+)\)$/);
              return S ? getPosFromMatrix(S[1], w) : 0;
            }
          },
        rf = new Set(['x', 'y', 'z']),
        rp = eL.filter((w) => !rf.has(w));
      function removeNonTranslationalTransform(w) {
        let S = [];
        return (
          rp.forEach((C) => {
            let I = w.getValue(C);
            void 0 !== I && (S.push([C, I.get()]), I.set(C.startsWith('scale') ? 1 : 0));
          }),
          S.length && w.render(),
          S
        );
      }
      let rm = {
        width: ({ x: w }, { paddingLeft: S = '0', paddingRight: C = '0' }) =>
          w.max - w.min - parseFloat(S) - parseFloat(C),
        height: ({ y: w }, { paddingTop: S = '0', paddingBottom: C = '0' }) =>
          w.max - w.min - parseFloat(S) - parseFloat(C),
        top: (w, { top: S }) => parseFloat(S),
        left: (w, { left: S }) => parseFloat(S),
        bottom: ({ y: w }, { top: S }) => parseFloat(S) + (w.max - w.min),
        right: ({ x: w }, { left: S }) => parseFloat(S) + (w.max - w.min),
        x: getTranslateFromMatrix(4, 13),
        y: getTranslateFromMatrix(5, 14)
      };
      (rm.translateX = rm.x), (rm.translateY = rm.y);
      let convertChangedValueTypes = (w, S, C) => {
          let I = S.measureViewportBox(),
            $ = S.current,
            er = getComputedStyle($),
            { display: en } = er,
            ei = {};
          'none' === en && S.setStaticValue('display', w.display || 'block'),
            C.forEach((w) => {
              ei[w] = rm[w](I, er);
            }),
            S.render();
          let eo = S.measureViewportBox();
          return (
            C.forEach((C) => {
              let I = S.getValue(C);
              I && I.jump(ei[C]), (w[C] = rm[C](eo, er));
            }),
            w
          );
        },
        checkAndConvertChangedValueTypes = (w, S, C = {}, I = {}) => {
          (S = { ...S }), (I = { ...I });
          let $ = Object.keys(S).filter(isPositionalKey),
            er = [],
            en = !1,
            ei = [];
          if (
            ($.forEach(($) => {
              let eo;
              let es = w.getValue($);
              if (!w.hasValue($)) return;
              let el = C[$],
                ec = findDimensionValueType(el),
                eu = S[$];
              if (isKeyframesTarget(eu)) {
                let w = eu.length,
                  S = null === eu[0] ? 1 : 0;
                ec = findDimensionValueType((el = eu[S]));
                for (let C = S; C < w && null !== eu[C]; C++)
                  eo
                    ? noop_noop(findDimensionValueType(eu[C]) === eo, 'All keyframes must be of the same type')
                    : noop_noop(
                        (eo = findDimensionValueType(eu[C])) === ec || (isNumOrPxType(ec) && isNumOrPxType(eo)),
                        'Keyframes must be of the same dimension as the current value'
                      );
              } else eo = findDimensionValueType(eu);
              if (ec !== eo) {
                if (isNumOrPxType(ec) && isNumOrPxType(eo)) {
                  let w = es.get();
                  'string' == typeof w && es.set(parseFloat(w)),
                    'string' == typeof eu
                      ? (S[$] = parseFloat(eu))
                      : Array.isArray(eu) && eo === eQ && (S[$] = eu.map(parseFloat));
                } else
                  (null == ec ? void 0 : ec.transform) && (null == eo ? void 0 : eo.transform) && (0 === el || 0 === eu)
                    ? 0 === el
                      ? es.set(eo.transform(el))
                      : (S[$] = ec.transform(eu))
                    : (en || ((er = removeNonTranslationalTransform(w)), (en = !0)),
                      ei.push($),
                      (I[$] = void 0 !== I[$] ? I[$] : S[$]),
                      es.jump(eu));
              }
            }),
            !ei.length)
          )
            return { target: S, transitionEnd: I };
          {
            let C = ei.indexOf('height') >= 0 ? window.pageYOffset : null,
              $ = convertChangedValueTypes(S, w, ei);
            return (
              er.length &&
                er.forEach(([S, C]) => {
                  w.getValue(S).set(C);
                }),
              w.render(),
              eP && null !== C && window.scrollTo({ top: C }),
              { target: $, transitionEnd: I }
            );
          }
        };
      function unitConversion(w, S, C, I) {
        return hasPositionalKey(S) ? checkAndConvertChangedValueTypes(w, S, C, I) : { target: S, transitionEnd: I };
      }
      let parseDomVariant = (w, S, C, I) => {
          let $ = resolveCSSVariables(w, S, I);
          return unitConversion(w, (S = $.target), C, (I = $.transitionEnd));
        },
        rg = { current: null },
        ry = { current: !1 };
      function initPrefersReducedMotion() {
        if (((ry.current = !0), eP)) {
          if (window.matchMedia) {
            let w = window.matchMedia('(prefers-reduced-motion)'),
              setReducedMotionPreferences = () => (rg.current = w.matches);
            w.addListener(setReducedMotionPreferences), setReducedMotionPreferences();
          } else rg.current = !1;
        }
      }
      function updateMotionValuesFromProps(w, S, C) {
        let { willChange: I } = S;
        for (let $ in S) {
          let er = S[$],
            en = C[$];
          if (isMotionValue(er)) w.addValue($, er), isWillChangeMotionValue(I) && I.add($);
          else if (isMotionValue(en))
            w.addValue($, motionValue(er, { owner: w })), isWillChangeMotionValue(I) && I.remove($);
          else if (en !== er) {
            if (w.hasValue($)) {
              let S = w.getValue($);
              S.hasAnimated || S.set(er);
            } else {
              let S = w.getStaticValue($);
              w.addValue($, motionValue(void 0 !== S ? S : er, { owner: w }));
            }
          }
        }
        for (let I in C) void 0 === S[I] && w.removeValue(I);
        return S;
      }
      let rv = new WeakMap(),
        rb = Object.keys(eB),
        r_ = rb.length,
        rx = [
          'AnimationStart',
          'AnimationComplete',
          'Update',
          'BeforeLayoutMeasure',
          'LayoutMeasure',
          'LayoutAnimationStart',
          'LayoutAnimationComplete'
        ],
        rw = ez.length;
      let VisualElement = class VisualElement {
        constructor({ parent: w, props: S, presenceContext: C, reducedMotionConfig: I, visualState: $ }, er = {}) {
          (this.current = null),
            (this.children = new Set()),
            (this.isVariantNode = !1),
            (this.isControllingVariants = !1),
            (this.shouldReduceMotion = null),
            (this.values = new Map()),
            (this.features = {}),
            (this.valueSubscriptions = new Map()),
            (this.prevMotionValues = {}),
            (this.events = {}),
            (this.propEventSubscriptions = {}),
            (this.notifyUpdate = () => this.notify('Update', this.latestValues)),
            (this.render = () => {
              this.current &&
                (this.triggerBuild(),
                this.renderInstance(this.current, this.renderState, this.props.style, this.projection));
            }),
            (this.scheduleRender = () => tr.render(this.render, !1, !0));
          let { latestValues: en, renderState: ei } = $;
          (this.latestValues = en),
            (this.baseTarget = { ...en }),
            (this.initialValues = S.initial ? { ...en } : {}),
            (this.renderState = ei),
            (this.parent = w),
            (this.props = S),
            (this.presenceContext = C),
            (this.depth = w ? w.depth + 1 : 0),
            (this.reducedMotionConfig = I),
            (this.options = er),
            (this.isControllingVariants = isControllingVariants(S)),
            (this.isVariantNode = isVariantNode(S)),
            this.isVariantNode && (this.variantChildren = new Set()),
            (this.manuallyAnimateOnMount = !!(w && w.current));
          let { willChange: eo, ...es } = this.scrapeMotionValuesFromProps(S, {});
          for (let w in es) {
            let S = es[w];
            void 0 !== en[w] && isMotionValue(S) && (S.set(en[w], !1), isWillChangeMotionValue(eo) && eo.add(w));
          }
        }
        scrapeMotionValuesFromProps(w, S) {
          return {};
        }
        mount(w) {
          (this.current = w),
            rv.set(w, this),
            this.projection && !this.projection.instance && this.projection.mount(w),
            this.parent &&
              this.isVariantNode &&
              !this.isControllingVariants &&
              (this.removeFromVariantTree = this.parent.addVariantChild(this)),
            this.values.forEach((w, S) => this.bindToMotionValue(S, w)),
            ry.current || initPrefersReducedMotion(),
            (this.shouldReduceMotion =
              'never' !== this.reducedMotionConfig && ('always' === this.reducedMotionConfig || rg.current)),
            this.parent && this.parent.children.add(this),
            this.update(this.props, this.presenceContext);
        }
        unmount() {
          for (let w in (rv.delete(this.current),
          this.projection && this.projection.unmount(),
          tn(this.notifyUpdate),
          tn(this.render),
          this.valueSubscriptions.forEach((w) => w()),
          this.removeFromVariantTree && this.removeFromVariantTree(),
          this.parent && this.parent.children.delete(this),
          this.events))
            this.events[w].clear();
          for (let w in this.features) this.features[w].unmount();
          this.current = null;
        }
        bindToMotionValue(w, S) {
          let C = eF.has(w),
            I = S.on('change', (S) => {
              (this.latestValues[w] = S),
                this.props.onUpdate && tr.update(this.notifyUpdate, !1, !0),
                C && this.projection && (this.projection.isTransformDirty = !0);
            }),
            $ = S.on('renderRequest', this.scheduleRender);
          this.valueSubscriptions.set(w, () => {
            I(), $();
          });
        }
        sortNodePosition(w) {
          return this.current && this.sortInstanceNodePosition && this.type === w.type
            ? this.sortInstanceNodePosition(this.current, w.current)
            : 0;
        }
        loadFeatures({ children: w, ...S }, C, I, $) {
          let er, en;
          for (let w = 0; w < r_; w++) {
            let C = rb[w],
              { isEnabled: I, Feature: $, ProjectionNode: ei, MeasureLayout: eo } = eB[C];
            ei && (er = ei), I(S) && (!this.features[C] && $ && (this.features[C] = new $(this)), eo && (en = eo));
          }
          if (!this.projection && er) {
            this.projection = new er(this.latestValues, this.parent && this.parent.projection);
            let { layoutId: w, layout: C, drag: I, dragConstraints: en, layoutScroll: ei, layoutRoot: eo } = S;
            this.projection.setOptions({
              layoutId: w,
              layout: C,
              alwaysMeasureLayout: !!I || (en && isRefObject(en)),
              visualElement: this,
              scheduleRender: () => this.scheduleRender(),
              animationType: 'string' == typeof C ? C : 'both',
              initialPromotionConfig: $,
              layoutScroll: ei,
              layoutRoot: eo
            });
          }
          return en;
        }
        updateFeatures() {
          for (let w in this.features) {
            let S = this.features[w];
            S.isMounted ? S.update() : (S.mount(), (S.isMounted = !0));
          }
        }
        triggerBuild() {
          this.build(this.renderState, this.latestValues, this.options, this.props);
        }
        measureViewportBox() {
          return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();
        }
        getStaticValue(w) {
          return this.latestValues[w];
        }
        setStaticValue(w, S) {
          this.latestValues[w] = S;
        }
        makeTargetAnimatable(w, S = !0) {
          return this.makeTargetAnimatableFromInstance(w, this.props, S);
        }
        update(w, S) {
          (w.transformTemplate || this.props.transformTemplate) && this.scheduleRender(),
            (this.prevProps = this.props),
            (this.props = w),
            (this.prevPresenceContext = this.presenceContext),
            (this.presenceContext = S);
          for (let S = 0; S < rx.length; S++) {
            let C = rx[S];
            this.propEventSubscriptions[C] && (this.propEventSubscriptions[C](), delete this.propEventSubscriptions[C]);
            let I = w['on' + C];
            I && (this.propEventSubscriptions[C] = this.on(C, I));
          }
          (this.prevMotionValues = updateMotionValuesFromProps(
            this,
            this.scrapeMotionValuesFromProps(w, this.prevProps),
            this.prevMotionValues
          )),
            this.handleChildMotionValue && this.handleChildMotionValue();
        }
        getProps() {
          return this.props;
        }
        getVariant(w) {
          return this.props.variants ? this.props.variants[w] : void 0;
        }
        getDefaultTransition() {
          return this.props.transition;
        }
        getTransformPagePoint() {
          return this.props.transformPagePoint;
        }
        getClosestVariantNode() {
          return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
        }
        getVariantContext(w = !1) {
          if (w) return this.parent ? this.parent.getVariantContext() : void 0;
          if (!this.isControllingVariants) {
            let w = (this.parent && this.parent.getVariantContext()) || {};
            return void 0 !== this.props.initial && (w.initial = this.props.initial), w;
          }
          let S = {};
          for (let w = 0; w < rw; w++) {
            let C = ez[w],
              I = this.props[C];
            (isVariantLabel(I) || !1 === I) && (S[C] = I);
          }
          return S;
        }
        addVariantChild(w) {
          let S = this.getClosestVariantNode();
          if (S) return S.variantChildren && S.variantChildren.add(w), () => S.variantChildren.delete(w);
        }
        addValue(w, S) {
          S !== this.values.get(w) && (this.removeValue(w), this.bindToMotionValue(w, S)),
            this.values.set(w, S),
            (this.latestValues[w] = S.get());
        }
        removeValue(w) {
          this.values.delete(w);
          let S = this.valueSubscriptions.get(w);
          S && (S(), this.valueSubscriptions.delete(w)),
            delete this.latestValues[w],
            this.removeValueFromRenderState(w, this.renderState);
        }
        hasValue(w) {
          return this.values.has(w);
        }
        getValue(w, S) {
          if (this.props.values && this.props.values[w]) return this.props.values[w];
          let C = this.values.get(w);
          return void 0 === C && void 0 !== S && ((C = motionValue(S, { owner: this })), this.addValue(w, C)), C;
        }
        readValue(w) {
          var S;
          return void 0 === this.latestValues[w] && this.current
            ? null !== (S = this.getBaseTargetFromProps(this.props, w)) && void 0 !== S
              ? S
              : this.readValueFromInstance(this.current, w, this.options)
            : this.latestValues[w];
        }
        setBaseTarget(w, S) {
          this.baseTarget[w] = S;
        }
        getBaseTarget(w) {
          var S;
          let { initial: C } = this.props,
            I =
              'string' == typeof C || 'object' == typeof C
                ? null === (S = resolveVariantFromProps(this.props, C)) || void 0 === S
                  ? void 0
                  : S[w]
                : void 0;
          if (C && void 0 !== I) return I;
          let $ = this.getBaseTargetFromProps(this.props, w);
          return void 0 === $ || isMotionValue($)
            ? void 0 !== this.initialValues[w] && void 0 === I
              ? void 0
              : this.baseTarget[w]
            : $;
        }
        on(w, S) {
          return this.events[w] || (this.events[w] = new SubscriptionManager()), this.events[w].add(S);
        }
        notify(w, ...S) {
          this.events[w] && this.events[w].notify(...S);
        }
      };
      let DOMVisualElement = class DOMVisualElement extends VisualElement {
        sortInstanceNodePosition(w, S) {
          return 2 & w.compareDocumentPosition(S) ? 1 : -1;
        }
        getBaseTargetFromProps(w, S) {
          return w.style ? w.style[S] : void 0;
        }
        removeValueFromRenderState(w, { vars: S, style: C }) {
          delete S[w], delete C[w];
        }
        makeTargetAnimatableFromInstance({ transition: w, transitionEnd: S, ...C }, { transformValues: I }, $) {
          let er = getOrigin(C, w || {}, this);
          if ((I && (S && (S = I(S)), C && (C = I(C)), er && (er = I(er))), $)) {
            checkTargetForNewValues(this, C, er);
            let w = parseDomVariant(this, C, er, S);
            (S = w.transitionEnd), (C = w.target);
          }
          return { transition: w, transitionEnd: S, ...C };
        }
      };
      function HTMLVisualElement_getComputedStyle(w) {
        return window.getComputedStyle(w);
      }
      let HTMLVisualElement = class HTMLVisualElement extends DOMVisualElement {
        readValueFromInstance(w, S) {
          if (eF.has(S)) {
            let w = getDefaultValueType(S);
            return (w && w.default) || 0;
          }
          {
            let C = HTMLVisualElement_getComputedStyle(w),
              I = (eU(S) ? C.getPropertyValue(S) : C[S]) || 0;
            return 'string' == typeof I ? I.trim() : I;
          }
        }
        measureInstanceViewportBox(w, { transformPagePoint: S }) {
          return measureViewportBox(w, S);
        }
        build(w, S, C, I) {
          buildHTMLStyles(w, S, C, I.transformTemplate);
        }
        scrapeMotionValuesFromProps(w, S) {
          return scrapeMotionValuesFromProps(w, S);
        }
        handleChildMotionValue() {
          this.childSubscription && (this.childSubscription(), delete this.childSubscription);
          let { children: w } = this.props;
          isMotionValue(w) &&
            (this.childSubscription = w.on('change', (w) => {
              this.current && (this.current.textContent = `${w}`);
            }));
        }
        renderInstance(w, S, C, I) {
          renderHTML(w, S, C, I);
        }
      };
      let SVGVisualElement = class SVGVisualElement extends DOMVisualElement {
        constructor() {
          super(...arguments), (this.isSVGTag = !1);
        }
        getBaseTargetFromProps(w, S) {
          return w[S];
        }
        readValueFromInstance(w, S) {
          if (eF.has(S)) {
            let w = getDefaultValueType(S);
            return (w && w.default) || 0;
          }
          return (S = e9.has(S) ? S : camelToDash(S)), w.getAttribute(S);
        }
        measureInstanceViewportBox() {
          return createBox();
        }
        scrapeMotionValuesFromProps(w, S) {
          return scrape_motion_values_scrapeMotionValuesFromProps(w, S);
        }
        build(w, S, C, I) {
          buildSVGAttrs(w, S, C, this.isSVGTag, I.transformTemplate);
        }
        renderInstance(w, S, C, I) {
          renderSVG(w, S, C, I);
        }
        mount(w) {
          (this.isSVGTag = isSVGTag(w.tagName)), super.mount(w);
        }
      };
      let create_visual_element_createDomVisualElement = (w, S) =>
          isSVGComponent(w)
            ? new SVGVisualElement(S, { enableHardwareAcceleration: !1 })
            : new HTMLVisualElement(S, { enableHardwareAcceleration: !0 }),
        rk = {
          animation: { Feature: AnimationFeature },
          exit: { Feature: ExitAnimationFeature },
          inView: { Feature: InViewFeature },
          tap: { Feature: PressGesture },
          focus: { Feature: FocusGesture },
          hover: { Feature: HoverGesture },
          pan: { Feature: PanGesture },
          drag: { Feature: DragGesture, ProjectionNode: ru, MeasureLayout: MeasureLayout },
          layout: { ProjectionNode: ru, MeasureLayout: MeasureLayout }
        },
        rS = createMotionProxy((w, S) =>
          create_config_createDomMotionConfig(w, S, rk, create_visual_element_createDomVisualElement)
        );
      var rC = C(69742),
        rP = {
          initial: (w) => {
            let { position: S } = w,
              C = ['top', 'bottom'].includes(S) ? 'y' : 'x',
              I = ['top-right', 'bottom-right'].includes(S) ? 1 : -1;
            return 'bottom' === S && (I = 1), { opacity: 0, [C]: 24 * I };
          },
          animate: { opacity: 1, y: 0, x: 0, scale: 1, transition: { duration: 0.4, ease: [0.4, 0, 0.2, 1] } },
          exit: { opacity: 0, scale: 0.85, transition: { duration: 0.2, ease: [0.4, 0, 1, 1] } }
        },
        rA = (0, eu.memo)((w) => {
          let {
              id: S,
              message: C,
              onCloseComplete: I,
              onRequestRemove: $,
              requestClose: en = !1,
              position: ei = 'bottom',
              duration: eo = 5e3,
              containerStyle: es,
              motionVariants: el = rP,
              toastSpacing: ec = '0.5rem'
            } = w,
            [ed, eh] = (0, eu.useState)(eo),
            ef = useIsPresent();
          useUpdateEffect(() => {
            ef || null == I || I();
          }, [ef]),
            useUpdateEffect(() => {
              eh(eo);
            }, [eo]);
          let close = () => {
            ef && $();
          };
          (0, eu.useEffect)(() => {
            ef && en && $();
          }, [ef, en, $]),
            useTimeout(close, ed);
          let ep = (0, eu.useMemo)(
              () => ({ pointerEvents: 'auto', maxWidth: 560, minWidth: 300, margin: ec, ...es }),
              [es, ec]
            ),
            em = (0, eu.useMemo)(() => getToastStyle(ei), [ei]);
          return (0, er.jsx)(rS.div, {
            layout: !0,
            className: 'chakra-toast',
            variants: el,
            initial: 'initial',
            animate: 'animate',
            exit: 'exit',
            onHoverStart: () => eh(null),
            onHoverEnd: () => eh(eo),
            custom: { position: ei },
            style: em,
            children: (0, er.jsx)(rC.m.div, {
              role: 'status',
              'aria-atomic': 'true',
              className: 'chakra-toast__inner',
              __css: ep,
              children: (0, ew.Pu)(C, { id: S, onClose: close })
            })
          });
        });
      rA.displayName = 'ToastComponent';
      var rT = C(16248);
      function CheckIcon(w) {
        return (0, er.jsx)(rT.J, {
          viewBox: '0 0 24 24',
          ...w,
          children: (0, er.jsx)('path', {
            fill: 'currentColor',
            d: 'M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z'
          })
        });
      }
      function InfoIcon(w) {
        return (0, er.jsx)(rT.J, {
          viewBox: '0 0 24 24',
          ...w,
          children: (0, er.jsx)('path', {
            fill: 'currentColor',
            d: 'M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z'
          })
        });
      }
      function WarningIcon(w) {
        return (0, er.jsx)(rT.J, {
          viewBox: '0 0 24 24',
          ...w,
          children: (0, er.jsx)('path', {
            fill: 'currentColor',
            d: 'M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z'
          })
        });
      }
      var rE = C(83109),
        [rz, rI] = (0, eo.k)({ name: 'AlertContext', hookName: 'useAlertContext', providerName: '<Alert />' }),
        [rB, rR] = (0, eo.k)({ name: 'AlertStylesContext', hookName: 'useAlertStyles', providerName: '<Alert />' }),
        rO = {
          info: { icon: InfoIcon, colorScheme: 'blue' },
          warning: { icon: WarningIcon, colorScheme: 'orange' },
          success: { icon: CheckIcon, colorScheme: 'green' },
          error: { icon: WarningIcon, colorScheme: 'red' },
          loading: { icon: rE.$, colorScheme: 'blue' }
        };
      function getStatusColorScheme(w) {
        return rO[w].colorScheme;
      }
      function getStatusIcon(w) {
        return rO[w].icon;
      }
      var rM = C(58250),
        rD = C(45655),
        rj = (0, rM.G)(function (w, S) {
          var C;
          let { status: I = 'info', addRole: $ = !0, ...en } = (0, ed.Lr)(w),
            ei = null != (C = w.colorScheme) ? C : getStatusColorScheme(I),
            eo = (0, rD.jC)('Alert', { ...w, colorScheme: ei }),
            es = {
              width: '100%',
              display: 'flex',
              alignItems: 'center',
              position: 'relative',
              overflow: 'hidden',
              ...eo.container
            };
          return (0, er.jsx)(rz, {
            value: { status: I },
            children: (0, er.jsx)(rB, {
              value: eo,
              children: (0, er.jsx)(rC.m.div, {
                'data-status': I,
                role: $ ? 'alert' : void 0,
                ref: S,
                ...en,
                className: (0, ew.cx)('chakra-alert', w.className),
                __css: es
              })
            })
          });
        });
      function AlertIcon(w) {
        let { status: S } = rI(),
          C = getStatusIcon(S),
          I = rR(),
          $ = 'loading' === S ? I.spinner : I.icon;
        return (0, er.jsx)(rC.m.span, {
          display: 'inherit',
          'data-status': S,
          ...w,
          className: (0, ew.cx)('chakra-alert__icon', w.className),
          __css: $,
          children: w.children || (0, er.jsx)(C, { h: '100%', w: '100%' })
        });
      }
      (rj.displayName = 'Alert'), (AlertIcon.displayName = 'AlertIcon');
      var rL = (0, rM.G)(function (w, S) {
        let C = rR(),
          { status: I } = rI();
        return (0, er.jsx)(rC.m.div, {
          ref: S,
          'data-status': I,
          ...w,
          className: (0, ew.cx)('chakra-alert__title', w.className),
          __css: C.title
        });
      });
      rL.displayName = 'AlertTitle';
      var rF = (0, rM.G)(function (w, S) {
        let C = rR(),
          { status: I } = rI(),
          $ = { display: 'inline', ...C.description };
        return (0, er.jsx)(rC.m.div, {
          ref: S,
          'data-status': I,
          ...w,
          className: (0, ew.cx)('chakra-alert__desc', w.className),
          __css: $
        });
      });
      function CloseIcon(w) {
        return (0, er.jsx)(rT.J, {
          focusable: 'false',
          'aria-hidden': !0,
          ...w,
          children: (0, er.jsx)('path', {
            fill: 'currentColor',
            d: 'M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z'
          })
        });
      }
      rF.displayName = 'AlertDescription';
      var rV = (0, rM.G)(function (w, S) {
        let C = (0, rD.mq)('CloseButton', w),
          { children: I, isDisabled: $, __css: en, ...ei } = (0, ed.Lr)(w);
        return (0, er.jsx)(rC.m.button, {
          type: 'button',
          'aria-label': 'Close',
          ref: S,
          disabled: $,
          __css: {
            outline: 0,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            flexShrink: 0,
            ...C,
            ...en
          },
          ...ei,
          children: I || (0, er.jsx)(CloseIcon, { width: '1em', height: '1em' })
        });
      });
      rV.displayName = 'CloseButton';
      var rN = createStore({
        top: [],
        'top-left': [],
        'top-right': [],
        'bottom-left': [],
        bottom: [],
        'bottom-right': []
      });
      function createStore(w) {
        let S = w,
          C = new Set(),
          setState = (w) => {
            (S = w(S)), C.forEach((w) => w());
          };
        return {
          getState: () => S,
          subscribe: (S) => (
            C.add(S),
            () => {
              setState(() => w), C.delete(S);
            }
          ),
          removeToast: (w, S) => {
            setState((C) => ({ ...C, [S]: C[S].filter((S) => S.id != w) }));
          },
          notify: (w, S) => {
            let C = createToast(w, S),
              { position: I, id: $ } = C;
            return (
              setState((w) => {
                var S, $;
                let er = I.includes('top'),
                  en = er ? [C, ...(null != (S = w[I]) ? S : [])] : [...(null != ($ = w[I]) ? $ : []), C];
                return { ...w, [I]: en };
              }),
              $
            );
          },
          update: (w, S) => {
            w &&
              setState((C) => {
                let I = { ...C },
                  { position: $, index: er } = findToast(I, w);
                return $ && -1 !== er && (I[$][er] = { ...I[$][er], ...S, message: createRenderToast(S) }), I;
              });
          },
          closeAll: ({ positions: w } = {}) => {
            setState((S) =>
              (null != w ? w : ['bottom', 'bottom-right', 'bottom-left', 'top', 'top-left', 'top-right']).reduce(
                (w, C) => ((w[C] = S[C].map((w) => ({ ...w, requestClose: !0 }))), w),
                { ...S }
              )
            );
          },
          close: (w) => {
            setState((S) => {
              let C = getToastPosition(S, w);
              return C ? { ...S, [C]: S[C].map((S) => (S.id == w ? { ...S, requestClose: !0 } : S)) } : S;
            });
          },
          isActive: (w) => !!findToast(rN.getState(), w).position
        };
      }
      var rU = 0;
      function createToast(w, S = {}) {
        var C, I;
        rU += 1;
        let $ = null != (C = S.id) ? C : rU,
          er = null != (I = S.position) ? I : 'bottom';
        return {
          id: $,
          message: w,
          position: er,
          duration: S.duration,
          onCloseComplete: S.onCloseComplete,
          onRequestRemove: () => rN.removeToast(String($), er),
          status: S.status,
          requestClose: !1,
          containerStyle: S.containerStyle
        };
      }
      var Toast = (w) => {
        let {
            status: S,
            variant: C = 'solid',
            id: I,
            title: $,
            isClosable: en,
            onClose: ei,
            description: eo,
            colorScheme: es,
            icon: el
          } = w,
          ec = I ? { root: `toast-${I}`, title: `toast-${I}-title`, description: `toast-${I}-description` } : void 0;
        return (0, er.jsxs)(rj, {
          addRole: !1,
          status: S,
          variant: C,
          id: null == ec ? void 0 : ec.root,
          alignItems: 'start',
          borderRadius: 'md',
          boxShadow: 'lg',
          paddingEnd: 8,
          textAlign: 'start',
          width: 'auto',
          colorScheme: es,
          children: [
            (0, er.jsx)(AlertIcon, { children: el }),
            (0, er.jsxs)(rC.m.div, {
              flex: '1',
              maxWidth: '100%',
              children: [
                $ && (0, er.jsx)(rL, { id: null == ec ? void 0 : ec.title, children: $ }),
                eo && (0, er.jsx)(rF, { id: null == ec ? void 0 : ec.description, display: 'block', children: eo })
              ]
            }),
            en && (0, er.jsx)(rV, { size: 'sm', onClick: ei, position: 'absolute', insetEnd: 1, top: 1 })
          ]
        });
      };
      function createRenderToast(w = {}) {
        let { render: S, toastComponent: C = Toast } = w;
        return (I) => ('function' == typeof S ? S({ ...I, ...w }) : (0, er.jsx)(C, { ...I, ...w }));
      }
      function useIsMounted() {
        let w = (0, eu.useRef)(!1);
        return (
          eA(
            () => (
              (w.current = !0),
              () => {
                w.current = !1;
              }
            ),
            []
          ),
          w
        );
      }
      function useForceUpdate() {
        let w = useIsMounted(),
          [S, C] = (0, eu.useState)(0),
          I = (0, eu.useCallback)(() => {
            w.current && C(S + 1);
          }, [S]),
          $ = (0, eu.useCallback)(() => tr.postRender(I), [I]);
        return [$, S];
      }
      let PopChildMeasure = class PopChildMeasure extends eu.Component {
        getSnapshotBeforeUpdate(w) {
          let S = this.props.childRef.current;
          if (S && w.isPresent && !this.props.isPresent) {
            let w = this.props.sizeRef.current;
            (w.height = S.offsetHeight || 0),
              (w.width = S.offsetWidth || 0),
              (w.top = S.offsetTop),
              (w.left = S.offsetLeft);
          }
          return null;
        }
        componentDidUpdate() {}
        render() {
          return this.props.children;
        }
      };
      function PopChild({ children: w, isPresent: S }) {
        let C = (0, eu.useId)(),
          I = (0, eu.useRef)(null),
          $ = (0, eu.useRef)({ width: 0, height: 0, top: 0, left: 0 });
        return (
          (0, eu.useInsertionEffect)(() => {
            let { width: w, height: er, top: en, left: ei } = $.current;
            if (S || !I.current || !w || !er) return;
            I.current.dataset.motionPopId = C;
            let eo = document.createElement('style');
            return (
              document.head.appendChild(eo),
              eo.sheet &&
                eo.sheet.insertRule(`
          [data-motion-pop-id="${C}"] {
            position: absolute !important;
            width: ${w}px !important;
            height: ${er}px !important;
            top: ${en}px !important;
            left: ${ei}px !important;
          }
        `),
              () => {
                document.head.removeChild(eo);
              }
            );
          }, [S]),
          eu.createElement(PopChildMeasure, { isPresent: S, childRef: I, sizeRef: $ }, eu.cloneElement(w, { ref: I }))
        );
      }
      let PresenceChild = ({
        children: w,
        initial: S,
        isPresent: C,
        onExitComplete: I,
        custom: $,
        presenceAffectsLayout: er,
        mode: en
      }) => {
        let ei = useConstant(newChildrenMap),
          eo = (0, eu.useId)(),
          es = (0, eu.useMemo)(
            () => ({
              id: eo,
              initial: S,
              isPresent: C,
              custom: $,
              onExitComplete: (w) => {
                for (let S of (ei.set(w, !0), ei.values())) if (!S) return;
                I && I();
              },
              register: (w) => (ei.set(w, !1), () => ei.delete(w))
            }),
            er ? void 0 : [C]
          );
        return (
          (0, eu.useMemo)(() => {
            ei.forEach((w, S) => ei.set(S, !1));
          }, [C]),
          eu.useEffect(() => {
            C || ei.size || !I || I();
          }, [C]),
          'popLayout' === en && (w = eu.createElement(PopChild, { isPresent: C }, w)),
          eu.createElement(ek.Provider, { value: es }, w)
        );
      };
      function newChildrenMap() {
        return new Map();
      }
      function useUnmountEffect(w) {
        return (0, eu.useEffect)(() => () => w(), []);
      }
      let getChildKey = (w) => w.key || '';
      function updateChildLookup(w, S) {
        w.forEach((w) => {
          let C = getChildKey(w);
          S.set(C, w);
        });
      }
      function onlyElements(w) {
        let S = [];
        return (
          eu.Children.forEach(w, (w) => {
            (0, eu.isValidElement)(w) && S.push(w);
          }),
          S
        );
      }
      let AnimatePresence = ({
        children: w,
        custom: S,
        initial: C = !0,
        onExitComplete: I,
        exitBeforeEnter: $,
        presenceAffectsLayout: er = !0,
        mode: en = 'sync'
      }) => {
        noop_noop(!$, "Replace exitBeforeEnter with mode='wait'");
        let ei = (0, eu.useContext)(eR).forceRender || useForceUpdate()[0],
          eo = useIsMounted(),
          es = onlyElements(w),
          el = es,
          ec = (0, eu.useRef)(new Map()).current,
          ed = (0, eu.useRef)(el),
          eh = (0, eu.useRef)(new Map()).current,
          ef = (0, eu.useRef)(!0);
        if (
          (eA(() => {
            (ef.current = !1), updateChildLookup(es, eh), (ed.current = el);
          }),
          useUnmountEffect(() => {
            (ef.current = !0), eh.clear(), ec.clear();
          }),
          ef.current)
        )
          return eu.createElement(
            eu.Fragment,
            null,
            el.map((w) =>
              eu.createElement(
                PresenceChild,
                { key: getChildKey(w), isPresent: !0, initial: !!C && void 0, presenceAffectsLayout: er, mode: en },
                w
              )
            )
          );
        el = [...el];
        let ep = ed.current.map(getChildKey),
          em = es.map(getChildKey),
          eg = ep.length;
        for (let w = 0; w < eg; w++) {
          let S = ep[w];
          -1 !== em.indexOf(S) || ec.has(S) || ec.set(S, void 0);
        }
        return (
          'wait' === en && ec.size && (el = []),
          ec.forEach((w, C) => {
            if (-1 !== em.indexOf(C)) return;
            let $ = eh.get(C);
            if (!$) return;
            let ef = ep.indexOf(C),
              eg = w;
            eg ||
              ((eg = eu.createElement(
                PresenceChild,
                {
                  key: getChildKey($),
                  isPresent: !1,
                  onExitComplete: () => {
                    eh.delete(C), ec.delete(C);
                    let w = ed.current.findIndex((w) => w.key === C);
                    if ((ed.current.splice(w, 1), !ec.size)) {
                      if (((ed.current = es), !1 === eo.current)) return;
                      ei(), I && I();
                    }
                  },
                  custom: S,
                  presenceAffectsLayout: er,
                  mode: en
                },
                $
              )),
              ec.set(C, eg)),
              el.splice(ef, 0, eg);
          }),
          (el = el.map((w) => {
            let S = w.key;
            return ec.has(S)
              ? w
              : eu.createElement(
                  PresenceChild,
                  { key: getChildKey(w), isPresent: !0, presenceAffectsLayout: er, mode: en },
                  w
                );
          })),
          eu.createElement(eu.Fragment, null, ec.size ? el : el.map((w) => (0, eu.cloneElement)(w)))
        );
      };
      var r$ = C(54887),
        [rW, rG] = (0, eo.k)({ strict: !1, name: 'PortalContext' }),
        rH = 'chakra-portal',
        Container = (w) =>
          (0, er.jsx)('div', {
            className: 'chakra-portal-zIndex',
            style: { position: 'absolute', zIndex: w.zIndex, top: 0, left: 0, right: 0 },
            children: w.children
          }),
        DefaultPortal = (w) => {
          let { appendToParentPortal: S, children: C } = w,
            [I, $] = (0, eu.useState)(null),
            en = (0, eu.useRef)(null),
            [, ei] = (0, eu.useState)({});
          (0, eu.useEffect)(() => ei({}), []);
          let eo = rG(),
            es = el();
          (0, eb.G)(() => {
            if (!I) return;
            let w = I.ownerDocument,
              C = S && null != eo ? eo : w.body;
            if (!C) return;
            (en.current = w.createElement('div')), (en.current.className = rH), C.appendChild(en.current), ei({});
            let $ = en.current;
            return () => {
              C.contains($) && C.removeChild($);
            };
          }, [I]);
          let ec = (null == es ? void 0 : es.zIndex)
            ? (0, er.jsx)(Container, { zIndex: null == es ? void 0 : es.zIndex, children: C })
            : C;
          return en.current
            ? (0, r$.createPortal)((0, er.jsx)(rW, { value: en.current, children: ec }), en.current)
            : (0, er.jsx)('span', {
                ref: (w) => {
                  w && $(w);
                }
              });
        },
        ContainerPortal = (w) => {
          let { children: S, containerRef: C, appendToParentPortal: I } = w,
            $ = C.current,
            en = null != $ ? $ : 'undefined' != typeof window ? document.body : void 0,
            ei = (0, eu.useMemo)(() => {
              let w = null == $ ? void 0 : $.ownerDocument.createElement('div');
              return w && (w.className = rH), w;
            }, [$]),
            [, eo] = (0, eu.useState)({});
          return ((0, eb.G)(() => eo({}), []),
          (0, eb.G)(() => {
            if (ei && en)
              return (
                en.appendChild(ei),
                () => {
                  en.removeChild(ei);
                }
              );
          }, [ei, en]),
          en && ei)
            ? (0, r$.createPortal)((0, er.jsx)(rW, { value: I ? ei : null, children: S }), ei)
            : null;
        };
      function Portal(w) {
        let S = { appendToParentPortal: !0, ...w },
          { containerRef: C, ...I } = S;
        return C ? (0, er.jsx)(ContainerPortal, { containerRef: C, ...I }) : (0, er.jsx)(DefaultPortal, { ...I });
      }
      (Portal.className = rH), (Portal.selector = '.chakra-portal'), (Portal.displayName = 'Portal');
      var [rq, rZ] = (0, eo.k)({ name: 'ToastOptionsContext', strict: !1 }),
        ToastProvider = (w) => {
          let S = (0, eu.useSyncExternalStore)(rN.subscribe, rN.getState, rN.getState),
            { motionVariants: C, component: I = rA, portalProps: $ } = w,
            en = Object.keys(S),
            ei = en.map((w) => {
              let $ = S[w];
              return (0, er.jsx)(
                'div',
                {
                  role: 'region',
                  'aria-live': 'polite',
                  'aria-label': 'Notifications',
                  id: `chakra-toast-manager-${w}`,
                  style: getToastListStyle(w),
                  children: (0, er.jsx)(AnimatePresence, {
                    initial: !1,
                    children: $.map((w) => (0, er.jsx)(I, { motionVariants: C, ...w }, w.id))
                  })
                },
                w
              );
            });
          return (0, er.jsx)(Portal, { ...$, children: ei });
        },
        createChakraProvider = (w) =>
          function ({ children: S, theme: C = w, toastOptions: I, ...$ }) {
            return (0, er.jsxs)(ChakraProvider, {
              theme: C,
              ...$,
              children: [
                (0, er.jsx)(rq, { value: null == I ? void 0 : I.defaultOptions, children: S }),
                (0, er.jsx)(ToastProvider, { ...I })
              ]
            });
          },
        rY = createChakraProvider(ex.rS);
      createChakraProvider(ex.wE);
    },
    16465: function (w, S, C) {
      'use strict';
      C.d(S, {
        Kn: function () {
          return isObject;
        },
        PB: function () {
          return dataAttr;
        },
        Pu: function () {
          return runIfFn;
        },
        Qm: function () {
          return ariaAttr;
        },
        cx: function () {
          return cx;
        },
        v0: function () {
          return callAllHandlers;
        }
      });
      var cx = (...w) => w.filter(Boolean).join(' ');
      function isObject(w) {
        let S = typeof w;
        return null != w && ('object' === S || 'function' === S) && !Array.isArray(w);
      }
      function runIfFn(w, ...S) {
        return isFunction(w) ? w(...S) : w;
      }
      var isFunction = (w) => 'function' == typeof w,
        dataAttr = (w) => (w ? '' : void 0),
        ariaAttr = (w) => !!w || void 0;
      function callAllHandlers(...w) {
        return function (S) {
          w.some((w) => (null == w || w(S), null == S ? void 0 : S.defaultPrevented));
        };
      }
    },
    83109: function (w, S, C) {
      'use strict';
      C.d(S, {
        $: function () {
          return ec;
        }
      });
      var I = C(99538),
        $ = C(58250),
        er = C(45655),
        en = C(50446),
        ei = C(69742),
        eo = C(16465),
        es = C(57437),
        el = (0, I.F4)({ '0%': { transform: 'rotate(0deg)' }, '100%': { transform: 'rotate(360deg)' } }),
        ec = (0, $.G)((w, S) => {
          let C = (0, er.mq)('Spinner', w),
            {
              label: I = 'Loading...',
              thickness: $ = '2px',
              speed: ec = '0.45s',
              emptyColor: eu = 'transparent',
              className: ed,
              ...eh
            } = (0, en.Lr)(w),
            ef = (0, eo.cx)('chakra-spinner', ed),
            ep = {
              display: 'inline-block',
              borderColor: 'currentColor',
              borderStyle: 'solid',
              borderRadius: '99999px',
              borderWidth: $,
              borderBottomColor: eu,
              borderLeftColor: eu,
              animation: `${el} ${ec} linear infinite`,
              ...C
            };
          return (0, es.jsx)(ei.m.div, {
            ref: S,
            __css: ep,
            className: ef,
            ...eh,
            children: I && (0, es.jsx)(ei.m.span, { srOnly: !0, children: I })
          });
        });
      ec.displayName = 'Spinner';
    },
    50446: function (w, S, C) {
      'use strict';
      C.d(S, {
        D: function () {
          return createMultiStyleConfigHelpers;
        },
        Lr: function () {
          return omitThemingProps;
        },
        Ud: function () {
          return resolveStyleConfig;
        },
        ZR: function () {
          return isStyleProp;
        },
        _6: function () {
          return defineCssVars;
        },
        c0: function () {
          return toCSSVar;
        },
        cC: function () {
          return eF;
        },
        fj: function () {
          return defineStyleConfig;
        },
        gJ: function () {
          return cssVar;
        },
        iv: function () {
          return css;
        },
        k0: function () {
          return defineStyle;
        }
      });
      var I = C(16465),
        $ = C(94216),
        isImportant = (w) => /!(important)?$/.test(w),
        withoutImportant = (w) => ('string' == typeof w ? w.replace(/!(important)?$/, '').trim() : w),
        tokenToCSSVar = (w, S) => (C) => {
          let $ = String(S),
            er = isImportant($),
            en = withoutImportant($),
            ei = w ? `${w}.${en}` : en,
            eo = (0, I.Kn)(C.__cssMap) && ei in C.__cssMap ? C.__cssMap[ei].varRef : S;
          return (eo = withoutImportant(eo)), er ? `${eo} !important` : eo;
        };
      function createTransform(w) {
        let { scale: S, transform: C, compose: I } = w;
        return (w, $) => {
          var er;
          let en = tokenToCSSVar(S, w)($),
            ei = null != (er = null == C ? void 0 : C(en, $)) ? er : en;
          return I && (ei = I(ei, $)), ei;
        };
      }
      var pipe =
        (...w) =>
        (S) =>
          w.reduce((w, S) => S(w), S);
      function toConfig(w, S) {
        return (C) => {
          let I = { property: C, scale: w };
          return (I.transform = createTransform({ scale: w, transform: S })), I;
        };
      }
      var getRtl =
        ({ rtl: w, ltr: S }) =>
        (C) =>
          'rtl' === C.direction ? w : S;
      function logical(w) {
        let { property: S, scale: C, transform: I } = w;
        return { scale: C, property: getRtl(S), transform: C ? createTransform({ scale: C, compose: I }) : I };
      }
      var er = [
        'rotate(var(--chakra-rotate, 0))',
        'scaleX(var(--chakra-scale-x, 1))',
        'scaleY(var(--chakra-scale-y, 1))',
        'skewX(var(--chakra-skew-x, 0))',
        'skewY(var(--chakra-skew-y, 0))'
      ];
      function getTransformTemplate() {
        return ['translateX(var(--chakra-translate-x, 0))', 'translateY(var(--chakra-translate-y, 0))', ...er].join(
          ' '
        );
      }
      function getTransformGpuTemplate() {
        return ['translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)', ...er].join(' ');
      }
      var en = {
          '--chakra-blur': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-brightness': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-contrast': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-grayscale': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-hue-rotate': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-invert': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-saturate': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-sepia': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-drop-shadow': 'var(--chakra-empty,/*!*/ /*!*/)',
          filter:
            'var(--chakra-blur) var(--chakra-brightness) var(--chakra-contrast) var(--chakra-grayscale) var(--chakra-hue-rotate) var(--chakra-invert) var(--chakra-saturate) var(--chakra-sepia) var(--chakra-drop-shadow)'
        },
        ei = {
          backdropFilter:
            'var(--chakra-backdrop-blur) var(--chakra-backdrop-brightness) var(--chakra-backdrop-contrast) var(--chakra-backdrop-grayscale) var(--chakra-backdrop-hue-rotate) var(--chakra-backdrop-invert) var(--chakra-backdrop-opacity) var(--chakra-backdrop-saturate) var(--chakra-backdrop-sepia)',
          '--chakra-backdrop-blur': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-backdrop-brightness': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-backdrop-contrast': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-backdrop-grayscale': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-backdrop-hue-rotate': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-backdrop-invert': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-backdrop-opacity': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-backdrop-saturate': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-backdrop-sepia': 'var(--chakra-empty,/*!*/ /*!*/)'
        };
      function getRingTemplate(w) {
        return {
          '--chakra-ring-offset-shadow':
            'var(--chakra-ring-inset) 0 0 0 var(--chakra-ring-offset-width) var(--chakra-ring-offset-color)',
          '--chakra-ring-shadow':
            'var(--chakra-ring-inset) 0 0 0 calc(var(--chakra-ring-width) + var(--chakra-ring-offset-width)) var(--chakra-ring-color)',
          '--chakra-ring-width': w,
          boxShadow: 'var(--chakra-ring-offset-shadow), var(--chakra-ring-shadow), var(--chakra-shadow, 0 0 #0000)'
        };
      }
      var eo = {
          'row-reverse': { space: '--chakra-space-x-reverse', divide: '--chakra-divide-x-reverse' },
          'column-reverse': { space: '--chakra-space-y-reverse', divide: '--chakra-divide-y-reverse' }
        },
        es = {
          'to-t': 'to top',
          'to-tr': 'to top right',
          'to-r': 'to right',
          'to-br': 'to bottom right',
          'to-b': 'to bottom',
          'to-bl': 'to bottom left',
          'to-l': 'to left',
          'to-tl': 'to top left'
        },
        el = new Set(Object.values(es)),
        ec = new Set(['none', '-moz-initial', 'inherit', 'initial', 'revert', 'unset']),
        trimSpace = (w) => w.trim();
      function parseGradient(w, S) {
        if (null == w || ec.has(w)) return w;
        let C = isCSSFunction(w) || ec.has(w);
        if (!C) return `url('${w}')`;
        let I = /(^[a-z-A-Z]+)\((.*)\)/g.exec(w),
          $ = null == I ? void 0 : I[1],
          er = null == I ? void 0 : I[2];
        if (!$ || !er) return w;
        let en = $.includes('-gradient') ? $ : `${$}-gradient`,
          [ei, ...eo] = er.split(',').map(trimSpace).filter(Boolean);
        if ((null == eo ? void 0 : eo.length) === 0) return w;
        let eu = ei in es ? es[ei] : ei;
        eo.unshift(eu);
        let ed = eo.map((w) => {
          if (el.has(w)) return w;
          let C = w.indexOf(' '),
            [I, $] = -1 !== C ? [w.substr(0, C), w.substr(C + 1)] : [w],
            er = isCSSFunction($) ? $ : $ && $.split(' '),
            en = `colors.${I}`,
            ei = en in S.__cssMap ? S.__cssMap[en].varRef : I;
          return er ? [ei, ...(Array.isArray(er) ? er : [er])].join(' ') : ei;
        });
        return `${en}(${ed.join(', ')})`;
      }
      var isCSSFunction = (w) => 'string' == typeof w && w.includes('(') && w.includes(')');
      function isCssVar(w) {
        return /^var\(--.+\)$/.test(w);
      }
      var analyzeCSSValue = (w) => {
          let S = parseFloat(w.toString()),
            C = w.toString().replace(String(S), '');
          return { unitless: !C, value: S, unit: C };
        },
        wrap = (w) => (S) => `${w}(${S})`,
        eu = {
          filter: (w) => ('auto' !== w ? w : en),
          backdropFilter: (w) => ('auto' !== w ? w : ei),
          ring: (w) => getRingTemplate(eu.px(w)),
          bgClip: (w) => ('text' === w ? { color: 'transparent', backgroundClip: 'text' } : { backgroundClip: w }),
          transform: (w) => ('auto' === w ? getTransformTemplate() : 'auto-gpu' === w ? getTransformGpuTemplate() : w),
          vh: (w) => ('$100vh' === w ? 'var(--chakra-vh)' : w),
          px(w) {
            if (null == w) return w;
            let { unitless: S } = analyzeCSSValue(w);
            return S || 'number' == typeof w ? `${w}px` : w;
          },
          fraction: (w) => ('number' != typeof w || w > 1 ? w : `${100 * w}%`),
          float: (w, S) => ('rtl' === S.direction ? { left: 'right', right: 'left' }[w] : w),
          degree(w) {
            if (isCssVar(w) || null == w) return w;
            let S = 'string' == typeof w && !w.endsWith('deg');
            return 'number' == typeof w || S ? `${w}deg` : w;
          },
          gradient: (w, S) => parseGradient(w, null != S ? S : {}),
          blur: wrap('blur'),
          opacity: wrap('opacity'),
          brightness: wrap('brightness'),
          contrast: wrap('contrast'),
          dropShadow: wrap('drop-shadow'),
          grayscale: wrap('grayscale'),
          hueRotate: wrap('hue-rotate'),
          invert: wrap('invert'),
          saturate: wrap('saturate'),
          sepia: wrap('sepia'),
          bgImage(w) {
            if (null == w) return w;
            let S = isCSSFunction(w) || ec.has(w);
            return S ? w : `url(${w})`;
          },
          outline(w) {
            let S = '0' === String(w) || 'none' === String(w);
            return null !== w && S ? { outline: '2px solid transparent', outlineOffset: '2px' } : { outline: w };
          },
          flexDirection(w) {
            var S;
            let { space: C, divide: I } = null != (S = eo[w]) ? S : {},
              $ = { flexDirection: w };
            return C && ($[C] = 1), I && ($[I] = 1), $;
          }
        },
        ed = {
          borderWidths: toConfig('borderWidths'),
          borderStyles: toConfig('borderStyles'),
          colors: toConfig('colors'),
          borders: toConfig('borders'),
          gradients: toConfig('gradients', eu.gradient),
          radii: toConfig('radii', eu.px),
          space: toConfig('space', pipe(eu.vh, eu.px)),
          spaceT: toConfig('space', pipe(eu.vh, eu.px)),
          degreeT: (w) => ({ property: w, transform: eu.degree }),
          prop: (w, S, C) => ({
            property: w,
            scale: S,
            ...(S && { transform: createTransform({ scale: S, transform: C }) })
          }),
          propT: (w, S) => ({ property: w, transform: S }),
          sizes: toConfig('sizes', pipe(eu.vh, eu.px)),
          sizesT: toConfig('sizes', pipe(eu.vh, eu.fraction)),
          shadows: toConfig('shadows'),
          logical,
          blur: toConfig('blur', eu.blur)
        },
        eh = {
          background: ed.colors('background'),
          backgroundColor: ed.colors('backgroundColor'),
          backgroundImage: ed.gradients('backgroundImage'),
          backgroundSize: !0,
          backgroundPosition: !0,
          backgroundRepeat: !0,
          backgroundAttachment: !0,
          backgroundClip: { transform: eu.bgClip },
          bgSize: ed.prop('backgroundSize'),
          bgPosition: ed.prop('backgroundPosition'),
          bg: ed.colors('background'),
          bgColor: ed.colors('backgroundColor'),
          bgPos: ed.prop('backgroundPosition'),
          bgRepeat: ed.prop('backgroundRepeat'),
          bgAttachment: ed.prop('backgroundAttachment'),
          bgGradient: ed.gradients('backgroundImage'),
          bgClip: { transform: eu.bgClip }
        };
      Object.assign(eh, { bgImage: eh.backgroundImage, bgImg: eh.backgroundImage });
      var ef = {
        border: ed.borders('border'),
        borderWidth: ed.borderWidths('borderWidth'),
        borderStyle: ed.borderStyles('borderStyle'),
        borderColor: ed.colors('borderColor'),
        borderRadius: ed.radii('borderRadius'),
        borderTop: ed.borders('borderTop'),
        borderBlockStart: ed.borders('borderBlockStart'),
        borderTopLeftRadius: ed.radii('borderTopLeftRadius'),
        borderStartStartRadius: ed.logical({
          scale: 'radii',
          property: { ltr: 'borderTopLeftRadius', rtl: 'borderTopRightRadius' }
        }),
        borderEndStartRadius: ed.logical({
          scale: 'radii',
          property: { ltr: 'borderBottomLeftRadius', rtl: 'borderBottomRightRadius' }
        }),
        borderTopRightRadius: ed.radii('borderTopRightRadius'),
        borderStartEndRadius: ed.logical({
          scale: 'radii',
          property: { ltr: 'borderTopRightRadius', rtl: 'borderTopLeftRadius' }
        }),
        borderEndEndRadius: ed.logical({
          scale: 'radii',
          property: { ltr: 'borderBottomRightRadius', rtl: 'borderBottomLeftRadius' }
        }),
        borderRight: ed.borders('borderRight'),
        borderInlineEnd: ed.borders('borderInlineEnd'),
        borderBottom: ed.borders('borderBottom'),
        borderBlockEnd: ed.borders('borderBlockEnd'),
        borderBottomLeftRadius: ed.radii('borderBottomLeftRadius'),
        borderBottomRightRadius: ed.radii('borderBottomRightRadius'),
        borderLeft: ed.borders('borderLeft'),
        borderInlineStart: { property: 'borderInlineStart', scale: 'borders' },
        borderInlineStartRadius: ed.logical({
          scale: 'radii',
          property: {
            ltr: ['borderTopLeftRadius', 'borderBottomLeftRadius'],
            rtl: ['borderTopRightRadius', 'borderBottomRightRadius']
          }
        }),
        borderInlineEndRadius: ed.logical({
          scale: 'radii',
          property: {
            ltr: ['borderTopRightRadius', 'borderBottomRightRadius'],
            rtl: ['borderTopLeftRadius', 'borderBottomLeftRadius']
          }
        }),
        borderX: ed.borders(['borderLeft', 'borderRight']),
        borderInline: ed.borders('borderInline'),
        borderY: ed.borders(['borderTop', 'borderBottom']),
        borderBlock: ed.borders('borderBlock'),
        borderTopWidth: ed.borderWidths('borderTopWidth'),
        borderBlockStartWidth: ed.borderWidths('borderBlockStartWidth'),
        borderTopColor: ed.colors('borderTopColor'),
        borderBlockStartColor: ed.colors('borderBlockStartColor'),
        borderTopStyle: ed.borderStyles('borderTopStyle'),
        borderBlockStartStyle: ed.borderStyles('borderBlockStartStyle'),
        borderBottomWidth: ed.borderWidths('borderBottomWidth'),
        borderBlockEndWidth: ed.borderWidths('borderBlockEndWidth'),
        borderBottomColor: ed.colors('borderBottomColor'),
        borderBlockEndColor: ed.colors('borderBlockEndColor'),
        borderBottomStyle: ed.borderStyles('borderBottomStyle'),
        borderBlockEndStyle: ed.borderStyles('borderBlockEndStyle'),
        borderLeftWidth: ed.borderWidths('borderLeftWidth'),
        borderInlineStartWidth: ed.borderWidths('borderInlineStartWidth'),
        borderLeftColor: ed.colors('borderLeftColor'),
        borderInlineStartColor: ed.colors('borderInlineStartColor'),
        borderLeftStyle: ed.borderStyles('borderLeftStyle'),
        borderInlineStartStyle: ed.borderStyles('borderInlineStartStyle'),
        borderRightWidth: ed.borderWidths('borderRightWidth'),
        borderInlineEndWidth: ed.borderWidths('borderInlineEndWidth'),
        borderRightColor: ed.colors('borderRightColor'),
        borderInlineEndColor: ed.colors('borderInlineEndColor'),
        borderRightStyle: ed.borderStyles('borderRightStyle'),
        borderInlineEndStyle: ed.borderStyles('borderInlineEndStyle'),
        borderTopRadius: ed.radii(['borderTopLeftRadius', 'borderTopRightRadius']),
        borderBottomRadius: ed.radii(['borderBottomLeftRadius', 'borderBottomRightRadius']),
        borderLeftRadius: ed.radii(['borderTopLeftRadius', 'borderBottomLeftRadius']),
        borderRightRadius: ed.radii(['borderTopRightRadius', 'borderBottomRightRadius'])
      };
      Object.assign(ef, {
        rounded: ef.borderRadius,
        roundedTop: ef.borderTopRadius,
        roundedTopLeft: ef.borderTopLeftRadius,
        roundedTopRight: ef.borderTopRightRadius,
        roundedTopStart: ef.borderStartStartRadius,
        roundedTopEnd: ef.borderStartEndRadius,
        roundedBottom: ef.borderBottomRadius,
        roundedBottomLeft: ef.borderBottomLeftRadius,
        roundedBottomRight: ef.borderBottomRightRadius,
        roundedBottomStart: ef.borderEndStartRadius,
        roundedBottomEnd: ef.borderEndEndRadius,
        roundedLeft: ef.borderLeftRadius,
        roundedRight: ef.borderRightRadius,
        roundedStart: ef.borderInlineStartRadius,
        roundedEnd: ef.borderInlineEndRadius,
        borderStart: ef.borderInlineStart,
        borderEnd: ef.borderInlineEnd,
        borderTopStartRadius: ef.borderStartStartRadius,
        borderTopEndRadius: ef.borderStartEndRadius,
        borderBottomStartRadius: ef.borderEndStartRadius,
        borderBottomEndRadius: ef.borderEndEndRadius,
        borderStartRadius: ef.borderInlineStartRadius,
        borderEndRadius: ef.borderInlineEndRadius,
        borderStartWidth: ef.borderInlineStartWidth,
        borderEndWidth: ef.borderInlineEndWidth,
        borderStartColor: ef.borderInlineStartColor,
        borderEndColor: ef.borderInlineEndColor,
        borderStartStyle: ef.borderInlineStartStyle,
        borderEndStyle: ef.borderInlineEndStyle
      });
      var ep = {
          color: ed.colors('color'),
          textColor: ed.colors('color'),
          fill: ed.colors('fill'),
          stroke: ed.colors('stroke')
        },
        em = {
          boxShadow: ed.shadows('boxShadow'),
          mixBlendMode: !0,
          blendMode: ed.prop('mixBlendMode'),
          backgroundBlendMode: !0,
          bgBlendMode: ed.prop('backgroundBlendMode'),
          opacity: !0
        };
      Object.assign(em, { shadow: em.boxShadow });
      var eg = {
          filter: { transform: eu.filter },
          blur: ed.blur('--chakra-blur'),
          brightness: ed.propT('--chakra-brightness', eu.brightness),
          contrast: ed.propT('--chakra-contrast', eu.contrast),
          hueRotate: ed.degreeT('--chakra-hue-rotate'),
          invert: ed.propT('--chakra-invert', eu.invert),
          saturate: ed.propT('--chakra-saturate', eu.saturate),
          dropShadow: ed.propT('--chakra-drop-shadow', eu.dropShadow),
          backdropFilter: { transform: eu.backdropFilter },
          backdropBlur: ed.blur('--chakra-backdrop-blur'),
          backdropBrightness: ed.propT('--chakra-backdrop-brightness', eu.brightness),
          backdropContrast: ed.propT('--chakra-backdrop-contrast', eu.contrast),
          backdropHueRotate: ed.degreeT('--chakra-backdrop-hue-rotate'),
          backdropInvert: ed.propT('--chakra-backdrop-invert', eu.invert),
          backdropSaturate: ed.propT('--chakra-backdrop-saturate', eu.saturate)
        },
        ey = {
          alignItems: !0,
          alignContent: !0,
          justifyItems: !0,
          justifyContent: !0,
          flexWrap: !0,
          flexDirection: { transform: eu.flexDirection },
          flex: !0,
          flexFlow: !0,
          flexGrow: !0,
          flexShrink: !0,
          flexBasis: ed.sizes('flexBasis'),
          justifySelf: !0,
          alignSelf: !0,
          order: !0,
          placeItems: !0,
          placeContent: !0,
          placeSelf: !0,
          gap: ed.space('gap'),
          rowGap: ed.space('rowGap'),
          columnGap: ed.space('columnGap')
        };
      Object.assign(ey, { flexDir: ey.flexDirection });
      var ev = {
          gridGap: ed.space('gridGap'),
          gridColumnGap: ed.space('gridColumnGap'),
          gridRowGap: ed.space('gridRowGap'),
          gridColumn: !0,
          gridRow: !0,
          gridAutoFlow: !0,
          gridAutoColumns: !0,
          gridColumnStart: !0,
          gridColumnEnd: !0,
          gridRowStart: !0,
          gridRowEnd: !0,
          gridAutoRows: !0,
          gridTemplate: !0,
          gridTemplateColumns: !0,
          gridTemplateRows: !0,
          gridTemplateAreas: !0,
          gridArea: !0
        },
        eb = {
          appearance: !0,
          cursor: !0,
          resize: !0,
          userSelect: !0,
          pointerEvents: !0,
          outline: { transform: eu.outline },
          outlineOffset: !0,
          outlineColor: ed.colors('outlineColor')
        },
        e_ = {
          width: ed.sizesT('width'),
          inlineSize: ed.sizesT('inlineSize'),
          height: ed.sizes('height'),
          blockSize: ed.sizes('blockSize'),
          boxSize: ed.sizes(['width', 'height']),
          minWidth: ed.sizes('minWidth'),
          minInlineSize: ed.sizes('minInlineSize'),
          minHeight: ed.sizes('minHeight'),
          minBlockSize: ed.sizes('minBlockSize'),
          maxWidth: ed.sizes('maxWidth'),
          maxInlineSize: ed.sizes('maxInlineSize'),
          maxHeight: ed.sizes('maxHeight'),
          maxBlockSize: ed.sizes('maxBlockSize'),
          overflow: !0,
          overflowX: !0,
          overflowY: !0,
          overscrollBehavior: !0,
          overscrollBehaviorX: !0,
          overscrollBehaviorY: !0,
          display: !0,
          aspectRatio: !0,
          hideFrom: {
            scale: 'breakpoints',
            transform: (w, S) => {
              var C, I, $;
              let er =
                  null != ($ = null == (I = null == (C = S.__breakpoints) ? void 0 : C.get(w)) ? void 0 : I.minW)
                    ? $
                    : w,
                en = `@media screen and (min-width: ${er})`;
              return { [en]: { display: 'none' } };
            }
          },
          hideBelow: {
            scale: 'breakpoints',
            transform: (w, S) => {
              var C, I, $;
              let er =
                  null != ($ = null == (I = null == (C = S.__breakpoints) ? void 0 : C.get(w)) ? void 0 : I._minW)
                    ? $
                    : w,
                en = `@media screen and (max-width: ${er})`;
              return { [en]: { display: 'none' } };
            }
          },
          verticalAlign: !0,
          boxSizing: !0,
          boxDecorationBreak: !0,
          float: ed.propT('float', eu.float),
          objectFit: !0,
          objectPosition: !0,
          visibility: !0,
          isolation: !0
        };
      Object.assign(e_, {
        w: e_.width,
        h: e_.height,
        minW: e_.minWidth,
        maxW: e_.maxWidth,
        minH: e_.minHeight,
        maxH: e_.maxHeight,
        overscroll: e_.overscrollBehavior,
        overscrollX: e_.overscrollBehaviorX,
        overscrollY: e_.overscrollBehaviorY
      });
      var ex = {
          listStyleType: !0,
          listStylePosition: !0,
          listStylePos: ed.prop('listStylePosition'),
          listStyleImage: !0,
          listStyleImg: ed.prop('listStyleImage')
        },
        ew = ((w) => {
          let S = new WeakMap();
          return (C, I, $, er) => {
            if (void 0 === C) return w(C, I, $);
            S.has(C) || S.set(C, new Map());
            let en = S.get(C);
            if (en.has(I)) return en.get(I);
            let ei = w(C, I, $, er);
            return en.set(I, ei), ei;
          };
        })(function (w, S, C, I) {
          let $ = 'string' == typeof S ? S.split('.') : [S];
          for (I = 0; I < $.length && w; I += 1) w = w[$[I]];
          return void 0 === w ? C : w;
        }),
        ek = {
          border: '0px',
          clip: 'rect(0, 0, 0, 0)',
          width: '1px',
          height: '1px',
          margin: '-1px',
          padding: '0px',
          overflow: 'hidden',
          whiteSpace: 'nowrap',
          position: 'absolute'
        },
        eS = {
          position: 'static',
          width: 'auto',
          height: 'auto',
          clip: 'auto',
          padding: '0',
          margin: '0',
          overflow: 'visible',
          whiteSpace: 'normal'
        },
        getWithPriority = (w, S, C) => {
          let I = {},
            $ = ew(w, S, {});
          for (let w in $) {
            let S = w in C && null != C[w];
            S || (I[w] = $[w]);
          }
          return I;
        },
        eC = {
          position: !0,
          pos: ed.prop('position'),
          zIndex: ed.prop('zIndex', 'zIndices'),
          inset: ed.spaceT('inset'),
          insetX: ed.spaceT(['left', 'right']),
          insetInline: ed.spaceT('insetInline'),
          insetY: ed.spaceT(['top', 'bottom']),
          insetBlock: ed.spaceT('insetBlock'),
          top: ed.spaceT('top'),
          insetBlockStart: ed.spaceT('insetBlockStart'),
          bottom: ed.spaceT('bottom'),
          insetBlockEnd: ed.spaceT('insetBlockEnd'),
          left: ed.spaceT('left'),
          insetInlineStart: ed.logical({ scale: 'space', property: { ltr: 'left', rtl: 'right' } }),
          right: ed.spaceT('right'),
          insetInlineEnd: ed.logical({ scale: 'space', property: { ltr: 'right', rtl: 'left' } })
        };
      Object.assign(eC, { insetStart: eC.insetInlineStart, insetEnd: eC.insetInlineEnd });
      var eP = {
          ring: { transform: eu.ring },
          ringColor: ed.colors('--chakra-ring-color'),
          ringOffset: ed.prop('--chakra-ring-offset-width'),
          ringOffsetColor: ed.colors('--chakra-ring-offset-color'),
          ringInset: ed.prop('--chakra-ring-inset')
        },
        eA = {
          margin: ed.spaceT('margin'),
          marginTop: ed.spaceT('marginTop'),
          marginBlockStart: ed.spaceT('marginBlockStart'),
          marginRight: ed.spaceT('marginRight'),
          marginInlineEnd: ed.spaceT('marginInlineEnd'),
          marginBottom: ed.spaceT('marginBottom'),
          marginBlockEnd: ed.spaceT('marginBlockEnd'),
          marginLeft: ed.spaceT('marginLeft'),
          marginInlineStart: ed.spaceT('marginInlineStart'),
          marginX: ed.spaceT(['marginInlineStart', 'marginInlineEnd']),
          marginInline: ed.spaceT('marginInline'),
          marginY: ed.spaceT(['marginTop', 'marginBottom']),
          marginBlock: ed.spaceT('marginBlock'),
          padding: ed.space('padding'),
          paddingTop: ed.space('paddingTop'),
          paddingBlockStart: ed.space('paddingBlockStart'),
          paddingRight: ed.space('paddingRight'),
          paddingBottom: ed.space('paddingBottom'),
          paddingBlockEnd: ed.space('paddingBlockEnd'),
          paddingLeft: ed.space('paddingLeft'),
          paddingInlineStart: ed.space('paddingInlineStart'),
          paddingInlineEnd: ed.space('paddingInlineEnd'),
          paddingX: ed.space(['paddingInlineStart', 'paddingInlineEnd']),
          paddingInline: ed.space('paddingInline'),
          paddingY: ed.space(['paddingTop', 'paddingBottom']),
          paddingBlock: ed.space('paddingBlock')
        };
      Object.assign(eA, {
        m: eA.margin,
        mt: eA.marginTop,
        mr: eA.marginRight,
        me: eA.marginInlineEnd,
        marginEnd: eA.marginInlineEnd,
        mb: eA.marginBottom,
        ml: eA.marginLeft,
        ms: eA.marginInlineStart,
        marginStart: eA.marginInlineStart,
        mx: eA.marginX,
        my: eA.marginY,
        p: eA.padding,
        pt: eA.paddingTop,
        py: eA.paddingY,
        px: eA.paddingX,
        pb: eA.paddingBottom,
        pl: eA.paddingLeft,
        ps: eA.paddingInlineStart,
        paddingStart: eA.paddingInlineStart,
        pr: eA.paddingRight,
        pe: eA.paddingInlineEnd,
        paddingEnd: eA.paddingInlineEnd
      });
      var eT = {
          textDecorationColor: ed.colors('textDecorationColor'),
          textDecoration: !0,
          textDecor: { property: 'textDecoration' },
          textDecorationLine: !0,
          textDecorationStyle: !0,
          textDecorationThickness: !0,
          textUnderlineOffset: !0,
          textShadow: ed.shadows('textShadow')
        },
        eE = {
          clipPath: !0,
          transform: ed.propT('transform', eu.transform),
          transformOrigin: !0,
          translateX: ed.spaceT('--chakra-translate-x'),
          translateY: ed.spaceT('--chakra-translate-y'),
          skewX: ed.degreeT('--chakra-skew-x'),
          skewY: ed.degreeT('--chakra-skew-y'),
          scaleX: ed.prop('--chakra-scale-x'),
          scaleY: ed.prop('--chakra-scale-y'),
          scale: ed.prop(['--chakra-scale-x', '--chakra-scale-y']),
          rotate: ed.degreeT('--chakra-rotate')
        },
        ez = {
          transition: !0,
          transitionDelay: !0,
          animation: !0,
          willChange: !0,
          transitionDuration: ed.prop('transitionDuration', 'transition.duration'),
          transitionProperty: ed.prop('transitionProperty', 'transition.property'),
          transitionTimingFunction: ed.prop('transitionTimingFunction', 'transition.easing')
        },
        eI = {
          fontFamily: ed.prop('fontFamily', 'fonts'),
          fontSize: ed.prop('fontSize', 'fontSizes', eu.px),
          fontWeight: ed.prop('fontWeight', 'fontWeights'),
          lineHeight: ed.prop('lineHeight', 'lineHeights'),
          letterSpacing: ed.prop('letterSpacing', 'letterSpacings'),
          textAlign: !0,
          fontStyle: !0,
          textIndent: !0,
          wordBreak: !0,
          overflowWrap: !0,
          textOverflow: !0,
          textTransform: !0,
          whiteSpace: !0,
          isTruncated: {
            transform(w) {
              if (!0 === w) return { overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' };
            }
          },
          noOfLines: {
            static: {
              overflow: 'hidden',
              textOverflow: 'ellipsis',
              display: '-webkit-box',
              WebkitBoxOrient: 'vertical',
              WebkitLineClamp: 'var(--chakra-line-clamp)'
            },
            property: '--chakra-line-clamp'
          }
        },
        eB = {
          scrollBehavior: !0,
          scrollSnapAlign: !0,
          scrollSnapStop: !0,
          scrollSnapType: !0,
          scrollMargin: ed.spaceT('scrollMargin'),
          scrollMarginTop: ed.spaceT('scrollMarginTop'),
          scrollMarginBottom: ed.spaceT('scrollMarginBottom'),
          scrollMarginLeft: ed.spaceT('scrollMarginLeft'),
          scrollMarginRight: ed.spaceT('scrollMarginRight'),
          scrollMarginX: ed.spaceT(['scrollMarginLeft', 'scrollMarginRight']),
          scrollMarginY: ed.spaceT(['scrollMarginTop', 'scrollMarginBottom']),
          scrollPadding: ed.spaceT('scrollPadding'),
          scrollPaddingTop: ed.spaceT('scrollPaddingTop'),
          scrollPaddingBottom: ed.spaceT('scrollPaddingBottom'),
          scrollPaddingLeft: ed.spaceT('scrollPaddingLeft'),
          scrollPaddingRight: ed.spaceT('scrollPaddingRight'),
          scrollPaddingX: ed.spaceT(['scrollPaddingLeft', 'scrollPaddingRight']),
          scrollPaddingY: ed.spaceT(['scrollPaddingTop', 'scrollPaddingBottom'])
        };
      function resolveReference(w) {
        return (0, I.Kn)(w) && w.reference ? w.reference : String(w);
      }
      var toExpression = (w, ...S) => S.map(resolveReference).join(` ${w} `).replace(/calc/g, ''),
        add = (...w) => `calc(${toExpression('+', ...w)})`,
        subtract = (...w) => `calc(${toExpression('-', ...w)})`,
        multiply = (...w) => `calc(${toExpression('*', ...w)})`,
        divide = (...w) => `calc(${toExpression('/', ...w)})`,
        negate = (w) => {
          let S = resolveReference(w);
          return null == S || Number.isNaN(parseFloat(S))
            ? multiply(S, -1)
            : String(S).startsWith('-')
            ? String(S).slice(1)
            : `-${S}`;
        },
        eR = Object.assign(
          (w) => ({
            add: (...S) => eR(add(w, ...S)),
            subtract: (...S) => eR(subtract(w, ...S)),
            multiply: (...S) => eR(multiply(w, ...S)),
            divide: (...S) => eR(divide(w, ...S)),
            negate: () => eR(negate(w)),
            toString: () => w.toString()
          }),
          { add, subtract, multiply, divide, negate }
        );
      function replaceWhiteSpace(w, S = '-') {
        return w.replace(/\s+/g, S);
      }
      function escape(w) {
        let S = replaceWhiteSpace(w.toString());
        return escapeSymbol(escapeDot(S));
      }
      function escapeDot(w) {
        if (w.includes('\\.')) return w;
        let S = !Number.isInteger(parseFloat(w.toString()));
        return S ? w.replace('.', '\\.') : w;
      }
      function escapeSymbol(w) {
        return w.replace(/[!-,/:-@[-^`{-~]/g, '\\$&');
      }
      function addPrefix(w, S = '') {
        return [S, w].filter(Boolean).join('-');
      }
      function toVarReference(w, S) {
        return `var(${w}${S ? `, ${S}` : ''})`;
      }
      function toVarDefinition(w, S = '') {
        return escape(`--${addPrefix(w, S)}`);
      }
      function cssVar(w, S, C) {
        let I = toVarDefinition(w, C);
        return { variable: I, reference: toVarReference(I, S) };
      }
      function defineCssVars(w, S) {
        let C = {};
        for (let I of S) {
          if (Array.isArray(I)) {
            let [S, $] = I;
            C[S] = cssVar(`${w}-${S}`, $);
            continue;
          }
          C[I] = cssVar(`${w}-${I}`);
        }
        return C;
      }
      function getLastItem(w) {
        let S = null == w ? 0 : w.length;
        return S ? w[S - 1] : void 0;
      }
      function analyzeCSSValue2(w) {
        let S = parseFloat(w.toString()),
          C = w.toString().replace(String(S), '');
        return { unitless: !C, value: S, unit: C };
      }
      function px(w) {
        if (null == w) return w;
        let { unitless: S } = analyzeCSSValue2(w);
        return S || 'number' == typeof w ? `${w}px` : w;
      }
      var sortByBreakpointValue = (w, S) => (parseInt(w[1], 10) > parseInt(S[1], 10) ? 1 : -1),
        sortBps = (w) => Object.fromEntries(Object.entries(w).sort(sortByBreakpointValue));
      function normalize(w) {
        let S = sortBps(w);
        return Object.assign(Object.values(S), S);
      }
      function keys(w) {
        let S = Object.keys(sortBps(w));
        return new Set(S);
      }
      function subtract2(w) {
        var S;
        return w
          ? 'number' == typeof (w = null != (S = px(w)) ? S : w)
            ? `${w + -0.02}`
            : w.replace(/(\d+\.?\d*)/u, (w) => `${parseFloat(w) + -0.02}`)
          : w;
      }
      function toMediaQueryString(w, S) {
        let C = ['@media screen'];
        return w && C.push('and', `(min-width: ${px(w)})`), S && C.push('and', `(max-width: ${px(S)})`), C.join(' ');
      }
      function analyzeBreakpoints(w) {
        var S;
        if (!w) return null;
        w.base = null != (S = w.base) ? S : '0px';
        let C = normalize(w),
          $ = Object.entries(w)
            .sort(sortByBreakpointValue)
            .map(([w, S], C, I) => {
              var $;
              let [, er] = null != ($ = I[C + 1]) ? $ : [];
              return (
                (er = parseFloat(er) > 0 ? subtract2(er) : void 0),
                {
                  _minW: subtract2(S),
                  breakpoint: w,
                  minW: S,
                  maxW: er,
                  maxWQuery: toMediaQueryString(null, er),
                  minWQuery: toMediaQueryString(S),
                  minMaxQuery: toMediaQueryString(S, er)
                }
              );
            }),
          er = keys(w),
          en = Array.from(er.values());
        return {
          keys: er,
          normalized: C,
          isResponsive(w) {
            let S = Object.keys(w);
            return S.length > 0 && S.every((w) => er.has(w));
          },
          asObject: sortBps(w),
          asArray: normalize(w),
          details: $,
          get: (w) => $.find((S) => S.breakpoint === w),
          media: [null, ...C.map((w) => toMediaQueryString(w)).slice(1)],
          toArrayValue(w) {
            if (!(0, I.Kn)(w)) throw Error('toArrayValue: value must be an object');
            let S = en.map((S) => {
              var C;
              return null != (C = w[S]) ? C : null;
            });
            for (; null === getLastItem(S); ) S.pop();
            return S;
          },
          toObjectValue(w) {
            if (!Array.isArray(w)) throw Error('toObjectValue: value must be an array');
            return w.reduce((w, S, C) => {
              let I = en[C];
              return null != I && null != S && (w[I] = S), w;
            }, {});
          }
        };
      }
      var eO = {
          hover: (w, S) => `${w}:hover ${S}, ${w}[data-hover] ${S}`,
          focus: (w, S) => `${w}:focus ${S}, ${w}[data-focus] ${S}`,
          focusVisible: (w, S) => `${w}:focus-visible ${S}`,
          focusWithin: (w, S) => `${w}:focus-within ${S}`,
          active: (w, S) => `${w}:active ${S}, ${w}[data-active] ${S}`,
          disabled: (w, S) => `${w}:disabled ${S}, ${w}[data-disabled] ${S}`,
          invalid: (w, S) => `${w}:invalid ${S}, ${w}[data-invalid] ${S}`,
          checked: (w, S) => `${w}:checked ${S}, ${w}[data-checked] ${S}`,
          placeholderShown: (w, S) => `${w}:placeholder-shown ${S}`
        },
        toGroup = (w) => merge((S) => w(S, '&'), '[role=group]', '[data-group]', '.group'),
        toPeer = (w) => merge((S) => w(S, '~ &'), '[data-peer]', '.peer'),
        merge = (w, ...S) => S.map(w).join(', '),
        eM = {
          _hover: '&:hover, &[data-hover]',
          _active: '&:active, &[data-active]',
          _focus: '&:focus, &[data-focus]',
          _highlighted: '&[data-highlighted]',
          _focusWithin: '&:focus-within',
          _focusVisible: '&:focus-visible, &[data-focus-visible]',
          _disabled: '&:disabled, &[disabled], &[aria-disabled=true], &[data-disabled]',
          _readOnly: '&[aria-readonly=true], &[readonly], &[data-readonly]',
          _before: '&::before',
          _after: '&::after',
          _empty: '&:empty',
          _expanded: '&[aria-expanded=true], &[data-expanded]',
          _checked: '&[aria-checked=true], &[data-checked]',
          _grabbed: '&[aria-grabbed=true], &[data-grabbed]',
          _pressed: '&[aria-pressed=true], &[data-pressed]',
          _invalid: '&[aria-invalid=true], &[data-invalid]',
          _valid: '&[data-valid], &[data-state=valid]',
          _loading: '&[data-loading], &[aria-busy=true]',
          _selected: '&[aria-selected=true], &[data-selected]',
          _hidden: '&[hidden], &[data-hidden]',
          _autofill: '&:-webkit-autofill',
          _even: '&:nth-of-type(even)',
          _odd: '&:nth-of-type(odd)',
          _first: '&:first-of-type',
          _firstLetter: '&::first-letter',
          _last: '&:last-of-type',
          _notFirst: '&:not(:first-of-type)',
          _notLast: '&:not(:last-of-type)',
          _visited: '&:visited',
          _activeLink: '&[aria-current=page]',
          _activeStep: '&[aria-current=step]',
          _indeterminate: '&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]',
          _groupHover: toGroup(eO.hover),
          _peerHover: toPeer(eO.hover),
          _groupFocus: toGroup(eO.focus),
          _peerFocus: toPeer(eO.focus),
          _groupFocusVisible: toGroup(eO.focusVisible),
          _peerFocusVisible: toPeer(eO.focusVisible),
          _groupActive: toGroup(eO.active),
          _peerActive: toPeer(eO.active),
          _groupDisabled: toGroup(eO.disabled),
          _peerDisabled: toPeer(eO.disabled),
          _groupInvalid: toGroup(eO.invalid),
          _peerInvalid: toPeer(eO.invalid),
          _groupChecked: toGroup(eO.checked),
          _peerChecked: toPeer(eO.checked),
          _groupFocusWithin: toGroup(eO.focusWithin),
          _peerFocusWithin: toPeer(eO.focusWithin),
          _peerPlaceholderShown: toPeer(eO.placeholderShown),
          _placeholder: '&::placeholder',
          _placeholderShown: '&:placeholder-shown',
          _fullScreen: '&:fullscreen',
          _selection: '&::selection',
          _rtl: '[dir=rtl] &, &[dir=rtl]',
          _ltr: '[dir=ltr] &, &[dir=ltr]',
          _mediaDark: '@media (prefers-color-scheme: dark)',
          _mediaReduceMotion: '@media (prefers-reduced-motion: reduce)',
          _dark: '.chakra-ui-dark &:not([data-theme]),[data-theme=dark] &:not([data-theme]),&[data-theme=dark]',
          _light: '.chakra-ui-light &:not([data-theme]),[data-theme=light] &:not([data-theme]),&[data-theme=light]',
          _horizontal: '&[data-orientation=horizontal]',
          _vertical: '&[data-orientation=vertical]'
        },
        eD = Object.keys(eM);
      function tokenToCssVar(w, S) {
        return cssVar(String(w).replace(/\./g, '-'), void 0, S);
      }
      function createThemeVars(w, S) {
        let C = {},
          er = {};
        for (let [en, ei] of Object.entries(w)) {
          let { isSemantic: eo, value: es } = ei,
            { variable: el, reference: ec } = tokenToCssVar(en, null == S ? void 0 : S.cssVarPrefix);
          if (!eo) {
            if (en.startsWith('space')) {
              let w = en.split('.'),
                [S, ...C] = w,
                I = `${S}.-${C.join('.')}`,
                $ = eR.negate(es),
                ei = eR.negate(ec);
              er[I] = { value: $, var: el, varRef: ei };
            }
            (C[el] = es), (er[en] = { value: es, var: el, varRef: ec });
            continue;
          }
          let lookupToken = (C) => {
              let I = String(en).split('.')[0],
                $ = [I, C].join('.'),
                er = w[$];
              if (!er) return C;
              let { reference: ei } = tokenToCssVar($, null == S ? void 0 : S.cssVarPrefix);
              return ei;
            },
            eu = (0, I.Kn)(es) ? es : { default: es };
          (C = $(
            C,
            Object.entries(eu).reduce((w, [S, C]) => {
              var I;
              if (!C) return w;
              let $ = lookupToken(`${C}`);
              if ('default' === S) return (w[el] = $), w;
              let er = null != (I = null == eM ? void 0 : eM[S]) ? I : S;
              return (w[er] = { [el]: $ }), w;
            }, {})
          )),
            (er[en] = { value: ec, var: el, varRef: ec });
        }
        return { cssVars: C, cssMap: er };
      }
      function omit(w, S = []) {
        let C = Object.assign({}, w);
        for (let w of S) w in C && delete C[w];
        return C;
      }
      function pick(w, S) {
        let C = {};
        for (let I of S) I in w && (C[I] = w[I]);
        return C;
      }
      function isObject5(w) {
        return 'object' == typeof w && null != w && !Array.isArray(w);
      }
      function walkObject(w, S, C = {}) {
        let { stop: I, getKey: $ } = C;
        function inner(w, C = []) {
          var er;
          if (isObject5(w) || Array.isArray(w)) {
            let en = {};
            for (let [ei, eo] of Object.entries(w)) {
              let es = null != (er = null == $ ? void 0 : $(ei)) ? er : ei,
                el = [...C, es];
              if (null == I ? void 0 : I(w, el)) return S(w, C);
              en[es] = inner(eo, el);
            }
            return en;
          }
          return S(w, C);
        }
        return inner(w);
      }
      var ej = [
        'colors',
        'borders',
        'borderWidths',
        'borderStyles',
        'fonts',
        'fontSizes',
        'fontWeights',
        'gradients',
        'letterSpacings',
        'lineHeights',
        'radii',
        'space',
        'shadows',
        'sizes',
        'zIndices',
        'transition',
        'blur',
        'breakpoints'
      ];
      function extractTokens(w) {
        return pick(w, ej);
      }
      function extractSemanticTokens(w) {
        return w.semanticTokens;
      }
      function omitVars(w) {
        let { __cssMap: S, __cssVars: C, __breakpoints: I, ...$ } = w;
        return $;
      }
      var isSemanticCondition = (w) => eD.includes(w) || 'default' === w;
      function flattenTokens({ tokens: w, semanticTokens: S }) {
        let C = {};
        return (
          walkObject(w, (w, S) => {
            null != w && (C[S.join('.')] = { isSemantic: !1, value: w });
          }),
          walkObject(
            S,
            (w, S) => {
              null != w && (C[S.join('.')] = { isSemantic: !0, value: w });
            },
            { stop: (w) => Object.keys(w).every(isSemanticCondition) }
          ),
          C
        );
      }
      function toCSSVar(w) {
        var S;
        let C = omitVars(w),
          I = extractTokens(C),
          $ = extractSemanticTokens(C),
          er = flattenTokens({ tokens: I, semanticTokens: $ }),
          en = null == (S = C.config) ? void 0 : S.cssVarPrefix,
          { cssMap: ei, cssVars: eo } = createThemeVars(er, { cssVarPrefix: en });
        return (
          Object.assign(C, {
            __cssVars: {
              '--chakra-ring-inset': 'var(--chakra-empty,/*!*/ /*!*/)',
              '--chakra-ring-offset-width': '0px',
              '--chakra-ring-offset-color': '#fff',
              '--chakra-ring-color': 'rgba(66, 153, 225, 0.6)',
              '--chakra-ring-offset-shadow': '0 0 #0000',
              '--chakra-ring-shadow': '0 0 #0000',
              '--chakra-space-x-reverse': '0',
              '--chakra-space-y-reverse': '0',
              ...eo
            },
            __cssMap: ei,
            __breakpoints: analyzeBreakpoints(C.breakpoints)
          }),
          C
        );
      }
      var eL = $(
        {},
        eh,
        ef,
        ep,
        ey,
        e_,
        eg,
        eP,
        eb,
        ev,
        {
          srOnly: { transform: (w) => (!0 === w ? ek : 'focusable' === w ? eS : {}) },
          layerStyle: { processResult: !0, transform: (w, S, C) => getWithPriority(S, `layerStyles.${w}`, C) },
          textStyle: { processResult: !0, transform: (w, S, C) => getWithPriority(S, `textStyles.${w}`, C) },
          apply: { processResult: !0, transform: (w, S, C) => getWithPriority(S, w, C) }
        },
        eC,
        em,
        eA,
        eB,
        eI,
        eT,
        eE,
        ex,
        ez
      );
      Object.keys(Object.assign({}, eA, e_, ey, ev, eC));
      var eF = [...Object.keys(eL), ...eD],
        eV = { ...eL, ...eM },
        isStyleProp = (w) => w in eV,
        expandResponsive = (w) => (S) => {
          if (!S.__breakpoints) return w;
          let { isResponsive: C, toArrayValue: $, media: er } = S.__breakpoints,
            en = {};
          for (let ei in w) {
            let eo = (0, I.Pu)(w[ei], S);
            if (null == eo) continue;
            if (!Array.isArray((eo = (0, I.Kn)(eo) && C(eo) ? $(eo) : eo))) {
              en[ei] = eo;
              continue;
            }
            let es = eo.slice(0, er.length).length;
            for (let w = 0; w < es; w += 1) {
              let S = null == er ? void 0 : er[w];
              if (!S) {
                en[ei] = eo[w];
                continue;
              }
              (en[S] = en[S] || {}), null != eo[w] && (en[S][ei] = eo[w]);
            }
          }
          return en;
        };
      function splitByComma(w) {
        let S = [],
          C = '',
          I = !1;
        for (let $ = 0; $ < w.length; $++) {
          let er = w[$];
          '(' === er
            ? ((I = !0), (C += er))
            : ')' === er
            ? ((I = !1), (C += er))
            : ',' !== er || I
            ? (C += er)
            : (S.push(C), (C = ''));
        }
        return (C = C.trim()) && S.push(C), S;
      }
      function isCssVar2(w) {
        return /^var\(--.+\)$/.test(w);
      }
      var isCSSVariableTokenValue = (w, S) => w.startsWith('--') && 'string' == typeof S && !isCssVar2(S),
        resolveTokenValue = (w, S) => {
          var C, I;
          if (null == S) return S;
          let getVar = (S) => {
              var C, I;
              return null == (I = null == (C = w.__cssMap) ? void 0 : C[S]) ? void 0 : I.varRef;
            },
            getValue = (w) => {
              var S;
              return null != (S = getVar(w)) ? S : w;
            },
            [$, er] = splitByComma(S);
          return (S = null != (I = null != (C = getVar($)) ? C : getValue(er)) ? I : getValue(S));
        };
      function getCss(w) {
        let { configs: S = {}, pseudos: C = {}, theme: er } = w,
          css2 = (w, en = !1) => {
            var ei, eo, es;
            let el = (0, I.Pu)(w, er),
              ec = expandResponsive(el)(er),
              eu = {};
            for (let w in ec) {
              let ed = ec[w],
                eh = (0, I.Pu)(ed, er);
              w in C && (w = C[w]), isCSSVariableTokenValue(w, eh) && (eh = resolveTokenValue(er, eh));
              let ef = S[w];
              if ((!0 === ef && (ef = { property: w }), (0, I.Kn)(eh))) {
                (eu[w] = null != (ei = eu[w]) ? ei : {}), (eu[w] = $({}, eu[w], css2(eh, !0)));
                continue;
              }
              let ep =
                null != (es = null == (eo = null == ef ? void 0 : ef.transform) ? void 0 : eo.call(ef, eh, er, el))
                  ? es
                  : eh;
              ep = (null == ef ? void 0 : ef.processResult) ? css2(ep, !0) : ep;
              let em = (0, I.Pu)(null == ef ? void 0 : ef.property, er);
              if (!en && (null == ef ? void 0 : ef.static)) {
                let w = (0, I.Pu)(ef.static, er);
                eu = $({}, eu, w);
              }
              if (em && Array.isArray(em)) {
                for (let w of em) eu[w] = ep;
                continue;
              }
              if (em) {
                '&' === em && (0, I.Kn)(ep) ? (eu = $({}, eu, ep)) : (eu[em] = ep);
                continue;
              }
              if ((0, I.Kn)(ep)) {
                eu = $({}, eu, ep);
                continue;
              }
              eu[w] = ep;
            }
            return eu;
          };
        return css2;
      }
      var css = (w) => (S) => {
        let C = getCss({ theme: S, pseudos: eM, configs: eL });
        return C(w);
      };
      function defineStyle(w) {
        return w;
      }
      function defineStyleConfig(w) {
        return w;
      }
      function createMultiStyleConfigHelpers(w) {
        return { definePartsStyle: (w) => w, defineMultiStyleConfig: (S) => ({ parts: w, ...S }) };
      }
      function normalize2(w, S) {
        return Array.isArray(w) ? w : (0, I.Kn)(w) ? S(w) : null != w ? [w] : void 0;
      }
      function getNextIndex(w, S) {
        for (let C = S + 1; C < w.length; C++) if (null != w[C]) return C;
        return -1;
      }
      function createResolver(w) {
        let S = w.__breakpoints;
        return function (w, C, er, en) {
          var ei, eo;
          if (!S) return;
          let es = {},
            el = normalize2(er, S.toArrayValue);
          if (!el) return es;
          let ec = el.length,
            eu = 1 === ec,
            ed = !!w.parts;
          for (let er = 0; er < ec; er++) {
            let ec = S.details[er],
              eh = S.details[getNextIndex(el, er)],
              ef = toMediaQueryString(ec.minW, null == eh ? void 0 : eh._minW),
              ep = (0, I.Pu)(null == (ei = w[C]) ? void 0 : ei[el[er]], en);
            if (ep) {
              if (ed) {
                null == (eo = w.parts) ||
                  eo.forEach((w) => {
                    $(es, { [w]: eu ? ep[w] : { [ef]: ep[w] } });
                  });
                continue;
              }
              if (!ed) {
                eu ? $(es, ep) : (es[ef] = ep);
                continue;
              }
              es[ef] = ep;
            }
          }
          return es;
        };
      }
      function resolveStyleConfig(w) {
        return (S) => {
          var C;
          let { variant: er, size: en, theme: ei } = S,
            eo = createResolver(ei);
          return $(
            {},
            (0, I.Pu)(null != (C = w.baseStyle) ? C : {}, S),
            eo(w, 'sizes', en, S),
            eo(w, 'variants', er, S)
          );
        };
      }
      function omitThemingProps(w) {
        return omit(w, ['styleConfig', 'size', 'variant', 'colorScheme']);
      }
    },
    45655: function (w, S, C) {
      'use strict';
      C.d(S, {
        jC: function () {
          return useMultiStyleConfig;
        },
        mq: function () {
          return useStyleConfig;
        }
      });
      var I = C(65673),
        $ = C(2265);
      function chunk_UIGT7YZF_useTheme() {
        let w = (0, $.useContext)(I.T);
        if (!w)
          throw Error(
            'useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`'
          );
        return w;
      }
      var er = C(85035);
      function chunk_7FWEOSAE_useChakra() {
        let w = (0, er.If)(),
          S = chunk_UIGT7YZF_useTheme();
        return { ...w, theme: S };
      }
      var en = C(50446),
        ei = C(19307),
        eo = C(94216),
        es = C(17966);
      function useStyleConfigImpl(w, S = {}) {
        var C;
        let { styleConfig: I, ...er } = S,
          { theme: el, colorMode: ec } = chunk_7FWEOSAE_useChakra(),
          eu = w ? (0, ei.Wf)(el, `components.${w}`) : void 0,
          ed = I || eu,
          eh = eo(
            { theme: el, colorMode: ec },
            null != (C = null == ed ? void 0 : ed.defaultProps) ? C : {},
            (0, ei.YU)((0, ei.CE)(er, ['children']))
          ),
          ef = (0, $.useRef)({});
        if (ed) {
          let w = (0, en.Ud)(ed),
            S = w(eh),
            C = es(ef.current, S);
          C || (ef.current = S);
        }
        return ef.current;
      }
      function useStyleConfig(w, S = {}) {
        return useStyleConfigImpl(w, S);
      }
      function useMultiStyleConfig(w, S = {}) {
        return useStyleConfigImpl(w, S);
      }
    },
    69742: function (w, S, C) {
      'use strict';
      C.d(S, {
        m: function () {
          return ev;
        }
      });
      var I,
        $ = C(50446),
        er = new Set([
          ...$.cC,
          'textStyle',
          'layerStyle',
          'apply',
          'noOfLines',
          'focusBorderColor',
          'errorBorderColor',
          'as',
          '__css',
          'css',
          'sx'
        ]),
        en = new Set(['htmlWidth', 'htmlHeight', 'htmlSize', 'htmlTranslate']);
      function shouldForwardProp(w) {
        return en.has(w) || !er.has(w);
      }
      var ei = C(85035),
        eo = C(19307),
        es = C(19546);
      function assignAfter(w, ...S) {
        if (null == w) throw TypeError('Cannot convert undefined or null to object');
        let C = { ...w };
        for (let w of S)
          if (null != w)
            for (let S in w) Object.prototype.hasOwnProperty.call(w, S) && (S in C && delete C[S], (C[S] = w[S]));
        return C;
      }
      var el = C(13428),
        ec = C(2265),
        eu = C(67008),
        ed = C(65673),
        eh = C(94645),
        ef = C(4067),
        ep = C(7599),
        em = eu.Z,
        testOmitPropsOnComponent = function (w) {
          return 'theme' !== w;
        },
        getDefaultShouldForwardProp = function (w) {
          return 'string' == typeof w && w.charCodeAt(0) > 96 ? em : testOmitPropsOnComponent;
        },
        composeShouldForwardProps = function (w, S, C) {
          var I;
          if (S) {
            var $ = S.shouldForwardProp;
            I =
              w.__emotion_forwardProp && $
                ? function (S) {
                    return w.__emotion_forwardProp(S) && $(S);
                  }
                : $;
          }
          return 'function' != typeof I && C && (I = w.__emotion_forwardProp), I;
        },
        Insertion = function (w) {
          var S = w.cache,
            C = w.serialized,
            I = w.isStringTag;
          return (
            (0, eh.hC)(S, C, I),
            (0, ep.L)(function () {
              return (0, eh.My)(S, C, I);
            }),
            null
          );
        },
        eg = function createStyled(w, S) {
          var C,
            I,
            $ = w.__emotion_real === w,
            er = ($ && w.__emotion_base) || w;
          void 0 !== S && ((C = S.label), (I = S.target));
          var en = composeShouldForwardProps(w, S, $),
            ei = en || getDefaultShouldForwardProp(er),
            eo = !ei('as');
          return function () {
            var es = arguments,
              eu = $ && void 0 !== w.__emotion_styles ? w.__emotion_styles.slice(0) : [];
            if ((void 0 !== C && eu.push('label:' + C + ';'), null == es[0] || void 0 === es[0].raw))
              eu.push.apply(eu, es);
            else {
              eu.push(es[0][0]);
              for (var ep = es.length, em = 1; em < ep; em++) eu.push(es[em], es[0][em]);
            }
            var eg = (0, ed.w)(function (w, S, C) {
              var $ = (eo && w.as) || er,
                es = '',
                el = [],
                ep = w;
              if (null == w.theme) {
                for (var em in ((ep = {}), w)) ep[em] = w[em];
                ep.theme = ec.useContext(ed.T);
              }
              'string' == typeof w.className
                ? (es = (0, eh.fp)(S.registered, el, w.className))
                : null != w.className && (es = w.className + ' ');
              var eg = (0, ef.O)(eu.concat(el), S.registered, ep);
              (es += S.key + '-' + eg.name), void 0 !== I && (es += ' ' + I);
              var ey = eo && void 0 === en ? getDefaultShouldForwardProp($) : ei,
                ev = {};
              for (var eb in w) (!eo || 'as' !== eb) && ey(eb) && (ev[eb] = w[eb]);
              return (
                (ev.className = es),
                (ev.ref = C),
                ec.createElement(
                  ec.Fragment,
                  null,
                  ec.createElement(Insertion, { cache: S, serialized: eg, isStringTag: 'string' == typeof $ }),
                  ec.createElement($, ev)
                )
              );
            });
            return (
              (eg.displayName =
                void 0 !== C
                  ? C
                  : 'Styled(' + ('string' == typeof er ? er : er.displayName || er.name || 'Component') + ')'),
              (eg.defaultProps = w.defaultProps),
              (eg.__emotion_real = eg),
              (eg.__emotion_base = er),
              (eg.__emotion_styles = eu),
              (eg.__emotion_forwardProp = en),
              Object.defineProperty(eg, 'toString', {
                value: function () {
                  return '.' + I;
                }
              }),
              (eg.withComponent = function (w, C) {
                return createStyled(
                  w,
                  (0, el.Z)({}, S, C, { shouldForwardProp: composeShouldForwardProps(eg, C, !0) })
                ).apply(void 0, eu);
              }),
              eg
            );
          };
        }.bind();
      [
        'a',
        'abbr',
        'address',
        'area',
        'article',
        'aside',
        'audio',
        'b',
        'base',
        'bdi',
        'bdo',
        'big',
        'blockquote',
        'body',
        'br',
        'button',
        'canvas',
        'caption',
        'cite',
        'code',
        'col',
        'colgroup',
        'data',
        'datalist',
        'dd',
        'del',
        'details',
        'dfn',
        'dialog',
        'div',
        'dl',
        'dt',
        'em',
        'embed',
        'fieldset',
        'figcaption',
        'figure',
        'footer',
        'form',
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'head',
        'header',
        'hgroup',
        'hr',
        'html',
        'i',
        'iframe',
        'img',
        'input',
        'ins',
        'kbd',
        'keygen',
        'label',
        'legend',
        'li',
        'link',
        'main',
        'map',
        'mark',
        'marquee',
        'menu',
        'menuitem',
        'meta',
        'meter',
        'nav',
        'noscript',
        'object',
        'ol',
        'optgroup',
        'option',
        'output',
        'p',
        'param',
        'picture',
        'pre',
        'progress',
        'q',
        'rp',
        'rt',
        'ruby',
        's',
        'samp',
        'script',
        'section',
        'select',
        'small',
        'source',
        'span',
        'strong',
        'style',
        'sub',
        'summary',
        'sup',
        'table',
        'tbody',
        'td',
        'textarea',
        'tfoot',
        'th',
        'thead',
        'time',
        'title',
        'tr',
        'track',
        'u',
        'ul',
        'var',
        'video',
        'wbr',
        'circle',
        'clipPath',
        'defs',
        'ellipse',
        'foreignObject',
        'g',
        'image',
        'line',
        'linearGradient',
        'mask',
        'path',
        'pattern',
        'polygon',
        'polyline',
        'radialGradient',
        'rect',
        'stop',
        'svg',
        'text',
        'tspan'
      ].forEach(function (w) {
        eg[w] = eg(w);
      });
      var ey = null != (I = eg.default) ? I : eg,
        toCSSObject =
          ({ baseStyle: w }) =>
          (S) => {
            let { theme: C, css: I, __css: er, sx: en, ...ei } = S,
              el = (0, eo.lw)(ei, (w, S) => (0, $.ZR)(S)),
              ec = (0, es.Pu)(w, S),
              eu = assignAfter({}, er, ec, (0, eo.YU)(el), en),
              ed = (0, $.iv)(eu)(S.theme);
            return I ? [ed, I] : ed;
          };
      function styled(w, S) {
        let { baseStyle: C, ...I } = null != S ? S : {};
        I.shouldForwardProp || (I.shouldForwardProp = shouldForwardProp);
        let $ = toCSSObject({ baseStyle: C }),
          er = ey(w, I)($),
          en = ec.forwardRef(function (w, S) {
            let { colorMode: C, forced: I } = (0, ei.If)();
            return ec.createElement(er, { ref: S, 'data-theme': I ? C : void 0, ...w });
          });
        return en;
      }
      var ev = (function () {
        let w = new Map();
        return new Proxy(styled, {
          apply: (w, S, C) => styled(...C),
          get: (S, C) => (w.has(C) || w.set(C, styled(C)), w.get(C))
        });
      })();
    },
    58250: function (w, S, C) {
      'use strict';
      C.d(S, {
        G: function () {
          return forwardRef;
        }
      });
      var I = C(2265);
      function forwardRef(w) {
        return (0, I.forwardRef)(w);
      }
    },
    22043: function (w, S, C) {
      'use strict';
      C.d(S, {
        h: function () {
          return ei;
        }
      });
      var I = C(10056),
        $ = C(58250),
        er = C(69742),
        en = C(57437),
        ei = (0, $.G)((w, S) => {
          let C = (0, I.p)();
          return (0, en.jsx)(er.m.thead, { ...w, ref: S, __css: C.thead });
        });
    },
    10056: function (w, S, C) {
      'use strict';
      C.d(S, {
        i: function () {
          return eu;
        },
        p: function () {
          return ec;
        }
      });
      var I = C(58250),
        $ = C(45655),
        er = C(50446),
        en = C(69742),
        ei = C(16465),
        eo = C(310),
        es = C(57437),
        [el, ec] = (0, eo.k)({
          name: 'TableStylesContext',
          errorMessage:
            'useTableStyles returned is \'undefined\'. Seems you forgot to wrap the components in "<Table />" '
        }),
        eu = (0, I.G)((w, S) => {
          let C = (0, $.jC)('Table', w),
            { className: I, layout: eo, ...ec } = (0, er.Lr)(w);
          return (0, es.jsx)(el, {
            value: C,
            children: (0, es.jsx)(en.m.table, {
              ref: S,
              __css: { tableLayout: eo, ...C.table },
              className: (0, ei.cx)('chakra-table', I),
              ...ec
            })
          });
        });
      eu.displayName = 'Table';
    },
    52736: function (w, S, C) {
      'use strict';
      C.d(S, {
        Tr: function () {
          return ei;
        }
      });
      var I = C(10056),
        $ = C(58250),
        er = C(69742),
        en = C(57437),
        ei = (0, $.G)((w, S) => {
          let C = (0, I.p)();
          return (0, en.jsx)(er.m.tr, { ...w, ref: S, __css: C.tr });
        });
    },
    97464: function (w, S, C) {
      'use strict';
      C.d(S, {
        p: function () {
          return ei;
        }
      });
      var I = C(10056),
        $ = C(58250),
        er = C(69742),
        en = C(57437),
        ei = (0, $.G)((w, S) => {
          let C = (0, I.p)();
          return (0, en.jsx)(er.m.tbody, { ...w, ref: S, __css: C.tbody });
        });
    },
    17885: function (w, S, C) {
      'use strict';
      C.d(S, {
        Th: function () {
          return ei;
        }
      });
      var I = C(10056),
        $ = C(58250),
        er = C(69742),
        en = C(57437),
        ei = (0, $.G)(({ isNumeric: w, ...S }, C) => {
          let $ = (0, I.p)();
          return (0, en.jsx)(er.m.th, { ...S, ref: C, __css: $.th, 'data-is-numeric': w });
        });
    },
    15982: function (w, S, C) {
      'use strict';
      C.d(S, {
        x: function () {
          return ei;
        }
      });
      var I = C(58250),
        $ = C(69742),
        er = C(16465),
        en = C(57437),
        ei = (0, I.G)((w, S) => {
          var C;
          let { overflow: I, overflowX: ei, className: eo, ...es } = w;
          return (0, en.jsx)($.m.div, {
            ref: S,
            className: (0, er.cx)('chakra-table__container', eo),
            ...es,
            __css: {
              display: 'block',
              whiteSpace: 'nowrap',
              WebkitOverflowScrolling: 'touch',
              overflowX: null != (C = null != I ? I : ei) ? C : 'auto',
              overflowY: 'hidden',
              maxWidth: '100%'
            }
          });
        });
    },
    32527: function (w, S, C) {
      'use strict';
      C.d(S, {
        Td: function () {
          return ei;
        }
      });
      var I = C(10056),
        $ = C(58250),
        er = C(69742),
        en = C(57437),
        ei = (0, $.G)(({ isNumeric: w, ...S }, C) => {
          let $ = (0, I.p)();
          return (0, en.jsx)(er.m.td, { ...S, ref: C, __css: $.td, 'data-is-numeric': w });
        });
    },
    62983: function (w, S, C) {
      'use strict';
      C.d(S, {
        B1: function () {
          return ei;
        }
      });
      var I = C(16465),
        $ = [
          'borders',
          'breakpoints',
          'colors',
          'components',
          'config',
          'direction',
          'fonts',
          'fontSizes',
          'fontWeights',
          'letterSpacings',
          'lineHeights',
          'radii',
          'shadows',
          'sizes',
          'space',
          'styles',
          'transition',
          'zIndices'
        ];
      function isChakraTheme(w) {
        return !!(0, I.Kn)(w) && $.every((S) => Object.prototype.hasOwnProperty.call(w, S));
      }
      var er = C(62952),
        en = C(94216);
      function isFunction(w) {
        return 'function' == typeof w;
      }
      function pipe(...w) {
        return (S) => w.reduce((w, S) => S(w), S);
      }
      var createExtendTheme = (w) =>
          function (...S) {
            let C = [...S],
              I = S[S.length - 1];
            return (
              isChakraTheme(I) && C.length > 1 ? (C = C.slice(0, C.length - 1)) : (I = w),
              pipe(...C.map((w) => (S) => (isFunction(w) ? w(S) : mergeThemeOverride(S, w))))(I)
            );
          },
        ei = createExtendTheme(er.rS);
      function mergeThemeOverride(...w) {
        return en({}, ...w, mergeThemeCustomizer);
      }
      function mergeThemeCustomizer(w, S, C, I) {
        if ((isFunction(w) || isFunction(S)) && Object.prototype.hasOwnProperty.call(I, C))
          return (...C) => {
            let I = isFunction(w) ? w(...C) : w,
              $ = isFunction(S) ? S(...C) : S;
            return en({}, I, $, mergeThemeCustomizer);
          };
      }
      createExtendTheme(er.wE);
    },
    62952: function (w, S, C) {
      'use strict';
      C.d(S, {
        wE: function () {
          return ag;
        },
        rS: function () {
          return am;
        }
      });
      var I,
        $,
        er,
        en,
        ei,
        eo,
        es,
        el,
        ec,
        eu,
        ed,
        eh,
        ef,
        ep,
        em,
        eg,
        ey,
        ev,
        eb,
        e_,
        ex,
        ew,
        ek,
        eS = {
          letterSpacings: {
            tighter: '-0.05em',
            tight: '-0.025em',
            normal: '0',
            wide: '0.025em',
            wider: '0.05em',
            widest: '0.1em'
          },
          lineHeights: {
            normal: 'normal',
            none: 1,
            shorter: 1.25,
            short: 1.375,
            base: 1.5,
            tall: 1.625,
            taller: '2',
            3: '.75rem',
            4: '1rem',
            5: '1.25rem',
            6: '1.5rem',
            7: '1.75rem',
            8: '2rem',
            9: '2.25rem',
            10: '2.5rem'
          },
          fontWeights: {
            hairline: 100,
            thin: 200,
            light: 300,
            normal: 400,
            medium: 500,
            semibold: 600,
            bold: 700,
            extrabold: 800,
            black: 900
          },
          fonts: {
            heading:
              '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
            body: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
            mono: 'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace'
          },
          fontSizes: {
            '3xs': '0.45rem',
            '2xs': '0.625rem',
            xs: '0.75rem',
            sm: '0.875rem',
            md: '1rem',
            lg: '1.125rem',
            xl: '1.25rem',
            '2xl': '1.5rem',
            '3xl': '1.875rem',
            '4xl': '2.25rem',
            '5xl': '3rem',
            '6xl': '3.75rem',
            '7xl': '4.5rem',
            '8xl': '6rem',
            '9xl': '8rem'
          }
        },
        eC = {
          px: '1px',
          0.5: '0.125rem',
          1: '0.25rem',
          1.5: '0.375rem',
          2: '0.5rem',
          2.5: '0.625rem',
          3: '0.75rem',
          3.5: '0.875rem',
          4: '1rem',
          5: '1.25rem',
          6: '1.5rem',
          7: '1.75rem',
          8: '2rem',
          9: '2.25rem',
          10: '2.5rem',
          12: '3rem',
          14: '3.5rem',
          16: '4rem',
          20: '5rem',
          24: '6rem',
          28: '7rem',
          32: '8rem',
          36: '9rem',
          40: '10rem',
          44: '11rem',
          48: '12rem',
          52: '13rem',
          56: '14rem',
          60: '15rem',
          64: '16rem',
          72: '18rem',
          80: '20rem',
          96: '24rem'
        },
        eP = {
          ...eC,
          max: 'max-content',
          min: 'min-content',
          full: '100%',
          '3xs': '14rem',
          '2xs': '16rem',
          xs: '20rem',
          sm: '24rem',
          md: '28rem',
          lg: '32rem',
          xl: '36rem',
          '2xl': '42rem',
          '3xl': '48rem',
          '4xl': '56rem',
          '5xl': '64rem',
          '6xl': '72rem',
          '7xl': '80rem',
          '8xl': '90rem',
          prose: '60ch',
          container: { sm: '640px', md: '768px', lg: '1024px', xl: '1280px' }
        },
        eA = {
          breakpoints: { base: '0em', sm: '30em', md: '48em', lg: '62em', xl: '80em', '2xl': '96em' },
          zIndices: {
            hide: -1,
            auto: 'auto',
            base: 0,
            docked: 10,
            dropdown: 1e3,
            sticky: 1100,
            banner: 1200,
            overlay: 1300,
            modal: 1400,
            popover: 1500,
            skipLink: 1600,
            toast: 1700,
            tooltip: 1800
          },
          radii: {
            none: '0',
            sm: '0.125rem',
            base: '0.25rem',
            md: '0.375rem',
            lg: '0.5rem',
            xl: '0.75rem',
            '2xl': '1rem',
            '3xl': '1.5rem',
            full: '9999px'
          },
          blur: { none: 0, sm: '4px', base: '8px', md: '12px', lg: '16px', xl: '24px', '2xl': '40px', '3xl': '64px' },
          colors: {
            transparent: 'transparent',
            current: 'currentColor',
            black: '#000000',
            white: '#FFFFFF',
            whiteAlpha: {
              50: 'rgba(255, 255, 255, 0.04)',
              100: 'rgba(255, 255, 255, 0.06)',
              200: 'rgba(255, 255, 255, 0.08)',
              300: 'rgba(255, 255, 255, 0.16)',
              400: 'rgba(255, 255, 255, 0.24)',
              500: 'rgba(255, 255, 255, 0.36)',
              600: 'rgba(255, 255, 255, 0.48)',
              700: 'rgba(255, 255, 255, 0.64)',
              800: 'rgba(255, 255, 255, 0.80)',
              900: 'rgba(255, 255, 255, 0.92)'
            },
            blackAlpha: {
              50: 'rgba(0, 0, 0, 0.04)',
              100: 'rgba(0, 0, 0, 0.06)',
              200: 'rgba(0, 0, 0, 0.08)',
              300: 'rgba(0, 0, 0, 0.16)',
              400: 'rgba(0, 0, 0, 0.24)',
              500: 'rgba(0, 0, 0, 0.36)',
              600: 'rgba(0, 0, 0, 0.48)',
              700: 'rgba(0, 0, 0, 0.64)',
              800: 'rgba(0, 0, 0, 0.80)',
              900: 'rgba(0, 0, 0, 0.92)'
            },
            gray: {
              50: '#F7FAFC',
              100: '#EDF2F7',
              200: '#E2E8F0',
              300: '#CBD5E0',
              400: '#A0AEC0',
              500: '#718096',
              600: '#4A5568',
              700: '#2D3748',
              800: '#1A202C',
              900: '#171923'
            },
            red: {
              50: '#FFF5F5',
              100: '#FED7D7',
              200: '#FEB2B2',
              300: '#FC8181',
              400: '#F56565',
              500: '#E53E3E',
              600: '#C53030',
              700: '#9B2C2C',
              800: '#822727',
              900: '#63171B'
            },
            orange: {
              50: '#FFFAF0',
              100: '#FEEBC8',
              200: '#FBD38D',
              300: '#F6AD55',
              400: '#ED8936',
              500: '#DD6B20',
              600: '#C05621',
              700: '#9C4221',
              800: '#7B341E',
              900: '#652B19'
            },
            yellow: {
              50: '#FFFFF0',
              100: '#FEFCBF',
              200: '#FAF089',
              300: '#F6E05E',
              400: '#ECC94B',
              500: '#D69E2E',
              600: '#B7791F',
              700: '#975A16',
              800: '#744210',
              900: '#5F370E'
            },
            green: {
              50: '#F0FFF4',
              100: '#C6F6D5',
              200: '#9AE6B4',
              300: '#68D391',
              400: '#48BB78',
              500: '#38A169',
              600: '#2F855A',
              700: '#276749',
              800: '#22543D',
              900: '#1C4532'
            },
            teal: {
              50: '#E6FFFA',
              100: '#B2F5EA',
              200: '#81E6D9',
              300: '#4FD1C5',
              400: '#38B2AC',
              500: '#319795',
              600: '#2C7A7B',
              700: '#285E61',
              800: '#234E52',
              900: '#1D4044'
            },
            blue: {
              50: '#ebf8ff',
              100: '#bee3f8',
              200: '#90cdf4',
              300: '#63b3ed',
              400: '#4299e1',
              500: '#3182ce',
              600: '#2b6cb0',
              700: '#2c5282',
              800: '#2a4365',
              900: '#1A365D'
            },
            cyan: {
              50: '#EDFDFD',
              100: '#C4F1F9',
              200: '#9DECF9',
              300: '#76E4F7',
              400: '#0BC5EA',
              500: '#00B5D8',
              600: '#00A3C4',
              700: '#0987A0',
              800: '#086F83',
              900: '#065666'
            },
            purple: {
              50: '#FAF5FF',
              100: '#E9D8FD',
              200: '#D6BCFA',
              300: '#B794F4',
              400: '#9F7AEA',
              500: '#805AD5',
              600: '#6B46C1',
              700: '#553C9A',
              800: '#44337A',
              900: '#322659'
            },
            pink: {
              50: '#FFF5F7',
              100: '#FED7E2',
              200: '#FBB6CE',
              300: '#F687B3',
              400: '#ED64A6',
              500: '#D53F8C',
              600: '#B83280',
              700: '#97266D',
              800: '#702459',
              900: '#521B41'
            },
            linkedin: {
              50: '#E8F4F9',
              100: '#CFEDFB',
              200: '#9BDAF3',
              300: '#68C7EC',
              400: '#34B3E4',
              500: '#00A0DC',
              600: '#008CC9',
              700: '#0077B5',
              800: '#005E93',
              900: '#004471'
            },
            facebook: {
              50: '#E8F4F9',
              100: '#D9DEE9',
              200: '#B7C2DA',
              300: '#6482C0',
              400: '#4267B2',
              500: '#385898',
              600: '#314E89',
              700: '#29487D',
              800: '#223B67',
              900: '#1E355B'
            },
            messenger: {
              50: '#D0E6FF',
              100: '#B9DAFF',
              200: '#A2CDFF',
              300: '#7AB8FF',
              400: '#2E90FF',
              500: '#0078FF',
              600: '#0063D1',
              700: '#0052AC',
              800: '#003C7E',
              900: '#002C5C'
            },
            whatsapp: {
              50: '#dffeec',
              100: '#b9f5d0',
              200: '#90edb3',
              300: '#65e495',
              400: '#3cdd78',
              500: '#22c35e',
              600: '#179848',
              700: '#0c6c33',
              800: '#01421c',
              900: '#001803'
            },
            twitter: {
              50: '#E5F4FD',
              100: '#C8E9FB',
              200: '#A8DCFA',
              300: '#83CDF7',
              400: '#57BBF5',
              500: '#1DA1F2',
              600: '#1A94DA',
              700: '#1681BF',
              800: '#136B9E',
              900: '#0D4D71'
            },
            telegram: {
              50: '#E3F2F9',
              100: '#C5E4F3',
              200: '#A2D4EC',
              300: '#7AC1E4',
              400: '#47A9DA',
              500: '#0088CC',
              600: '#007AB8',
              700: '#006BA1',
              800: '#005885',
              900: '#003F5E'
            }
          },
          ...eS,
          sizes: eP,
          shadows: {
            xs: '0 0 0 1px rgba(0, 0, 0, 0.05)',
            sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
            base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
            md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
            lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
            xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
            '2xl': '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
            outline: '0 0 0 3px rgba(66, 153, 225, 0.6)',
            inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
            none: 'none',
            'dark-lg':
              'rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px'
          },
          space: eC,
          borders: { none: 0, '1px': '1px solid', '2px': '2px solid', '4px': '4px solid', '8px': '8px solid' },
          transition: {
            property: {
              common: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',
              colors: 'background-color, border-color, color, fill, stroke',
              dimensions: 'width, height',
              position: 'left, right, top, bottom',
              background: 'background-color, background-image, background-position'
            },
            easing: {
              'ease-in': 'cubic-bezier(0.4, 0, 1, 1)',
              'ease-out': 'cubic-bezier(0, 0, 0.2, 1)',
              'ease-in-out': 'cubic-bezier(0.4, 0, 0.2, 1)'
            },
            duration: {
              'ultra-fast': '50ms',
              faster: '100ms',
              fast: '150ms',
              normal: '200ms',
              slow: '300ms',
              slower: '400ms',
              'ultra-slow': '500ms'
            }
          }
        },
        eT = C(50446),
        { defineMultiStyleConfig: eE, definePartsStyle: ez } = (0, eT.D)([
          'stepper',
          'step',
          'title',
          'description',
          'indicator',
          'separator',
          'icon',
          'number'
        ]),
        eI = (0, eT.gJ)('stepper-indicator-size'),
        eB = (0, eT.gJ)('stepper-icon-size'),
        eR = (0, eT.gJ)('stepper-title-font-size'),
        eO = (0, eT.gJ)('stepper-description-font-size'),
        eM = (0, eT.gJ)('stepper-accent-color'),
        eD = eE({
          baseStyle: ez(({ colorScheme: w }) => ({
            stepper: {
              display: 'flex',
              justifyContent: 'space-between',
              gap: '4',
              '&[data-orientation=vertical]': { flexDirection: 'column', alignItems: 'flex-start' },
              '&[data-orientation=horizontal]': { flexDirection: 'row', alignItems: 'center' },
              [eM.variable]: `colors.${w}.500`,
              _dark: { [eM.variable]: `colors.${w}.200` }
            },
            title: { fontSize: eR.reference, fontWeight: 'medium' },
            description: { fontSize: eO.reference, color: 'chakra-subtle-text' },
            number: { fontSize: eR.reference },
            step: {
              flexShrink: 0,
              position: 'relative',
              display: 'flex',
              gap: '2',
              '&[data-orientation=horizontal]': { alignItems: 'center' },
              flex: '1',
              '&:last-of-type:not([data-stretch])': { flex: 'initial' }
            },
            icon: { flexShrink: 0, width: eB.reference, height: eB.reference },
            indicator: {
              flexShrink: 0,
              borderRadius: 'full',
              width: eI.reference,
              height: eI.reference,
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              '&[data-status=active]': { borderWidth: '2px', borderColor: eM.reference },
              '&[data-status=complete]': { bg: eM.reference, color: 'chakra-inverse-text' },
              '&[data-status=incomplete]': { borderWidth: '2px' }
            },
            separator: {
              bg: 'chakra-border-color',
              flex: '1',
              '&[data-status=complete]': { bg: eM.reference },
              '&[data-orientation=horizontal]': { width: '100%', height: '2px', marginStart: '2' },
              '&[data-orientation=vertical]': {
                width: '2px',
                position: 'absolute',
                height: '100%',
                maxHeight: `calc(100% - ${eI.reference} - 8px)`,
                top: `calc(${eI.reference} + 4px)`,
                insetStart: `calc(${eI.reference} / 2 - 1px)`
              }
            }
          })),
          sizes: {
            xs: ez({
              stepper: {
                [eI.variable]: 'sizes.4',
                [eB.variable]: 'sizes.3',
                [eR.variable]: 'fontSizes.xs',
                [eO.variable]: 'fontSizes.xs'
              }
            }),
            sm: ez({
              stepper: {
                [eI.variable]: 'sizes.6',
                [eB.variable]: 'sizes.4',
                [eR.variable]: 'fontSizes.sm',
                [eO.variable]: 'fontSizes.xs'
              }
            }),
            md: ez({
              stepper: {
                [eI.variable]: 'sizes.8',
                [eB.variable]: 'sizes.5',
                [eR.variable]: 'fontSizes.md',
                [eO.variable]: 'fontSizes.sm'
              }
            }),
            lg: ez({
              stepper: {
                [eI.variable]: 'sizes.10',
                [eB.variable]: 'sizes.6',
                [eR.variable]: 'fontSizes.lg',
                [eO.variable]: 'fontSizes.md'
              }
            })
          },
          defaultProps: { size: 'md', colorScheme: 'blue' }
        });
      function anatomy(w, S = {}) {
        let C = !1;
        function assert() {
          if (!C) {
            C = !0;
            return;
          }
          throw Error('[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?');
        }
        function extend(...C) {
          for (let w of C) w in S || (S[w] = toPart(w));
          return anatomy(w, S);
        }
        function toPart(S) {
          let C = ['container', 'root'].includes(null != S ? S : '') ? [w] : [w, S],
            I = C.filter(Boolean).join('__'),
            $ = `chakra-${I}`,
            er = { className: $, selector: `.${$}`, toString: () => S };
          return er;
        }
        return {
          parts: function (...C) {
            for (let w of (assert(), C)) S[w] = toPart(w);
            return anatomy(w, S);
          },
          toPart,
          extend,
          selectors: function () {
            let w = Object.fromEntries(Object.entries(S).map(([w, S]) => [w, S.selector]));
            return w;
          },
          classnames: function () {
            let w = Object.fromEntries(Object.entries(S).map(([w, S]) => [w, S.className]));
            return w;
          },
          get keys() {
            return Object.keys(S);
          },
          __type: {}
        };
      }
      var ej = anatomy('accordion').parts('root', 'container', 'button', 'panel').extend('icon'),
        eL = anatomy('alert').parts('title', 'description', 'container').extend('icon', 'spinner'),
        eF = anatomy('avatar').parts('label', 'badge', 'container').extend('excessLabel', 'group'),
        eV = anatomy('breadcrumb').parts('link', 'item', 'container').extend('separator');
      anatomy('button').parts();
      var eN = anatomy('checkbox').parts('control', 'icon', 'container').extend('label');
      anatomy('progress').parts('track', 'filledTrack').extend('label');
      var eU = anatomy('drawer')
          .parts('overlay', 'dialogContainer', 'dialog')
          .extend('header', 'closeButton', 'body', 'footer'),
        e$ = anatomy('editable').parts('preview', 'input', 'textarea'),
        eW = anatomy('form').parts('container', 'requiredIndicator', 'helperText'),
        eG = anatomy('formError').parts('text', 'icon'),
        eH = anatomy('input').parts('addon', 'field', 'element', 'group'),
        eZ = anatomy('list').parts('container', 'item', 'icon'),
        eY = anatomy('menu').parts('button', 'list', 'item').extend('groupTitle', 'icon', 'command', 'divider'),
        eK = anatomy('modal')
          .parts('overlay', 'dialogContainer', 'dialog')
          .extend('header', 'closeButton', 'body', 'footer'),
        eX = anatomy('numberinput').parts('root', 'field', 'stepperGroup', 'stepper');
      anatomy('pininput').parts('field');
      var eJ = anatomy('popover').parts('content', 'header', 'body', 'footer').extend('popper', 'arrow', 'closeButton'),
        eQ = anatomy('progress').parts('label', 'filledTrack', 'track'),
        e0 = anatomy('radio').parts('container', 'control', 'label'),
        e1 = anatomy('select').parts('field', 'icon'),
        e2 = anatomy('slider').parts('container', 'track', 'thumb', 'filledTrack', 'mark'),
        e5 = anatomy('stat').parts('container', 'label', 'helpText', 'number', 'icon'),
        e3 = anatomy('switch').parts('container', 'track', 'thumb'),
        e4 = anatomy('table').parts('table', 'thead', 'tbody', 'tr', 'th', 'td', 'tfoot', 'caption'),
        e6 = anatomy('tabs').parts('root', 'tab', 'tablist', 'tabpanel', 'tabpanels', 'indicator'),
        e8 = anatomy('tag').parts('container', 'label', 'closeButton'),
        e9 = anatomy('card').parts('container', 'header', 'body', 'footer');
      function isDecimal(w) {
        return !Number.isInteger(parseFloat(w.toString()));
      }
      function replaceWhiteSpace(w, S = '-') {
        return w.replace(/\s+/g, S);
      }
      function chunk_WSAJBJJ4_escape(w) {
        let S = replaceWhiteSpace(w.toString());
        return S.includes('\\.') ? w : isDecimal(w) ? S.replace('.', '\\.') : w;
      }
      function addPrefix(w, S = '') {
        return [S, chunk_WSAJBJJ4_escape(w)].filter(Boolean).join('-');
      }
      function toVarRef(w, S) {
        return `var(${chunk_WSAJBJJ4_escape(w)}${S ? `, ${S}` : ''})`;
      }
      function toVar(w, S = '') {
        return `--${addPrefix(w, S)}`;
      }
      function cssVar(w, S) {
        let C = toVar(w, null == S ? void 0 : S.prefix);
        return { variable: C, reference: toVarRef(C, getFallback(null == S ? void 0 : S.fallback)) };
      }
      function getFallback(w) {
        return 'string' == typeof w ? w : null == w ? void 0 : w.reference;
      }
      var e7 = C(16465);
      function toRef(w) {
        return (0, e7.Kn)(w) && w.reference ? w.reference : String(w);
      }
      var toExpr = (w, ...S) => S.map(toRef).join(` ${w} `).replace(/calc/g, ''),
        add = (...w) => `calc(${toExpr('+', ...w)})`,
        subtract = (...w) => `calc(${toExpr('-', ...w)})`,
        multiply = (...w) => `calc(${toExpr('*', ...w)})`,
        divide = (...w) => `calc(${toExpr('/', ...w)})`,
        negate = (w) => {
          let S = toRef(w);
          return null == S || Number.isNaN(parseFloat(S))
            ? multiply(S, -1)
            : String(S).startsWith('-')
            ? String(S).slice(1)
            : `-${S}`;
        },
        tr = Object.assign(
          (w) => ({
            add: (...S) => tr(add(w, ...S)),
            subtract: (...S) => tr(subtract(w, ...S)),
            multiply: (...S) => tr(multiply(w, ...S)),
            divide: (...S) => tr(divide(w, ...S)),
            negate: () => tr(negate(w)),
            toString: () => w.toString()
          }),
          { add, subtract, multiply, divide, negate }
        ),
        { defineMultiStyleConfig: tn, definePartsStyle: ti } = (0, eT.D)(e3.keys),
        ta = cssVar('switch-track-width'),
        to = cssVar('switch-track-height'),
        ts = cssVar('switch-track-diff'),
        tl = tr.subtract(ta, to),
        tc = cssVar('switch-thumb-x'),
        tu = cssVar('switch-bg'),
        td = (0, eT.k0)((w) => {
          let { colorScheme: S } = w;
          return {
            borderRadius: 'full',
            p: '0.5',
            width: [ta.reference],
            height: [to.reference],
            transitionProperty: 'common',
            transitionDuration: 'fast',
            [tu.variable]: 'colors.gray.300',
            _dark: { [tu.variable]: 'colors.whiteAlpha.400' },
            _focusVisible: { boxShadow: 'outline' },
            _disabled: { opacity: 0.4, cursor: 'not-allowed' },
            _checked: { [tu.variable]: `colors.${S}.500`, _dark: { [tu.variable]: `colors.${S}.200` } },
            bg: tu.reference
          };
        }),
        th = (0, eT.k0)({
          bg: 'white',
          transitionProperty: 'transform',
          transitionDuration: 'normal',
          borderRadius: 'inherit',
          width: [to.reference],
          height: [to.reference],
          _checked: { transform: `translateX(${tc.reference})` }
        }),
        tf = tn({
          baseStyle: ti((w) => ({
            container: {
              [ts.variable]: tl,
              [tc.variable]: ts.reference,
              _rtl: { [tc.variable]: tr(ts).negate().toString() }
            },
            track: td(w),
            thumb: th
          })),
          sizes: {
            sm: ti({ container: { [ta.variable]: '1.375rem', [to.variable]: 'sizes.3' } }),
            md: ti({ container: { [ta.variable]: '1.875rem', [to.variable]: 'sizes.4' } }),
            lg: ti({ container: { [ta.variable]: '2.875rem', [to.variable]: 'sizes.6' } })
          },
          defaultProps: { size: 'md', colorScheme: 'blue' }
        });
      function mode(w, S) {
        return (C) => ('dark' === C.colorMode ? S : w);
      }
      function orient(w) {
        let { orientation: S, vertical: C, horizontal: I } = w;
        return S ? ('vertical' === S ? C : I) : {};
      }
      var { defineMultiStyleConfig: tp, definePartsStyle: tm } = (0, eT.D)(e4.keys),
        tg = tm({
          table: { fontVariantNumeric: 'lining-nums tabular-nums', borderCollapse: 'collapse', width: 'full' },
          th: {
            fontFamily: 'heading',
            fontWeight: 'bold',
            textTransform: 'uppercase',
            letterSpacing: 'wider',
            textAlign: 'start'
          },
          td: { textAlign: 'start' },
          caption: { mt: 4, fontFamily: 'heading', textAlign: 'center', fontWeight: 'medium' }
        }),
        ty = (0, eT.k0)({ '&[data-is-numeric=true]': { textAlign: 'end' } }),
        tv = tp({
          baseStyle: tg,
          variants: {
            simple: tm((w) => {
              let { colorScheme: S } = w;
              return {
                th: {
                  color: mode('gray.600', 'gray.400')(w),
                  borderBottom: '1px',
                  borderColor: mode(`${S}.100`, `${S}.700`)(w),
                  ...ty
                },
                td: { borderBottom: '1px', borderColor: mode(`${S}.100`, `${S}.700`)(w), ...ty },
                caption: { color: mode('gray.600', 'gray.100')(w) },
                tfoot: { tr: { '&:last-of-type': { th: { borderBottomWidth: 0 } } } }
              };
            }),
            striped: tm((w) => {
              let { colorScheme: S } = w;
              return {
                th: {
                  color: mode('gray.600', 'gray.400')(w),
                  borderBottom: '1px',
                  borderColor: mode(`${S}.100`, `${S}.700`)(w),
                  ...ty
                },
                td: { borderBottom: '1px', borderColor: mode(`${S}.100`, `${S}.700`)(w), ...ty },
                caption: { color: mode('gray.600', 'gray.100')(w) },
                tbody: {
                  tr: {
                    '&:nth-of-type(odd)': {
                      'th, td': { borderBottomWidth: '1px', borderColor: mode(`${S}.100`, `${S}.700`)(w) },
                      td: { background: mode(`${S}.100`, `${S}.700`)(w) }
                    }
                  }
                },
                tfoot: { tr: { '&:last-of-type': { th: { borderBottomWidth: 0 } } } }
              };
            }),
            unstyled: (0, eT.k0)({})
          },
          sizes: {
            sm: tm({
              th: { px: '4', py: '1', lineHeight: '4', fontSize: 'xs' },
              td: { px: '4', py: '2', fontSize: 'sm', lineHeight: '4' },
              caption: { px: '4', py: '2', fontSize: 'xs' }
            }),
            md: tm({
              th: { px: '6', py: '3', lineHeight: '4', fontSize: 'xs' },
              td: { px: '6', py: '4', lineHeight: '5' },
              caption: { px: '6', py: '2', fontSize: 'sm' }
            }),
            lg: tm({
              th: { px: '8', py: '4', lineHeight: '5', fontSize: 'sm' },
              td: { px: '8', py: '5', lineHeight: '6' },
              caption: { px: '6', py: '2', fontSize: 'md' }
            })
          },
          defaultProps: { variant: 'simple', size: 'md', colorScheme: 'gray' }
        });
      function guard(w, S, C) {
        return Math.min(Math.max(w, C), S);
      }
      let ColorError = class ColorError extends Error {
        constructor(w) {
          super(`Failed to parse color: "${w}"`);
        }
      };
      function parseToRgba(w) {
        if ('string' != typeof w) throw new ColorError(w);
        if ('transparent' === w.trim().toLowerCase()) return [0, 0, 0, 0];
        let S = w.trim();
        S = tS.test(w) ? nameToHex(w) : w;
        let C = t_.exec(S);
        if (C) {
          let w = Array.from(C).slice(1);
          return [...w.slice(0, 3).map((w) => parseInt(r(w, 2), 16)), parseInt(r(w[3] || 'f', 2), 16) / 255];
        }
        let I = tx.exec(S);
        if (I) {
          let w = Array.from(I).slice(1);
          return [...w.slice(0, 3).map((w) => parseInt(w, 16)), parseInt(w[3] || 'ff', 16) / 255];
        }
        let $ = tw.exec(S);
        if ($) {
          let w = Array.from($).slice(1);
          return [...w.slice(0, 3).map((w) => parseInt(w, 10)), parseFloat(w[3] || '1')];
        }
        let er = tk.exec(S);
        if (er) {
          let [S, C, I, $] = Array.from(er).slice(1).map(parseFloat);
          if (guard(0, 100, C) !== C || guard(0, 100, I) !== I) throw new ColorError(w);
          return [...hslToRgb(S, C, I), Number.isNaN($) ? 1 : $];
        }
        throw new ColorError(w);
      }
      function hash(w) {
        let S = 5381,
          C = w.length;
        for (; C; ) S = (33 * S) ^ w.charCodeAt(--C);
        return (S >>> 0) % 2341;
      }
      let colorToInt = (w) => parseInt(w.replace(/_/g, ''), 36),
        tb =
          '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'
            .split(' ')
            .reduce((w, S) => {
              let C = colorToInt(S.substring(0, 3)),
                I = colorToInt(S.substring(3)).toString(16),
                $ = '';
              for (let w = 0; w < 6 - I.length; w++) $ += '0';
              return (w[C] = `${$}${I}`), w;
            }, {});
      function nameToHex(w) {
        let S = w.toLowerCase().trim(),
          C = tb[hash(S)];
        if (!C) throw new ColorError(w);
        return `#${C}`;
      }
      let r = (w, S) =>
          Array.from(Array(S))
            .map(() => w)
            .join(''),
        t_ = RegExp(`^#${r('([a-f0-9])', 3)}([a-f0-9])?$`, 'i'),
        tx = RegExp(`^#${r('([a-f0-9]{2})', 3)}([a-f0-9]{2})?$`, 'i'),
        tw = RegExp(`^rgba?\\(\\s*(\\d+)\\s*${r(',\\s*(\\d+)\\s*', 2)}(?:,\\s*([\\d.]+))?\\s*\\)$`, 'i'),
        tk = /^hsla?\(\s*([\d.]+)\s*,\s*([\d.]+)%\s*,\s*([\d.]+)%(?:\s*,\s*([\d.]+))?\s*\)$/i,
        tS = /^[a-z]+$/i,
        roundColor = (w) => Math.round(255 * w),
        hslToRgb = (w, S, C) => {
          let I = C / 100;
          if (0 === S) return [I, I, I].map(roundColor);
          let $ = (((w % 360) + 360) % 360) / 60,
            er = (1 - Math.abs(2 * I - 1)) * (S / 100),
            en = er * (1 - Math.abs(($ % 2) - 1)),
            ei = 0,
            eo = 0,
            es = 0;
          $ >= 0 && $ < 1
            ? ((ei = er), (eo = en))
            : $ >= 1 && $ < 2
            ? ((ei = en), (eo = er))
            : $ >= 2 && $ < 3
            ? ((eo = er), (es = en))
            : $ >= 3 && $ < 4
            ? ((eo = en), (es = er))
            : $ >= 4 && $ < 5
            ? ((ei = en), (es = er))
            : $ >= 5 && $ < 6 && ((ei = er), (es = en));
          let el = I - er / 2,
            ec = ei + el,
            eu = eo + el,
            ed = es + el;
          return [ec, eu, ed].map(roundColor);
        };
      function rgba(w, S, C, I) {
        return `rgba(${guard(0, 255, w).toFixed()}, ${guard(0, 255, S).toFixed()}, ${guard(
          0,
          255,
          C
        ).toFixed()}, ${parseFloat(guard(0, 1, I).toFixed(3))})`;
      }
      function transparentize(w, S) {
        let [C, I, $, er] = parseToRgba(w);
        return rgba(C, I, $, er - S);
      }
      function index_exports_import_es_toHex(w) {
        let [S, C, I, $] = parseToRgba(w),
          hex = (w) => {
            let S = guard(0, 255, w).toString(16);
            return 1 === S.length ? `0${S}` : S;
          };
        return `#${hex(S)}${hex(C)}${hex(I)}${$ < 1 ? hex(Math.round(255 * $)) : ''}`;
      }
      function dlv_es_default(w, S, C, I, $) {
        for (S = S.split ? S.split('.') : S, I = 0; I < S.length; I++) w = w ? w[S[I]] : $;
        return w === $ ? C : w;
      }
      var isEmptyObject = (w) => 0 === Object.keys(w).length,
        getColor = (w, S, C) => {
          let I = dlv_es_default(w, `colors.${S}`, S);
          try {
            return index_exports_import_es_toHex(I), I;
          } catch {
            return null != C ? C : '#000000';
          }
        },
        getBrightness = (w) => {
          let [S, C, I] = parseToRgba(w);
          return (299 * S + 587 * C + 114 * I) / 1e3;
        },
        tone = (w) => (S) => {
          let C = getColor(S, w),
            I = getBrightness(C);
          return I < 128 ? 'dark' : 'light';
        },
        isDark = (w) => (S) => 'dark' === tone(w)(S),
        chunk_6IC2I3BY_transparentize = (w, S) => (C) => {
          let I = getColor(C, w);
          return transparentize(I, 1 - S);
        };
      function generateStripe(w = '1rem', S = 'rgba(255, 255, 255, 0.15)') {
        return {
          backgroundImage: `linear-gradient(
    45deg,
    ${S} 25%,
    transparent 25%,
    transparent 50%,
    ${S} 50%,
    ${S} 75%,
    transparent 75%,
    transparent
  )`,
          backgroundSize: `${w} ${w}`
        };
      }
      var randomHex = () =>
        `#${Math.floor(16777215 * Math.random())
          .toString(16)
          .padEnd(6, '0')}`;
      function randomColor(w) {
        let S = randomHex();
        return !w || isEmptyObject(w)
          ? S
          : w.string && w.colors
          ? randomColorFromList(w.string, w.colors)
          : w.string && !w.colors
          ? randomColorFromString(w.string)
          : w.colors && !w.string
          ? randomFromList(w.colors)
          : S;
      }
      function randomColorFromString(w) {
        let S = 0;
        if (0 === w.length) return S.toString();
        for (let C = 0; C < w.length; C += 1) (S = w.charCodeAt(C) + ((S << 5) - S)), (S &= S);
        let C = '#';
        for (let w = 0; w < 3; w += 1) {
          let I = (S >> (8 * w)) & 255;
          C += `00${I.toString(16)}`.substr(-2);
        }
        return C;
      }
      function randomColorFromList(w, S) {
        let C = 0;
        if (0 === w.length) return S[0];
        for (let S = 0; S < w.length; S += 1) (C = w.charCodeAt(S) + ((C << 5) - C)), (C &= C);
        return (C = ((C % S.length) + S.length) % S.length), S[C];
      }
      function randomFromList(w) {
        return w[Math.floor(Math.random() * w.length)];
      }
      var tC = (0, eT.gJ)('tabs-color'),
        tP = (0, eT.gJ)('tabs-bg'),
        tA = (0, eT.gJ)('tabs-border-color'),
        { defineMultiStyleConfig: tT, definePartsStyle: tE } = (0, eT.D)(e6.keys),
        tz = (0, eT.k0)((w) => {
          let { orientation: S } = w;
          return { display: 'vertical' === S ? 'flex' : 'block' };
        }),
        tI = (0, eT.k0)((w) => {
          let { isFitted: S } = w;
          return {
            flex: S ? 1 : void 0,
            transitionProperty: 'common',
            transitionDuration: 'normal',
            _focusVisible: { zIndex: 1, boxShadow: 'outline' },
            _disabled: { cursor: 'not-allowed', opacity: 0.4 }
          };
        }),
        tB = (0, eT.k0)((w) => {
          let { align: S = 'start', orientation: C } = w;
          return {
            justifyContent: { end: 'flex-end', center: 'center', start: 'flex-start' }[S],
            flexDirection: 'vertical' === C ? 'column' : 'row'
          };
        }),
        tR = (0, eT.k0)({ p: 4 }),
        tO = tT({
          baseStyle: tE((w) => ({ root: tz(w), tab: tI(w), tablist: tB(w), tabpanel: tR })),
          sizes: {
            sm: tE({ tab: { py: 1, px: 4, fontSize: 'sm' } }),
            md: tE({ tab: { fontSize: 'md', py: 2, px: 4 } }),
            lg: tE({ tab: { fontSize: 'lg', py: 3, px: 4 } })
          },
          variants: {
            line: tE((w) => {
              let { colorScheme: S, orientation: C } = w,
                I = 'vertical' === C,
                $ = I ? 'borderStart' : 'borderBottom';
              return {
                tablist: { [$]: '2px solid', borderColor: 'inherit' },
                tab: {
                  [$]: '2px solid',
                  borderColor: 'transparent',
                  [I ? 'marginStart' : 'marginBottom']: '-2px',
                  _selected: {
                    [tC.variable]: `colors.${S}.600`,
                    _dark: { [tC.variable]: `colors.${S}.300` },
                    borderColor: 'currentColor'
                  },
                  _active: { [tP.variable]: 'colors.gray.200', _dark: { [tP.variable]: 'colors.whiteAlpha.300' } },
                  _disabled: { _active: { bg: 'none' } },
                  color: tC.reference,
                  bg: tP.reference
                }
              };
            }),
            enclosed: tE((w) => {
              let { colorScheme: S } = w;
              return {
                tab: {
                  borderTopRadius: 'md',
                  border: '1px solid',
                  borderColor: 'transparent',
                  mb: '-1px',
                  [tA.variable]: 'transparent',
                  _selected: {
                    [tC.variable]: `colors.${S}.600`,
                    [tA.variable]: 'colors.white',
                    _dark: { [tC.variable]: `colors.${S}.300`, [tA.variable]: 'colors.gray.800' },
                    borderColor: 'inherit',
                    borderBottomColor: tA.reference
                  },
                  color: tC.reference
                },
                tablist: { mb: '-1px', borderBottom: '1px solid', borderColor: 'inherit' }
              };
            }),
            'enclosed-colored': tE((w) => {
              let { colorScheme: S } = w;
              return {
                tab: {
                  border: '1px solid',
                  borderColor: 'inherit',
                  [tP.variable]: 'colors.gray.50',
                  _dark: { [tP.variable]: 'colors.whiteAlpha.50' },
                  mb: '-1px',
                  _notLast: { marginEnd: '-1px' },
                  _selected: {
                    [tP.variable]: 'colors.white',
                    [tC.variable]: `colors.${S}.600`,
                    _dark: { [tP.variable]: 'colors.gray.800', [tC.variable]: `colors.${S}.300` },
                    borderColor: 'inherit',
                    borderTopColor: 'currentColor',
                    borderBottomColor: 'transparent'
                  },
                  color: tC.reference,
                  bg: tP.reference
                },
                tablist: { mb: '-1px', borderBottom: '1px solid', borderColor: 'inherit' }
              };
            }),
            'soft-rounded': tE((w) => {
              let { colorScheme: S, theme: C } = w;
              return {
                tab: {
                  borderRadius: 'full',
                  fontWeight: 'semibold',
                  color: 'gray.600',
                  _selected: { color: getColor(C, `${S}.700`), bg: getColor(C, `${S}.100`) }
                }
              };
            }),
            'solid-rounded': tE((w) => {
              let { colorScheme: S } = w;
              return {
                tab: {
                  borderRadius: 'full',
                  fontWeight: 'semibold',
                  [tC.variable]: 'colors.gray.600',
                  _dark: { [tC.variable]: 'inherit' },
                  _selected: {
                    [tC.variable]: 'colors.white',
                    [tP.variable]: `colors.${S}.600`,
                    _dark: { [tC.variable]: 'colors.gray.800', [tP.variable]: `colors.${S}.300` }
                  },
                  color: tC.reference,
                  bg: tP.reference
                }
              };
            }),
            unstyled: tE({})
          },
          defaultProps: { size: 'md', variant: 'line', colorScheme: 'blue' }
        }),
        tM = (0, eT._6)('badge', ['bg', 'color', 'shadow']),
        tD = (0, eT.k0)({
          px: 1,
          textTransform: 'uppercase',
          fontSize: 'xs',
          borderRadius: 'sm',
          fontWeight: 'bold',
          bg: tM.bg.reference,
          color: tM.color.reference,
          boxShadow: tM.shadow.reference
        }),
        tj = (0, eT.k0)((w) => {
          let { colorScheme: S, theme: C } = w,
            I = chunk_6IC2I3BY_transparentize(`${S}.500`, 0.6)(C);
          return {
            [tM.bg.variable]: `colors.${S}.500`,
            [tM.color.variable]: 'colors.white',
            _dark: { [tM.bg.variable]: I, [tM.color.variable]: 'colors.whiteAlpha.800' }
          };
        }),
        tL = (0, eT.k0)((w) => {
          let { colorScheme: S, theme: C } = w,
            I = chunk_6IC2I3BY_transparentize(`${S}.200`, 0.16)(C);
          return {
            [tM.bg.variable]: `colors.${S}.100`,
            [tM.color.variable]: `colors.${S}.800`,
            _dark: { [tM.bg.variable]: I, [tM.color.variable]: `colors.${S}.200` }
          };
        }),
        tF = (0, eT.k0)((w) => {
          let { colorScheme: S, theme: C } = w,
            I = chunk_6IC2I3BY_transparentize(`${S}.200`, 0.8)(C);
          return {
            [tM.color.variable]: `colors.${S}.500`,
            _dark: { [tM.color.variable]: I },
            [tM.shadow.variable]: `inset 0 0 0px 1px ${tM.color.reference}`
          };
        }),
        tV = (0, eT.fj)({
          baseStyle: tD,
          variants: { solid: tj, subtle: tL, outline: tF },
          defaultProps: { variant: 'subtle', colorScheme: 'gray' }
        }),
        { defineMultiStyleConfig: tN, definePartsStyle: tU } = (0, eT.D)(e8.keys),
        t$ = (0, eT.gJ)('tag-bg'),
        tW = (0, eT.gJ)('tag-color'),
        tG = (0, eT.gJ)('tag-shadow'),
        tH = (0, eT.gJ)('tag-min-height'),
        tq = (0, eT.gJ)('tag-min-width'),
        tZ = (0, eT.gJ)('tag-font-size'),
        tY = (0, eT.gJ)('tag-padding-inline'),
        tK = tU({
          container: (0, eT.k0)({
            fontWeight: 'medium',
            lineHeight: 1.2,
            outline: 0,
            [tW.variable]: tM.color.reference,
            [t$.variable]: tM.bg.reference,
            [tG.variable]: tM.shadow.reference,
            color: tW.reference,
            bg: t$.reference,
            boxShadow: tG.reference,
            borderRadius: 'md',
            minH: tH.reference,
            minW: tq.reference,
            fontSize: tZ.reference,
            px: tY.reference,
            _focusVisible: { [tG.variable]: 'shadows.outline' }
          }),
          label: (0, eT.k0)({ lineHeight: 1.2, overflow: 'visible' }),
          closeButton: (0, eT.k0)({
            fontSize: 'lg',
            w: '5',
            h: '5',
            transitionProperty: 'common',
            transitionDuration: 'normal',
            borderRadius: 'full',
            marginStart: '1.5',
            marginEnd: '-1',
            opacity: 0.5,
            _disabled: { opacity: 0.4 },
            _focusVisible: { boxShadow: 'outline', bg: 'rgba(0, 0, 0, 0.14)' },
            _hover: { opacity: 0.8 },
            _active: { opacity: 1 }
          })
        }),
        tX = {
          sm: tU({
            container: {
              [tH.variable]: 'sizes.5',
              [tq.variable]: 'sizes.5',
              [tZ.variable]: 'fontSizes.xs',
              [tY.variable]: 'space.2'
            },
            closeButton: { marginEnd: '-2px', marginStart: '0.35rem' }
          }),
          md: tU({
            container: {
              [tH.variable]: 'sizes.6',
              [tq.variable]: 'sizes.6',
              [tZ.variable]: 'fontSizes.sm',
              [tY.variable]: 'space.2'
            }
          }),
          lg: tU({
            container: {
              [tH.variable]: 'sizes.8',
              [tq.variable]: 'sizes.8',
              [tZ.variable]: 'fontSizes.md',
              [tY.variable]: 'space.3'
            }
          })
        },
        tJ = tN({
          variants: {
            subtle: tU((w) => {
              var S;
              return { container: null == (S = tV.variants) ? void 0 : S.subtle(w) };
            }),
            solid: tU((w) => {
              var S;
              return { container: null == (S = tV.variants) ? void 0 : S.solid(w) };
            }),
            outline: tU((w) => {
              var S;
              return { container: null == (S = tV.variants) ? void 0 : S.outline(w) };
            })
          },
          baseStyle: tK,
          sizes: tX,
          defaultProps: { size: 'md', variant: 'subtle', colorScheme: 'gray' }
        }),
        { definePartsStyle: tQ, defineMultiStyleConfig: t0 } = (0, eT.D)(eH.keys),
        t1 = (0, eT.gJ)('input-height'),
        t2 = (0, eT.gJ)('input-font-size'),
        t5 = (0, eT.gJ)('input-padding'),
        t3 = (0, eT.gJ)('input-border-radius'),
        t4 = tQ({
          addon: { height: t1.reference, fontSize: t2.reference, px: t5.reference, borderRadius: t3.reference },
          field: {
            width: '100%',
            height: t1.reference,
            fontSize: t2.reference,
            px: t5.reference,
            borderRadius: t3.reference,
            minWidth: 0,
            outline: 0,
            position: 'relative',
            appearance: 'none',
            transitionProperty: 'common',
            transitionDuration: 'normal',
            _disabled: { opacity: 0.4, cursor: 'not-allowed' }
          }
        }),
        t6 = {
          lg: (0, eT.k0)({
            [t2.variable]: 'fontSizes.lg',
            [t5.variable]: 'space.4',
            [t3.variable]: 'radii.md',
            [t1.variable]: 'sizes.12'
          }),
          md: (0, eT.k0)({
            [t2.variable]: 'fontSizes.md',
            [t5.variable]: 'space.4',
            [t3.variable]: 'radii.md',
            [t1.variable]: 'sizes.10'
          }),
          sm: (0, eT.k0)({
            [t2.variable]: 'fontSizes.sm',
            [t5.variable]: 'space.3',
            [t3.variable]: 'radii.sm',
            [t1.variable]: 'sizes.8'
          }),
          xs: (0, eT.k0)({
            [t2.variable]: 'fontSizes.xs',
            [t5.variable]: 'space.2',
            [t3.variable]: 'radii.sm',
            [t1.variable]: 'sizes.6'
          })
        };
      function getDefaults(w) {
        let { focusBorderColor: S, errorBorderColor: C } = w;
        return {
          focusBorderColor: S || mode('blue.500', 'blue.300')(w),
          errorBorderColor: C || mode('red.500', 'red.300')(w)
        };
      }
      var t8 = t0({
          baseStyle: t4,
          sizes: {
            lg: tQ({ field: t6.lg, group: t6.lg }),
            md: tQ({ field: t6.md, group: t6.md }),
            sm: tQ({ field: t6.sm, group: t6.sm }),
            xs: tQ({ field: t6.xs, group: t6.xs })
          },
          variants: {
            outline: tQ((w) => {
              let { theme: S } = w,
                { focusBorderColor: C, errorBorderColor: I } = getDefaults(w);
              return {
                field: {
                  border: '1px solid',
                  borderColor: 'inherit',
                  bg: 'inherit',
                  _hover: { borderColor: mode('gray.300', 'whiteAlpha.400')(w) },
                  _readOnly: { boxShadow: 'none !important', userSelect: 'all' },
                  _invalid: { borderColor: getColor(S, I), boxShadow: `0 0 0 1px ${getColor(S, I)}` },
                  _focusVisible: { zIndex: 1, borderColor: getColor(S, C), boxShadow: `0 0 0 1px ${getColor(S, C)}` }
                },
                addon: {
                  border: '1px solid',
                  borderColor: mode('inherit', 'whiteAlpha.50')(w),
                  bg: mode('gray.100', 'whiteAlpha.300')(w)
                }
              };
            }),
            filled: tQ((w) => {
              let { theme: S } = w,
                { focusBorderColor: C, errorBorderColor: I } = getDefaults(w);
              return {
                field: {
                  border: '2px solid',
                  borderColor: 'transparent',
                  bg: mode('gray.100', 'whiteAlpha.50')(w),
                  _hover: { bg: mode('gray.200', 'whiteAlpha.100')(w) },
                  _readOnly: { boxShadow: 'none !important', userSelect: 'all' },
                  _invalid: { borderColor: getColor(S, I) },
                  _focusVisible: { bg: 'transparent', borderColor: getColor(S, C) }
                },
                addon: { border: '2px solid', borderColor: 'transparent', bg: mode('gray.100', 'whiteAlpha.50')(w) }
              };
            }),
            flushed: tQ((w) => {
              let { theme: S } = w,
                { focusBorderColor: C, errorBorderColor: I } = getDefaults(w);
              return {
                field: {
                  borderBottom: '1px solid',
                  borderColor: 'inherit',
                  borderRadius: '0',
                  px: '0',
                  bg: 'transparent',
                  _readOnly: { boxShadow: 'none !important', userSelect: 'all' },
                  _invalid: { borderColor: getColor(S, I), boxShadow: `0px 1px 0px 0px ${getColor(S, I)}` },
                  _focusVisible: { borderColor: getColor(S, C), boxShadow: `0px 1px 0px 0px ${getColor(S, C)}` }
                },
                addon: {
                  borderBottom: '2px solid',
                  borderColor: 'inherit',
                  borderRadius: '0',
                  px: '0',
                  bg: 'transparent'
                }
              };
            }),
            unstyled: tQ({
              field: { bg: 'transparent', px: '0', height: 'auto' },
              addon: { bg: 'transparent', px: '0', height: 'auto' }
            })
          },
          defaultProps: { size: 'md', variant: 'outline' }
        }),
        t9 = (0, eT.k0)({
          ...(null == (I = t8.baseStyle) ? void 0 : I.field),
          paddingY: '2',
          minHeight: '20',
          lineHeight: 'short',
          verticalAlign: 'top'
        }),
        t7 = {
          outline: (0, eT.k0)((w) => {
            var S, C;
            return null != (C = null == (S = t8.variants) ? void 0 : S.outline(w).field) ? C : {};
          }),
          flushed: (0, eT.k0)((w) => {
            var S, C;
            return null != (C = null == (S = t8.variants) ? void 0 : S.flushed(w).field) ? C : {};
          }),
          filled: (0, eT.k0)((w) => {
            var S, C;
            return null != (C = null == (S = t8.variants) ? void 0 : S.filled(w).field) ? C : {};
          }),
          unstyled: null != (er = null == ($ = t8.variants) ? void 0 : $.unstyled.field) ? er : {}
        },
        rr = {
          xs: null != (ei = null == (en = t8.sizes) ? void 0 : en.xs.field) ? ei : {},
          sm: null != (es = null == (eo = t8.sizes) ? void 0 : eo.sm.field) ? es : {},
          md: null != (ec = null == (el = t8.sizes) ? void 0 : el.md.field) ? ec : {},
          lg: null != (ed = null == (eu = t8.sizes) ? void 0 : eu.lg.field) ? ed : {}
        },
        rn = (0, eT.fj)({ baseStyle: t9, sizes: rr, variants: t7, defaultProps: { size: 'md', variant: 'outline' } }),
        ri = cssVar('tooltip-bg'),
        ra = cssVar('tooltip-fg'),
        ro = cssVar('popper-arrow-bg'),
        rs = (0, eT.k0)({
          bg: ri.reference,
          color: ra.reference,
          [ri.variable]: 'colors.gray.700',
          [ra.variable]: 'colors.whiteAlpha.900',
          _dark: { [ri.variable]: 'colors.gray.300', [ra.variable]: 'colors.gray.900' },
          [ro.variable]: ri.reference,
          px: '2',
          py: '0.5',
          borderRadius: 'sm',
          fontWeight: 'medium',
          fontSize: 'sm',
          boxShadow: 'md',
          maxW: 'xs',
          zIndex: 'tooltip'
        }),
        rl = (0, eT.fj)({ baseStyle: rs }),
        { defineMultiStyleConfig: rc, definePartsStyle: ru } = (0, eT.D)(eQ.keys),
        rd = (0, eT.k0)((w) => {
          let { colorScheme: S, theme: C, isIndeterminate: I, hasStripe: $ } = w,
            er = mode(generateStripe(), generateStripe('1rem', 'rgba(0,0,0,0.1)'))(w),
            en = mode(`${S}.500`, `${S}.200`)(w),
            ei = `linear-gradient(
    to right,
    transparent 0%,
    ${getColor(C, en)} 50%,
    transparent 100%
  )`;
          return { ...(!I && $ && er), ...(I ? { bgImage: ei } : { bgColor: en }) };
        }),
        rh = (0, eT.k0)({ lineHeight: '1', fontSize: '0.25em', fontWeight: 'bold', color: 'white' }),
        rf = (0, eT.k0)((w) => ({ bg: mode('gray.100', 'whiteAlpha.300')(w) })),
        rp = (0, eT.k0)((w) => ({ transitionProperty: 'common', transitionDuration: 'slow', ...rd(w) })),
        rm = ru((w) => ({ label: rh, filledTrack: rp(w), track: rf(w) })),
        rg = rc({
          sizes: {
            xs: ru({ track: { h: '1' } }),
            sm: ru({ track: { h: '2' } }),
            md: ru({ track: { h: '3' } }),
            lg: ru({ track: { h: '4' } })
          },
          baseStyle: rm,
          defaultProps: { size: 'md', colorScheme: 'blue' }
        }),
        isFunction = (w) => 'function' == typeof w;
      function runIfFn(w, ...S) {
        return isFunction(w) ? w(...S) : w;
      }
      var { definePartsStyle: ry, defineMultiStyleConfig: rv } = (0, eT.D)(eN.keys),
        rb = (0, eT.gJ)('checkbox-size'),
        r_ = (0, eT.k0)((w) => {
          let { colorScheme: S } = w;
          return {
            w: rb.reference,
            h: rb.reference,
            transitionProperty: 'box-shadow',
            transitionDuration: 'normal',
            border: '2px solid',
            borderRadius: 'sm',
            borderColor: 'inherit',
            color: 'white',
            _checked: {
              bg: mode(`${S}.500`, `${S}.200`)(w),
              borderColor: mode(`${S}.500`, `${S}.200`)(w),
              color: mode('white', 'gray.900')(w),
              _hover: { bg: mode(`${S}.600`, `${S}.300`)(w), borderColor: mode(`${S}.600`, `${S}.300`)(w) },
              _disabled: {
                borderColor: mode('gray.200', 'transparent')(w),
                bg: mode('gray.200', 'whiteAlpha.300')(w),
                color: mode('gray.500', 'whiteAlpha.500')(w)
              }
            },
            _indeterminate: {
              bg: mode(`${S}.500`, `${S}.200`)(w),
              borderColor: mode(`${S}.500`, `${S}.200`)(w),
              color: mode('white', 'gray.900')(w)
            },
            _disabled: { bg: mode('gray.100', 'whiteAlpha.100')(w), borderColor: mode('gray.100', 'transparent')(w) },
            _focusVisible: { boxShadow: 'outline' },
            _invalid: { borderColor: mode('red.500', 'red.300')(w) }
          };
        }),
        rx = (0, eT.k0)({ _disabled: { cursor: 'not-allowed' } }),
        rw = (0, eT.k0)({ userSelect: 'none', _disabled: { opacity: 0.4 } }),
        rk = (0, eT.k0)({ transitionProperty: 'transform', transitionDuration: 'normal' }),
        rS = rv({
          baseStyle: ry((w) => ({ icon: rk, container: rx, control: runIfFn(r_, w), label: rw })),
          sizes: {
            sm: ry({ control: { [rb.variable]: 'sizes.3' }, label: { fontSize: 'sm' }, icon: { fontSize: '3xs' } }),
            md: ry({ control: { [rb.variable]: 'sizes.4' }, label: { fontSize: 'md' }, icon: { fontSize: '2xs' } }),
            lg: ry({ control: { [rb.variable]: 'sizes.5' }, label: { fontSize: 'lg' }, icon: { fontSize: '2xs' } })
          },
          defaultProps: { size: 'md', colorScheme: 'blue' }
        }),
        { defineMultiStyleConfig: rC, definePartsStyle: rP } = (0, eT.D)(e0.keys),
        rA = (0, eT.k0)((w) => {
          var S;
          let C = null == (S = runIfFn(rS.baseStyle, w)) ? void 0 : S.control;
          return {
            ...C,
            borderRadius: 'full',
            _checked: {
              ...(null == C ? void 0 : C._checked),
              _before: {
                content: '""',
                display: 'inline-block',
                pos: 'relative',
                w: '50%',
                h: '50%',
                borderRadius: '50%',
                bg: 'currentColor'
              }
            }
          };
        }),
        rT = rC({
          baseStyle: rP((w) => {
            var S, C;
            return {
              label: null == (S = rS.baseStyle) ? void 0 : S.call(rS, w).label,
              container: null == (C = rS.baseStyle) ? void 0 : C.call(rS, w).container,
              control: rA(w)
            };
          }),
          sizes: {
            md: rP({ control: { w: '4', h: '4' }, label: { fontSize: 'md' } }),
            lg: rP({ control: { w: '5', h: '5' }, label: { fontSize: 'lg' } }),
            sm: rP({ control: { width: '3', height: '3' }, label: { fontSize: 'sm' } })
          },
          defaultProps: { size: 'md', colorScheme: 'blue' }
        }),
        { defineMultiStyleConfig: rE, definePartsStyle: rz } = (0, eT.D)(e1.keys),
        rI = (0, eT.gJ)('select-bg'),
        rB = rz({
          field: (0, eT.k0)({
            ...(null == (eh = t8.baseStyle) ? void 0 : eh.field),
            appearance: 'none',
            paddingBottom: '1px',
            lineHeight: 'normal',
            bg: rI.reference,
            [rI.variable]: 'colors.white',
            _dark: { [rI.variable]: 'colors.gray.700' },
            '> option, > optgroup': { bg: rI.reference }
          }),
          icon: (0, eT.k0)({
            width: '6',
            height: '100%',
            insetEnd: '2',
            position: 'relative',
            color: 'currentColor',
            fontSize: 'xl',
            _disabled: { opacity: 0.5 }
          })
        }),
        rR = (0, eT.k0)({ paddingInlineEnd: '8' }),
        rO = rE({
          baseStyle: rB,
          sizes: {
            lg: {
              ...(null == (ef = t8.sizes) ? void 0 : ef.lg),
              field: { ...(null == (ep = t8.sizes) ? void 0 : ep.lg.field), ...rR }
            },
            md: {
              ...(null == (em = t8.sizes) ? void 0 : em.md),
              field: { ...(null == (eg = t8.sizes) ? void 0 : eg.md.field), ...rR }
            },
            sm: {
              ...(null == (ey = t8.sizes) ? void 0 : ey.sm),
              field: { ...(null == (ev = t8.sizes) ? void 0 : ev.sm.field), ...rR }
            },
            xs: {
              ...(null == (eb = t8.sizes) ? void 0 : eb.xs),
              field: { ...(null == (e_ = t8.sizes) ? void 0 : e_.xs.field), ...rR },
              icon: { insetEnd: '1' }
            }
          },
          variants: t8.variants,
          defaultProps: t8.defaultProps
        }),
        rM = (0, eT.gJ)('skeleton-start-color'),
        rD = (0, eT.gJ)('skeleton-end-color'),
        rj = (0, eT.k0)({
          [rM.variable]: 'colors.gray.100',
          [rD.variable]: 'colors.gray.400',
          _dark: { [rM.variable]: 'colors.gray.800', [rD.variable]: 'colors.gray.600' },
          background: rM.reference,
          borderColor: rD.reference,
          opacity: 0.7,
          borderRadius: 'sm'
        }),
        rL = (0, eT.fj)({ baseStyle: rj }),
        rF = (0, eT.gJ)('skip-link-bg'),
        rV = (0, eT.k0)({
          borderRadius: 'md',
          fontWeight: 'semibold',
          _focusVisible: {
            boxShadow: 'outline',
            padding: '4',
            position: 'fixed',
            top: '6',
            insetStart: '6',
            [rF.variable]: 'colors.white',
            _dark: { [rF.variable]: 'colors.gray.700' },
            bg: rF.reference
          }
        }),
        rN = (0, eT.fj)({ baseStyle: rV }),
        { defineMultiStyleConfig: rU, definePartsStyle: r$ } = (0, eT.D)(e2.keys),
        rW = (0, eT.gJ)('slider-thumb-size'),
        rG = (0, eT.gJ)('slider-track-size'),
        rH = (0, eT.gJ)('slider-bg'),
        rq = (0, eT.k0)((w) => {
          let { orientation: S } = w;
          return {
            display: 'inline-block',
            position: 'relative',
            cursor: 'pointer',
            _disabled: { opacity: 0.6, cursor: 'default', pointerEvents: 'none' },
            ...orient({ orientation: S, vertical: { h: '100%' }, horizontal: { w: '100%' } })
          };
        }),
        rZ = (0, eT.k0)((w) => {
          let S = orient({
            orientation: w.orientation,
            horizontal: { h: rG.reference },
            vertical: { w: rG.reference }
          });
          return {
            ...S,
            overflow: 'hidden',
            borderRadius: 'sm',
            [rH.variable]: 'colors.gray.200',
            _dark: { [rH.variable]: 'colors.whiteAlpha.200' },
            _disabled: { [rH.variable]: 'colors.gray.300', _dark: { [rH.variable]: 'colors.whiteAlpha.300' } },
            bg: rH.reference
          };
        }),
        rY = (0, eT.k0)((w) => {
          let { orientation: S } = w,
            C = orient({
              orientation: S,
              vertical: {
                left: '50%',
                transform: 'translateX(-50%)',
                _active: { transform: 'translateX(-50%) scale(1.15)' }
              },
              horizontal: {
                top: '50%',
                transform: 'translateY(-50%)',
                _active: { transform: 'translateY(-50%) scale(1.15)' }
              }
            });
          return {
            ...C,
            w: rW.reference,
            h: rW.reference,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            position: 'absolute',
            outline: 0,
            zIndex: 1,
            borderRadius: 'full',
            bg: 'white',
            boxShadow: 'base',
            border: '1px solid',
            borderColor: 'transparent',
            transitionProperty: 'transform',
            transitionDuration: 'normal',
            _focusVisible: { boxShadow: 'outline' },
            _disabled: { bg: 'gray.300' }
          };
        }),
        rK = (0, eT.k0)((w) => {
          let { colorScheme: S } = w;
          return {
            width: 'inherit',
            height: 'inherit',
            [rH.variable]: `colors.${S}.500`,
            _dark: { [rH.variable]: `colors.${S}.200` },
            bg: rH.reference
          };
        }),
        rX = rU({
          baseStyle: r$((w) => ({ container: rq(w), track: rZ(w), thumb: rY(w), filledTrack: rK(w) })),
          sizes: {
            lg: r$({ container: { [rW.variable]: 'sizes.4', [rG.variable]: 'sizes.1' } }),
            md: r$({ container: { [rW.variable]: 'sizes.3.5', [rG.variable]: 'sizes.1' } }),
            sm: r$({ container: { [rW.variable]: 'sizes.2.5', [rG.variable]: 'sizes.0.5' } })
          },
          defaultProps: { size: 'md', colorScheme: 'blue' }
        }),
        rJ = cssVar('spinner-size'),
        rQ = (0, eT.k0)({ width: [rJ.reference], height: [rJ.reference] }),
        r0 = {
          xs: (0, eT.k0)({ [rJ.variable]: 'sizes.3' }),
          sm: (0, eT.k0)({ [rJ.variable]: 'sizes.4' }),
          md: (0, eT.k0)({ [rJ.variable]: 'sizes.6' }),
          lg: (0, eT.k0)({ [rJ.variable]: 'sizes.8' }),
          xl: (0, eT.k0)({ [rJ.variable]: 'sizes.12' })
        },
        r1 = (0, eT.fj)({ baseStyle: rQ, sizes: r0, defaultProps: { size: 'md' } }),
        { defineMultiStyleConfig: r2, definePartsStyle: r5 } = (0, eT.D)(e5.keys),
        r3 = r2({
          baseStyle: r5({
            container: {},
            label: (0, eT.k0)({ fontWeight: 'medium' }),
            helpText: (0, eT.k0)({ opacity: 0.8, marginBottom: '2' }),
            number: (0, eT.k0)({ verticalAlign: 'baseline', fontWeight: 'semibold' }),
            icon: (0, eT.k0)({ marginEnd: 1, w: '3.5', h: '3.5', verticalAlign: 'middle' })
          }),
          sizes: { md: r5({ label: { fontSize: 'sm' }, helpText: { fontSize: 'sm' }, number: { fontSize: '2xl' } }) },
          defaultProps: { size: 'md' }
        }),
        r4 = (0, eT.gJ)('kbd-bg'),
        r6 = (0, eT.k0)({
          [r4.variable]: 'colors.gray.100',
          _dark: { [r4.variable]: 'colors.whiteAlpha.100' },
          bg: r4.reference,
          borderRadius: 'md',
          borderWidth: '1px',
          borderBottomWidth: '3px',
          fontSize: '0.8em',
          fontWeight: 'bold',
          lineHeight: 'normal',
          px: '0.4em',
          whiteSpace: 'nowrap'
        }),
        r8 = (0, eT.fj)({ baseStyle: r6 }),
        r9 = (0, eT.k0)({
          transitionProperty: 'common',
          transitionDuration: 'fast',
          transitionTimingFunction: 'ease-out',
          cursor: 'pointer',
          textDecoration: 'none',
          outline: 'none',
          color: 'inherit',
          _hover: { textDecoration: 'underline' },
          _focusVisible: { boxShadow: 'outline' }
        }),
        r7 = (0, eT.fj)({ baseStyle: r9 }),
        { defineMultiStyleConfig: nr, definePartsStyle: nn } = (0, eT.D)(eZ.keys),
        ni = nr({
          baseStyle: nn({ icon: (0, eT.k0)({ marginEnd: '2', display: 'inline', verticalAlign: 'text-bottom' }) })
        }),
        { defineMultiStyleConfig: na, definePartsStyle: no } = (0, eT.D)(eY.keys),
        ns = (0, eT.gJ)('menu-bg'),
        nl = (0, eT.gJ)('menu-shadow'),
        nc = (0, eT.k0)({
          [ns.variable]: '#fff',
          [nl.variable]: 'shadows.sm',
          _dark: { [ns.variable]: 'colors.gray.700', [nl.variable]: 'shadows.dark-lg' },
          color: 'inherit',
          minW: '3xs',
          py: '2',
          zIndex: 1,
          borderRadius: 'md',
          borderWidth: '1px',
          bg: ns.reference,
          boxShadow: nl.reference
        }),
        nu = (0, eT.k0)({
          py: '1.5',
          px: '3',
          transitionProperty: 'background',
          transitionDuration: 'ultra-fast',
          transitionTimingFunction: 'ease-in',
          _focus: { [ns.variable]: 'colors.gray.100', _dark: { [ns.variable]: 'colors.whiteAlpha.100' } },
          _active: { [ns.variable]: 'colors.gray.200', _dark: { [ns.variable]: 'colors.whiteAlpha.200' } },
          _expanded: { [ns.variable]: 'colors.gray.100', _dark: { [ns.variable]: 'colors.whiteAlpha.100' } },
          _disabled: { opacity: 0.4, cursor: 'not-allowed' },
          bg: ns.reference
        }),
        nd = (0, eT.k0)({ mx: 4, my: 2, fontWeight: 'semibold', fontSize: 'sm' }),
        nh = (0, eT.k0)({ display: 'inline-flex', alignItems: 'center', justifyContent: 'center', flexShrink: 0 }),
        nf = (0, eT.k0)({ opacity: 0.6 }),
        np = (0, eT.k0)({ border: 0, borderBottom: '1px solid', borderColor: 'inherit', my: '2', opacity: 0.6 }),
        nm = na({
          baseStyle: no({
            button: (0, eT.k0)({ transitionProperty: 'common', transitionDuration: 'normal' }),
            list: nc,
            item: nu,
            groupTitle: nd,
            icon: nh,
            command: nf,
            divider: np
          })
        }),
        { defineMultiStyleConfig: ng, definePartsStyle: ny } = (0, eT.D)(eK.keys),
        nv = (0, eT.gJ)('modal-bg'),
        nb = (0, eT.gJ)('modal-shadow'),
        n_ = (0, eT.k0)({ bg: 'blackAlpha.600', zIndex: 'modal' }),
        nx = (0, eT.k0)((w) => {
          let { isCentered: S, scrollBehavior: C } = w;
          return {
            display: 'flex',
            zIndex: 'modal',
            justifyContent: 'center',
            alignItems: S ? 'center' : 'flex-start',
            overflow: 'inside' === C ? 'hidden' : 'auto',
            overscrollBehaviorY: 'none'
          };
        }),
        nw = (0, eT.k0)((w) => {
          let { isCentered: S, scrollBehavior: C } = w;
          return {
            borderRadius: 'md',
            color: 'inherit',
            my: S ? 'auto' : '16',
            mx: S ? 'auto' : void 0,
            zIndex: 'modal',
            maxH: 'inside' === C ? 'calc(100% - 7.5rem)' : void 0,
            [nv.variable]: 'colors.white',
            [nb.variable]: 'shadows.lg',
            _dark: { [nv.variable]: 'colors.gray.700', [nb.variable]: 'shadows.dark-lg' },
            bg: nv.reference,
            boxShadow: nb.reference
          };
        }),
        nk = (0, eT.k0)({ px: '6', py: '4', fontSize: 'xl', fontWeight: 'semibold' }),
        nS = (0, eT.k0)({ position: 'absolute', top: '2', insetEnd: '3' }),
        nC = (0, eT.k0)((w) => {
          let { scrollBehavior: S } = w;
          return { px: '6', py: '2', flex: '1', overflow: 'inside' === S ? 'auto' : void 0 };
        }),
        nP = (0, eT.k0)({ px: '6', py: '4' });
      function getSize(w) {
        return 'full' === w
          ? ny({ dialog: { maxW: '100vw', minH: '$100vh', my: '0', borderRadius: '0' } })
          : ny({ dialog: { maxW: w } });
      }
      var nA = ng({
          baseStyle: ny((w) => ({
            overlay: n_,
            dialogContainer: runIfFn(nx, w),
            dialog: runIfFn(nw, w),
            header: nk,
            closeButton: nS,
            body: runIfFn(nC, w),
            footer: nP
          })),
          sizes: {
            xs: getSize('xs'),
            sm: getSize('sm'),
            md: getSize('md'),
            lg: getSize('lg'),
            xl: getSize('xl'),
            '2xl': getSize('2xl'),
            '3xl': getSize('3xl'),
            '4xl': getSize('4xl'),
            '5xl': getSize('5xl'),
            '6xl': getSize('6xl'),
            full: getSize('full')
          },
          defaultProps: { size: 'md' }
        }),
        { defineMultiStyleConfig: nT, definePartsStyle: nE } = (0, eT.D)(eX.keys),
        nz = cssVar('number-input-stepper-width'),
        nI = cssVar('number-input-input-padding'),
        nB = tr(nz).add('0.5rem').toString(),
        nR = cssVar('number-input-bg'),
        nO = cssVar('number-input-color'),
        nM = cssVar('number-input-border-color'),
        nD = (0, eT.k0)({ [nz.variable]: 'sizes.6', [nI.variable]: nB }),
        nj = (0, eT.k0)((w) => {
          var S, C;
          return null != (C = null == (S = runIfFn(t8.baseStyle, w)) ? void 0 : S.field) ? C : {};
        }),
        nL = (0, eT.k0)({ width: nz.reference }),
        nF = (0, eT.k0)({
          borderStart: '1px solid',
          borderStartColor: nM.reference,
          color: nO.reference,
          bg: nR.reference,
          [nO.variable]: 'colors.chakra-body-text',
          [nM.variable]: 'colors.chakra-border-color',
          _dark: { [nO.variable]: 'colors.whiteAlpha.800', [nM.variable]: 'colors.whiteAlpha.300' },
          _active: { [nR.variable]: 'colors.gray.200', _dark: { [nR.variable]: 'colors.whiteAlpha.300' } },
          _disabled: { opacity: 0.4, cursor: 'not-allowed' }
        });
      function chunk_57T4IAPW_getSize(w) {
        var S, C, I;
        let $ = null == (S = t8.sizes) ? void 0 : S[w],
          er = { lg: 'md', md: 'md', sm: 'sm', xs: 'sm' },
          en = null != (I = null == (C = $.field) ? void 0 : C.fontSize) ? I : 'md',
          ei = eS.fontSizes[en];
        return nE({
          field: { ...$.field, paddingInlineEnd: nI.reference, verticalAlign: 'top' },
          stepper: {
            fontSize: tr(ei).multiply(0.75).toString(),
            _first: { borderTopEndRadius: er[w] },
            _last: { borderBottomEndRadius: er[w], mt: '-1px', borderTopWidth: 1 }
          }
        });
      }
      var nV = nT({
          baseStyle: nE((w) => {
            var S;
            return { root: nD, field: null != (S = runIfFn(nj, w)) ? S : {}, stepperGroup: nL, stepper: nF };
          }),
          sizes: {
            xs: chunk_57T4IAPW_getSize('xs'),
            sm: chunk_57T4IAPW_getSize('sm'),
            md: chunk_57T4IAPW_getSize('md'),
            lg: chunk_57T4IAPW_getSize('lg')
          },
          variants: t8.variants,
          defaultProps: t8.defaultProps
        }),
        nN = (0, eT.k0)({ ...(null == (ex = t8.baseStyle) ? void 0 : ex.field), textAlign: 'center' }),
        nU = {
          lg: (0, eT.k0)({ fontSize: 'lg', w: 12, h: 12, borderRadius: 'md' }),
          md: (0, eT.k0)({ fontSize: 'md', w: 10, h: 10, borderRadius: 'md' }),
          sm: (0, eT.k0)({ fontSize: 'sm', w: 8, h: 8, borderRadius: 'sm' }),
          xs: (0, eT.k0)({ fontSize: 'xs', w: 6, h: 6, borderRadius: 'sm' })
        },
        n$ = {
          outline: (0, eT.k0)((w) => {
            var S, C, I;
            return null !=
              (I = null == (C = runIfFn(null == (S = t8.variants) ? void 0 : S.outline, w)) ? void 0 : C.field)
              ? I
              : {};
          }),
          flushed: (0, eT.k0)((w) => {
            var S, C, I;
            return null !=
              (I = null == (C = runIfFn(null == (S = t8.variants) ? void 0 : S.flushed, w)) ? void 0 : C.field)
              ? I
              : {};
          }),
          filled: (0, eT.k0)((w) => {
            var S, C, I;
            return null !=
              (I = null == (C = runIfFn(null == (S = t8.variants) ? void 0 : S.filled, w)) ? void 0 : C.field)
              ? I
              : {};
          }),
          unstyled: null != (ek = null == (ew = t8.variants) ? void 0 : ew.unstyled.field) ? ek : {}
        },
        nW = (0, eT.fj)({ baseStyle: nN, sizes: nU, variants: n$, defaultProps: t8.defaultProps }),
        { defineMultiStyleConfig: nG, definePartsStyle: nH } = (0, eT.D)(eJ.keys),
        nq = cssVar('popper-bg'),
        nZ = cssVar('popper-arrow-bg'),
        nY = cssVar('popper-arrow-shadow-color'),
        nK = nG({
          baseStyle: nH({
            popper: (0, eT.k0)({ zIndex: 10 }),
            content: (0, eT.k0)({
              [nq.variable]: 'colors.white',
              bg: nq.reference,
              [nZ.variable]: nq.reference,
              [nY.variable]: 'colors.gray.200',
              _dark: { [nq.variable]: 'colors.gray.700', [nY.variable]: 'colors.whiteAlpha.300' },
              width: 'xs',
              border: '1px solid',
              borderColor: 'inherit',
              borderRadius: 'md',
              boxShadow: 'sm',
              zIndex: 'inherit',
              _focusVisible: { outline: 0, boxShadow: 'outline' }
            }),
            header: (0, eT.k0)({ px: 3, py: 2, borderBottomWidth: '1px' }),
            body: (0, eT.k0)({ px: 3, py: 2 }),
            footer: (0, eT.k0)({ px: 3, py: 2, borderTopWidth: '1px' }),
            closeButton: (0, eT.k0)({ position: 'absolute', borderRadius: 'md', top: 1, insetEnd: 2, padding: 2 })
          })
        }),
        { definePartsStyle: nX, defineMultiStyleConfig: nJ } = (0, eT.D)(eU.keys),
        nQ = (0, eT.gJ)('drawer-bg'),
        n0 = (0, eT.gJ)('drawer-box-shadow');
      function chunk_VWP3ZVQT_getSize(w) {
        return 'full' === w ? nX({ dialog: { maxW: '100vw', h: '100vh' } }) : nX({ dialog: { maxW: w } });
      }
      var n1 = (0, eT.k0)({ bg: 'blackAlpha.600', zIndex: 'modal' }),
        n2 = (0, eT.k0)({ display: 'flex', zIndex: 'modal', justifyContent: 'center' }),
        n5 = (0, eT.k0)((w) => {
          let { isFullHeight: S } = w;
          return {
            ...(S && { height: '100vh' }),
            zIndex: 'modal',
            maxH: '100vh',
            color: 'inherit',
            [nQ.variable]: 'colors.white',
            [n0.variable]: 'shadows.lg',
            _dark: { [nQ.variable]: 'colors.gray.700', [n0.variable]: 'shadows.dark-lg' },
            bg: nQ.reference,
            boxShadow: n0.reference
          };
        }),
        n3 = (0, eT.k0)({ px: '6', py: '4', fontSize: 'xl', fontWeight: 'semibold' }),
        n4 = (0, eT.k0)({ position: 'absolute', top: '2', insetEnd: '3' }),
        n6 = (0, eT.k0)({ px: '6', py: '2', flex: '1', overflow: 'auto' }),
        n8 = (0, eT.k0)({ px: '6', py: '4' }),
        n9 = nJ({
          baseStyle: nX((w) => ({
            overlay: n1,
            dialogContainer: n2,
            dialog: runIfFn(n5, w),
            header: n3,
            closeButton: n4,
            body: n6,
            footer: n8
          })),
          sizes: {
            xs: chunk_VWP3ZVQT_getSize('xs'),
            sm: chunk_VWP3ZVQT_getSize('md'),
            md: chunk_VWP3ZVQT_getSize('lg'),
            lg: chunk_VWP3ZVQT_getSize('2xl'),
            xl: chunk_VWP3ZVQT_getSize('4xl'),
            full: chunk_VWP3ZVQT_getSize('full')
          },
          defaultProps: { size: 'xs' }
        }),
        { definePartsStyle: n7, defineMultiStyleConfig: ie } = (0, eT.D)(e$.keys),
        it = ie({
          baseStyle: n7({
            preview: (0, eT.k0)({
              borderRadius: 'md',
              py: '1',
              transitionProperty: 'common',
              transitionDuration: 'normal'
            }),
            input: (0, eT.k0)({
              borderRadius: 'md',
              py: '1',
              transitionProperty: 'common',
              transitionDuration: 'normal',
              width: 'full',
              _focusVisible: { boxShadow: 'outline' },
              _placeholder: { opacity: 0.6 }
            }),
            textarea: (0, eT.k0)({
              borderRadius: 'md',
              py: '1',
              transitionProperty: 'common',
              transitionDuration: 'normal',
              width: 'full',
              _focusVisible: { boxShadow: 'outline' },
              _placeholder: { opacity: 0.6 }
            })
          })
        }),
        { definePartsStyle: ir, defineMultiStyleConfig: ii } = (0, eT.D)(eW.keys),
        ia = (0, eT.gJ)('form-control-color'),
        io = ii({
          baseStyle: ir({
            container: { width: '100%', position: 'relative' },
            requiredIndicator: (0, eT.k0)({
              marginStart: '1',
              [ia.variable]: 'colors.red.500',
              _dark: { [ia.variable]: 'colors.red.300' },
              color: ia.reference
            }),
            helperText: (0, eT.k0)({
              mt: '2',
              [ia.variable]: 'colors.gray.600',
              _dark: { [ia.variable]: 'colors.whiteAlpha.600' },
              color: ia.reference,
              lineHeight: 'normal',
              fontSize: 'sm'
            })
          })
        }),
        { definePartsStyle: is, defineMultiStyleConfig: il } = (0, eT.D)(eG.keys),
        ic = (0, eT.gJ)('form-error-color'),
        iu = il({
          baseStyle: is({
            text: (0, eT.k0)({
              [ic.variable]: 'colors.red.500',
              _dark: { [ic.variable]: 'colors.red.300' },
              color: ic.reference,
              mt: '2',
              fontSize: 'sm',
              lineHeight: 'normal'
            }),
            icon: (0, eT.k0)({
              marginEnd: '0.5em',
              [ic.variable]: 'colors.red.500',
              _dark: { [ic.variable]: 'colors.red.300' },
              color: ic.reference
            })
          })
        }),
        id = (0, eT.k0)({
          fontSize: 'md',
          marginEnd: '3',
          mb: '2',
          fontWeight: 'medium',
          transitionProperty: 'common',
          transitionDuration: 'normal',
          opacity: 1,
          _disabled: { opacity: 0.4 }
        }),
        ih = (0, eT.fj)({ baseStyle: id }),
        ip = (0, eT.k0)({ fontFamily: 'heading', fontWeight: 'bold' }),
        im = {
          '4xl': (0, eT.k0)({ fontSize: ['6xl', null, '7xl'], lineHeight: 1 }),
          '3xl': (0, eT.k0)({ fontSize: ['5xl', null, '6xl'], lineHeight: 1 }),
          '2xl': (0, eT.k0)({ fontSize: ['4xl', null, '5xl'], lineHeight: [1.2, null, 1] }),
          xl: (0, eT.k0)({ fontSize: ['3xl', null, '4xl'], lineHeight: [1.33, null, 1.2] }),
          lg: (0, eT.k0)({ fontSize: ['2xl', null, '3xl'], lineHeight: [1.33, null, 1.2] }),
          md: (0, eT.k0)({ fontSize: 'xl', lineHeight: 1.2 }),
          sm: (0, eT.k0)({ fontSize: 'md', lineHeight: 1.2 }),
          xs: (0, eT.k0)({ fontSize: 'sm', lineHeight: 1.2 })
        },
        ig = (0, eT.fj)({ baseStyle: ip, sizes: im, defaultProps: { size: 'xl' } }),
        { defineMultiStyleConfig: iy, definePartsStyle: iv } = (0, eT.D)(eV.keys),
        ib = (0, eT.gJ)('breadcrumb-link-decor'),
        i_ = iy({
          baseStyle: iv({
            link: (0, eT.k0)({
              transitionProperty: 'common',
              transitionDuration: 'fast',
              transitionTimingFunction: 'ease-out',
              outline: 'none',
              color: 'inherit',
              textDecoration: ib.reference,
              [ib.variable]: 'none',
              '&:not([aria-current=page])': {
                cursor: 'pointer',
                _hover: { [ib.variable]: 'underline' },
                _focusVisible: { boxShadow: 'outline' }
              }
            })
          })
        }),
        ix = (0, eT.k0)({
          lineHeight: '1.2',
          borderRadius: 'md',
          fontWeight: 'semibold',
          transitionProperty: 'common',
          transitionDuration: 'normal',
          _focusVisible: { boxShadow: 'outline' },
          _disabled: { opacity: 0.4, cursor: 'not-allowed', boxShadow: 'none' },
          _hover: { _disabled: { bg: 'initial' } }
        }),
        iw = (0, eT.k0)((w) => {
          let { colorScheme: S, theme: C } = w;
          if ('gray' === S)
            return {
              color: mode('gray.800', 'whiteAlpha.900')(w),
              _hover: { bg: mode('gray.100', 'whiteAlpha.200')(w) },
              _active: { bg: mode('gray.200', 'whiteAlpha.300')(w) }
            };
          let I = chunk_6IC2I3BY_transparentize(`${S}.200`, 0.12)(C),
            $ = chunk_6IC2I3BY_transparentize(`${S}.200`, 0.24)(C);
          return {
            color: mode(`${S}.600`, `${S}.200`)(w),
            bg: 'transparent',
            _hover: { bg: mode(`${S}.50`, I)(w) },
            _active: { bg: mode(`${S}.100`, $)(w) }
          };
        }),
        ik = (0, eT.k0)((w) => {
          let { colorScheme: S } = w,
            C = mode('gray.200', 'whiteAlpha.300')(w);
          return {
            border: '1px solid',
            borderColor: 'gray' === S ? C : 'currentColor',
            '.chakra-button__group[data-attached][data-orientation=horizontal] > &:not(:last-of-type)': {
              marginEnd: '-1px'
            },
            '.chakra-button__group[data-attached][data-orientation=vertical] > &:not(:last-of-type)': {
              marginBottom: '-1px'
            },
            ...runIfFn(iw, w)
          };
        }),
        iS = {
          yellow: { bg: 'yellow.400', color: 'black', hoverBg: 'yellow.500', activeBg: 'yellow.600' },
          cyan: { bg: 'cyan.400', color: 'black', hoverBg: 'cyan.500', activeBg: 'cyan.600' }
        },
        iC = (0, eT.k0)((w) => {
          var S;
          let { colorScheme: C } = w;
          if ('gray' === C) {
            let S = mode('gray.100', 'whiteAlpha.200')(w);
            return {
              bg: S,
              color: mode('gray.800', 'whiteAlpha.900')(w),
              _hover: { bg: mode('gray.200', 'whiteAlpha.300')(w), _disabled: { bg: S } },
              _active: { bg: mode('gray.300', 'whiteAlpha.400')(w) }
            };
          }
          let {
              bg: I = `${C}.500`,
              color: $ = 'white',
              hoverBg: er = `${C}.600`,
              activeBg: en = `${C}.700`
            } = null != (S = iS[C]) ? S : {},
            ei = mode(I, `${C}.200`)(w);
          return {
            bg: ei,
            color: mode($, 'gray.800')(w),
            _hover: { bg: mode(er, `${C}.300`)(w), _disabled: { bg: ei } },
            _active: { bg: mode(en, `${C}.400`)(w) }
          };
        }),
        iP = (0, eT.k0)((w) => {
          let { colorScheme: S } = w;
          return {
            padding: 0,
            height: 'auto',
            lineHeight: 'normal',
            verticalAlign: 'baseline',
            color: mode(`${S}.500`, `${S}.200`)(w),
            _hover: { textDecoration: 'underline', _disabled: { textDecoration: 'none' } },
            _active: { color: mode(`${S}.700`, `${S}.500`)(w) }
          };
        }),
        iA = (0, eT.k0)({ bg: 'none', color: 'inherit', display: 'inline', lineHeight: 'inherit', m: '0', p: '0' }),
        iT = {
          lg: (0, eT.k0)({ h: '12', minW: '12', fontSize: 'lg', px: '6' }),
          md: (0, eT.k0)({ h: '10', minW: '10', fontSize: 'md', px: '4' }),
          sm: (0, eT.k0)({ h: '8', minW: '8', fontSize: 'sm', px: '3' }),
          xs: (0, eT.k0)({ h: '6', minW: '6', fontSize: 'xs', px: '2' })
        },
        iE = (0, eT.fj)({
          baseStyle: ix,
          variants: { ghost: iw, outline: ik, solid: iC, link: iP, unstyled: iA },
          sizes: iT,
          defaultProps: { variant: 'solid', size: 'md', colorScheme: 'gray' }
        }),
        { definePartsStyle: iz, defineMultiStyleConfig: iI } = (0, eT.D)(e9.keys),
        iB = (0, eT.gJ)('card-bg'),
        iR = (0, eT.gJ)('card-padding'),
        iO = (0, eT.gJ)('card-shadow'),
        iM = (0, eT.gJ)('card-radius'),
        iD = (0, eT.gJ)('card-border-width', '0'),
        ij = (0, eT.gJ)('card-border-color'),
        iL = iz({
          container: {
            [iB.variable]: 'colors.chakra-body-bg',
            backgroundColor: iB.reference,
            boxShadow: iO.reference,
            borderRadius: iM.reference,
            color: 'chakra-body-text',
            borderWidth: iD.reference,
            borderColor: ij.reference
          },
          body: { padding: iR.reference, flex: '1 1 0%' },
          header: { padding: iR.reference },
          footer: { padding: iR.reference }
        }),
        iF = {
          sm: iz({ container: { [iM.variable]: 'radii.base', [iR.variable]: 'space.3' } }),
          md: iz({ container: { [iM.variable]: 'radii.md', [iR.variable]: 'space.5' } }),
          lg: iz({ container: { [iM.variable]: 'radii.xl', [iR.variable]: 'space.7' } })
        },
        iV = iI({
          baseStyle: iL,
          variants: {
            elevated: iz({ container: { [iO.variable]: 'shadows.base', _dark: { [iB.variable]: 'colors.gray.700' } } }),
            outline: iz({ container: { [iD.variable]: '1px', [ij.variable]: 'colors.chakra-border-color' } }),
            filled: iz({ container: { [iB.variable]: 'colors.chakra-subtle-bg' } }),
            unstyled: { body: { [iR.variable]: 0 }, header: { [iR.variable]: 0 }, footer: { [iR.variable]: 0 } }
          },
          sizes: iF,
          defaultProps: { variant: 'elevated', size: 'md' }
        }),
        iN = cssVar('close-button-size'),
        iU = cssVar('close-button-bg'),
        i$ = (0, eT.k0)({
          w: [iN.reference],
          h: [iN.reference],
          borderRadius: 'md',
          transitionProperty: 'common',
          transitionDuration: 'normal',
          _disabled: { opacity: 0.4, cursor: 'not-allowed', boxShadow: 'none' },
          _hover: { [iU.variable]: 'colors.blackAlpha.100', _dark: { [iU.variable]: 'colors.whiteAlpha.100' } },
          _active: { [iU.variable]: 'colors.blackAlpha.200', _dark: { [iU.variable]: 'colors.whiteAlpha.200' } },
          _focusVisible: { boxShadow: 'outline' },
          bg: iU.reference
        }),
        iW = {
          lg: (0, eT.k0)({ [iN.variable]: 'sizes.10', fontSize: 'md' }),
          md: (0, eT.k0)({ [iN.variable]: 'sizes.8', fontSize: 'xs' }),
          sm: (0, eT.k0)({ [iN.variable]: 'sizes.6', fontSize: '2xs' })
        },
        iG = (0, eT.fj)({ baseStyle: i$, sizes: iW, defaultProps: { size: 'md' } }),
        { variants: iH, defaultProps: iq } = tV,
        iZ = (0, eT.k0)({
          fontFamily: 'mono',
          fontSize: 'sm',
          px: '0.2em',
          borderRadius: 'sm',
          bg: tM.bg.reference,
          color: tM.color.reference,
          boxShadow: tM.shadow.reference
        }),
        iY = (0, eT.fj)({ baseStyle: iZ, variants: iH, defaultProps: iq }),
        iK = (0, eT.k0)({ w: '100%', mx: 'auto', maxW: 'prose', px: '4' }),
        iX = (0, eT.fj)({ baseStyle: iK }),
        iJ = (0, eT.k0)({ opacity: 0.6, borderColor: 'inherit' }),
        iQ = (0, eT.k0)({ borderStyle: 'solid' }),
        i0 = (0, eT.k0)({ borderStyle: 'dashed' }),
        i1 = (0, eT.fj)({ baseStyle: iJ, variants: { solid: iQ, dashed: i0 }, defaultProps: { variant: 'solid' } }),
        { definePartsStyle: i2, defineMultiStyleConfig: i5 } = (0, eT.D)(ej.keys),
        i3 = i5({
          baseStyle: i2({
            container: (0, eT.k0)({
              borderTopWidth: '1px',
              borderColor: 'inherit',
              _last: { borderBottomWidth: '1px' }
            }),
            button: (0, eT.k0)({
              transitionProperty: 'common',
              transitionDuration: 'normal',
              fontSize: 'md',
              _focusVisible: { boxShadow: 'outline' },
              _hover: { bg: 'blackAlpha.50' },
              _disabled: { opacity: 0.4, cursor: 'not-allowed' },
              px: '4',
              py: '2'
            }),
            panel: (0, eT.k0)({ pt: '2', px: '4', pb: '5' }),
            icon: (0, eT.k0)({ fontSize: '1.25em' })
          })
        }),
        { definePartsStyle: i4, defineMultiStyleConfig: i6 } = (0, eT.D)(eL.keys),
        i8 = (0, eT.gJ)('alert-fg'),
        i9 = (0, eT.gJ)('alert-bg');
      function getBg(w) {
        let { theme: S, colorScheme: C } = w,
          I = chunk_6IC2I3BY_transparentize(`${C}.200`, 0.16)(S);
        return { light: `colors.${C}.100`, dark: I };
      }
      var i7 = i6({
          baseStyle: i4({
            container: { bg: i9.reference, px: '4', py: '3' },
            title: { fontWeight: 'bold', lineHeight: '6', marginEnd: '2' },
            description: { lineHeight: '6' },
            icon: { color: i8.reference, flexShrink: 0, marginEnd: '3', w: '5', h: '6' },
            spinner: { color: i8.reference, flexShrink: 0, marginEnd: '3', w: '5', h: '5' }
          }),
          variants: {
            subtle: i4((w) => {
              let { colorScheme: S } = w,
                C = getBg(w);
              return {
                container: {
                  [i8.variable]: `colors.${S}.500`,
                  [i9.variable]: C.light,
                  _dark: { [i8.variable]: `colors.${S}.200`, [i9.variable]: C.dark }
                }
              };
            }),
            'left-accent': i4((w) => {
              let { colorScheme: S } = w,
                C = getBg(w);
              return {
                container: {
                  [i8.variable]: `colors.${S}.500`,
                  [i9.variable]: C.light,
                  _dark: { [i8.variable]: `colors.${S}.200`, [i9.variable]: C.dark },
                  paddingStart: '3',
                  borderStartWidth: '4px',
                  borderStartColor: i8.reference
                }
              };
            }),
            'top-accent': i4((w) => {
              let { colorScheme: S } = w,
                C = getBg(w);
              return {
                container: {
                  [i8.variable]: `colors.${S}.500`,
                  [i9.variable]: C.light,
                  _dark: { [i8.variable]: `colors.${S}.200`, [i9.variable]: C.dark },
                  pt: '2',
                  borderTopWidth: '4px',
                  borderTopColor: i8.reference
                }
              };
            }),
            solid: i4((w) => {
              let { colorScheme: S } = w;
              return {
                container: {
                  [i8.variable]: 'colors.white',
                  [i9.variable]: `colors.${S}.500`,
                  _dark: { [i8.variable]: 'colors.gray.900', [i9.variable]: `colors.${S}.200` },
                  color: i8.reference
                }
              };
            })
          },
          defaultProps: { variant: 'subtle', colorScheme: 'blue' }
        }),
        { definePartsStyle: at, defineMultiStyleConfig: ar } = (0, eT.D)(eF.keys),
        an = (0, eT.gJ)('avatar-border-color'),
        ai = (0, eT.gJ)('avatar-bg'),
        aa = (0, eT.gJ)('avatar-font-size'),
        ao = (0, eT.gJ)('avatar-size'),
        as = (0, eT.k0)({
          borderRadius: 'full',
          border: '0.2em solid',
          borderColor: an.reference,
          [an.variable]: 'white',
          _dark: { [an.variable]: 'colors.gray.800' }
        }),
        al = (0, eT.k0)({
          bg: ai.reference,
          fontSize: aa.reference,
          width: ao.reference,
          height: ao.reference,
          lineHeight: '1',
          [ai.variable]: 'colors.gray.200',
          _dark: { [ai.variable]: 'colors.whiteAlpha.400' }
        }),
        ac = (0, eT.k0)((w) => {
          let { name: S, theme: C } = w,
            I = S ? randomColor({ string: S }) : 'colors.gray.400',
            $ = isDark(I)(C),
            er = 'white';
          return (
            $ || (er = 'gray.800'),
            {
              bg: ai.reference,
              fontSize: aa.reference,
              color: er,
              borderColor: an.reference,
              verticalAlign: 'top',
              width: ao.reference,
              height: ao.reference,
              '&:not([data-loaded])': { [ai.variable]: I },
              [an.variable]: 'colors.white',
              _dark: { [an.variable]: 'colors.gray.800' }
            }
          );
        }),
        au = (0, eT.k0)({ fontSize: aa.reference, lineHeight: '1' });
      function chunk_Q5ZQE4MD_getSize(w) {
        let S = '100%' !== w ? eP[w] : void 0;
        return at({
          container: { [ao.variable]: null != S ? S : w, [aa.variable]: `calc(${null != S ? S : w} / 2.5)` },
          excessLabel: { [ao.variable]: null != S ? S : w, [aa.variable]: `calc(${null != S ? S : w} / 2.5)` }
        });
      }
      var ad = ar({
          baseStyle: at((w) => ({
            badge: runIfFn(as, w),
            excessLabel: runIfFn(al, w),
            container: runIfFn(ac, w),
            label: au
          })),
          sizes: {
            '2xs': chunk_Q5ZQE4MD_getSize(4),
            xs: chunk_Q5ZQE4MD_getSize(6),
            sm: chunk_Q5ZQE4MD_getSize(8),
            md: chunk_Q5ZQE4MD_getSize(12),
            lg: chunk_Q5ZQE4MD_getSize(16),
            xl: chunk_Q5ZQE4MD_getSize(24),
            '2xl': chunk_Q5ZQE4MD_getSize(32),
            full: chunk_Q5ZQE4MD_getSize('100%')
          },
          defaultProps: { size: 'md' }
        }),
        ah = {
          colors: {
            'chakra-body-text': { _light: 'gray.800', _dark: 'whiteAlpha.900' },
            'chakra-body-bg': { _light: 'white', _dark: 'gray.800' },
            'chakra-border-color': { _light: 'gray.200', _dark: 'whiteAlpha.300' },
            'chakra-inverse-text': { _light: 'white', _dark: 'gray.800' },
            'chakra-subtle-bg': { _light: 'gray.100', _dark: 'gray.700' },
            'chakra-subtle-text': { _light: 'gray.600', _dark: 'gray.400' },
            'chakra-placeholder-color': { _light: 'gray.500', _dark: 'whiteAlpha.400' }
          }
        },
        af = {
          global: {
            body: {
              fontFamily: 'body',
              color: 'chakra-body-text',
              bg: 'chakra-body-bg',
              transitionProperty: 'background-color',
              transitionDuration: 'normal',
              lineHeight: 'base'
            },
            '*::placeholder': { color: 'chakra-placeholder-color' },
            '*, *::before, &::after': { borderColor: 'chakra-border-color' }
          }
        },
        ap = { useSystemColorMode: !1, initialColorMode: 'light', cssVarPrefix: 'chakra' },
        am = {
          semanticTokens: ah,
          direction: 'ltr',
          ...eA,
          components: {
            Accordion: i3,
            Alert: i7,
            Avatar: ad,
            Badge: tV,
            Breadcrumb: i_,
            Button: iE,
            Checkbox: rS,
            CloseButton: iG,
            Code: iY,
            Container: iX,
            Divider: i1,
            Drawer: n9,
            Editable: it,
            Form: io,
            FormError: iu,
            FormLabel: ih,
            Heading: ig,
            Input: t8,
            Kbd: r8,
            Link: r7,
            List: ni,
            Menu: nm,
            Modal: nA,
            NumberInput: nV,
            PinInput: nW,
            Popover: nK,
            Progress: rg,
            Radio: rT,
            Select: rO,
            Skeleton: rL,
            SkipLink: rN,
            Slider: rX,
            Spinner: r1,
            Stat: r3,
            Switch: tf,
            Table: tv,
            Tabs: tO,
            Tag: tJ,
            Textarea: rn,
            Tooltip: rl,
            Card: iV,
            Stepper: eD
          },
          styles: af,
          config: ap
        },
        ag = { semanticTokens: ah, direction: 'ltr', components: {}, ...eA, styles: af, config: ap };
    },
    19546: function (w, S, C) {
      'use strict';
      function isFunction(w) {
        return 'function' == typeof w;
      }
      function runIfFn(w, ...S) {
        return isFunction(w) ? w(...S) : w;
      }
      C.d(S, {
        Pu: function () {
          return runIfFn;
        }
      });
    },
    19307: function (w, S, C) {
      'use strict';
      function omit(w, S) {
        let C = {};
        return (
          Object.keys(w).forEach((I) => {
            S.includes(I) || (C[I] = w[I]);
          }),
          C
        );
      }
      function get(w, S, C, I) {
        let $ = 'string' == typeof S ? S.split('.') : [S];
        for (I = 0; I < $.length && w; I += 1) w = w[$[I]];
        return void 0 === w ? C : w;
      }
      C.d(S, {
        CE: function () {
          return omit;
        },
        Wf: function () {
          return I;
        },
        YU: function () {
          return filterUndefined;
        },
        lw: function () {
          return objectFilter;
        }
      }),
        C(94216);
      var I = ((w) => {
        let S = new WeakMap();
        return (C, I, $, er) => {
          if (void 0 === C) return w(C, I, $);
          S.has(C) || S.set(C, new Map());
          let en = S.get(C);
          if (en.has(I)) return en.get(I);
          let ei = w(C, I, $, er);
          return en.set(I, ei), ei;
        };
      })(get);
      function objectFilter(w, S) {
        let C = {};
        return (
          Object.keys(w).forEach((I) => {
            let $ = w[I],
              er = S($, I, w);
            er && (C[I] = $);
          }),
          C
        );
      }
      var filterUndefined = (w) => objectFilter(w, (w) => null != w);
    }
  }
]);
