import * as fs from 'fs';
import { join } from 'path';
import { globSync } from 'glob';
import prettier from 'prettier';
import { readJson } from '../src/config-generation/config-utils';
import { apiDataSchema } from '../src/types';

const HEADER_CONTENT = `// ===========================================================================
// DO NOT EDIT THIS FILE MANUALLY!
//
// The contents have been added automatically.
// See: scripts/generate-apis.ts for more information
// ===========================================================================
`;

const GENERATED_FILES_DIR = './src/generated';
const prettierConfig = readJson('./.prettierrc');

async function generateApiDataJson() {
  const apiDataPaths = globSync('./data/apis/*/api-data.json');
  const apiDataJson = {};
  const airnodeMapping = {};
  apiDataPaths.forEach((path) => {
    const apiData = apiDataSchema.parse(readJson(path));
    apiDataJson[apiData.alias] = apiData;
    airnodeMapping[apiData.alias] = apiData.airnode;
  });

  if (!fs.existsSync(GENERATED_FILES_DIR)) {
    fs.mkdirSync(GENERATED_FILES_DIR);
  }

  const formattedContent = await prettier.format(
    `${HEADER_CONTENT}\nexport const apisData = ${JSON.stringify(
      apiDataJson
    )};\n export const airnodeAddressMap = ${JSON.stringify(airnodeMapping)};`,
    { ...prettierConfig, parser: 'typescript' }
  );
  fs.writeFileSync(join(GENERATED_FILES_DIR, 'apis.ts'), formattedContent);
}

generateApiDataJson();
